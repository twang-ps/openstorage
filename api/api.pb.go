// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/api.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Status int32

const (
	Status_STATUS_NONE                     Status = 0
	Status_STATUS_INIT                     Status = 1
	Status_STATUS_OK                       Status = 2
	Status_STATUS_OFFLINE                  Status = 3
	Status_STATUS_ERROR                    Status = 4
	Status_STATUS_NOT_IN_QUORUM            Status = 5
	Status_STATUS_DECOMMISSION             Status = 6
	Status_STATUS_MAINTENANCE              Status = 7
	Status_STATUS_STORAGE_DOWN             Status = 8
	Status_STATUS_STORAGE_DEGRADED         Status = 9
	Status_STATUS_NEEDS_REBOOT             Status = 10
	Status_STATUS_STORAGE_REBALANCE        Status = 11
	Status_STATUS_STORAGE_DRIVE_REPLACE    Status = 12
	Status_STATUS_NOT_IN_QUORUM_NO_STORAGE Status = 13
	Status_STATUS_POOLMAINTENANCE          Status = 14
	// Add statuses before MAX and update the number for MAX
	Status_STATUS_MAX Status = 15
)

var Status_name = map[int32]string{
	0:  "STATUS_NONE",
	1:  "STATUS_INIT",
	2:  "STATUS_OK",
	3:  "STATUS_OFFLINE",
	4:  "STATUS_ERROR",
	5:  "STATUS_NOT_IN_QUORUM",
	6:  "STATUS_DECOMMISSION",
	7:  "STATUS_MAINTENANCE",
	8:  "STATUS_STORAGE_DOWN",
	9:  "STATUS_STORAGE_DEGRADED",
	10: "STATUS_NEEDS_REBOOT",
	11: "STATUS_STORAGE_REBALANCE",
	12: "STATUS_STORAGE_DRIVE_REPLACE",
	13: "STATUS_NOT_IN_QUORUM_NO_STORAGE",
	14: "STATUS_POOLMAINTENANCE",
	15: "STATUS_MAX",
}
var Status_value = map[string]int32{
	"STATUS_NONE":                     0,
	"STATUS_INIT":                     1,
	"STATUS_OK":                       2,
	"STATUS_OFFLINE":                  3,
	"STATUS_ERROR":                    4,
	"STATUS_NOT_IN_QUORUM":            5,
	"STATUS_DECOMMISSION":             6,
	"STATUS_MAINTENANCE":              7,
	"STATUS_STORAGE_DOWN":             8,
	"STATUS_STORAGE_DEGRADED":         9,
	"STATUS_NEEDS_REBOOT":             10,
	"STATUS_STORAGE_REBALANCE":        11,
	"STATUS_STORAGE_DRIVE_REPLACE":    12,
	"STATUS_NOT_IN_QUORUM_NO_STORAGE": 13,
	"STATUS_POOLMAINTENANCE":          14,
	"STATUS_MAX":                      15,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{0}
}

type DriverType int32

const (
	DriverType_DRIVER_TYPE_NONE      DriverType = 0
	DriverType_DRIVER_TYPE_FILE      DriverType = 1
	DriverType_DRIVER_TYPE_BLOCK     DriverType = 2
	DriverType_DRIVER_TYPE_OBJECT    DriverType = 3
	DriverType_DRIVER_TYPE_CLUSTERED DriverType = 4
	DriverType_DRIVER_TYPE_GRAPH     DriverType = 5
)

var DriverType_name = map[int32]string{
	0: "DRIVER_TYPE_NONE",
	1: "DRIVER_TYPE_FILE",
	2: "DRIVER_TYPE_BLOCK",
	3: "DRIVER_TYPE_OBJECT",
	4: "DRIVER_TYPE_CLUSTERED",
	5: "DRIVER_TYPE_GRAPH",
}
var DriverType_value = map[string]int32{
	"DRIVER_TYPE_NONE":      0,
	"DRIVER_TYPE_FILE":      1,
	"DRIVER_TYPE_BLOCK":     2,
	"DRIVER_TYPE_OBJECT":    3,
	"DRIVER_TYPE_CLUSTERED": 4,
	"DRIVER_TYPE_GRAPH":     5,
}

func (x DriverType) String() string {
	return proto.EnumName(DriverType_name, int32(x))
}
func (DriverType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{1}
}

type FSType int32

const (
	FSType_FS_TYPE_NONE  FSType = 0
	FSType_FS_TYPE_BTRFS FSType = 1
	FSType_FS_TYPE_EXT4  FSType = 2
	FSType_FS_TYPE_FUSE  FSType = 3
	FSType_FS_TYPE_NFS   FSType = 4
	FSType_FS_TYPE_VFS   FSType = 5
	FSType_FS_TYPE_XFS   FSType = 6
	FSType_FS_TYPE_ZFS   FSType = 7
	FSType_FS_TYPE_XFSv2 FSType = 8
)

var FSType_name = map[int32]string{
	0: "FS_TYPE_NONE",
	1: "FS_TYPE_BTRFS",
	2: "FS_TYPE_EXT4",
	3: "FS_TYPE_FUSE",
	4: "FS_TYPE_NFS",
	5: "FS_TYPE_VFS",
	6: "FS_TYPE_XFS",
	7: "FS_TYPE_ZFS",
	8: "FS_TYPE_XFSv2",
}
var FSType_value = map[string]int32{
	"FS_TYPE_NONE":  0,
	"FS_TYPE_BTRFS": 1,
	"FS_TYPE_EXT4":  2,
	"FS_TYPE_FUSE":  3,
	"FS_TYPE_NFS":   4,
	"FS_TYPE_VFS":   5,
	"FS_TYPE_XFS":   6,
	"FS_TYPE_ZFS":   7,
	"FS_TYPE_XFSv2": 8,
}

func (x FSType) String() string {
	return proto.EnumName(FSType_name, int32(x))
}
func (FSType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{2}
}

type GraphDriverChangeType int32

const (
	GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_NONE     GraphDriverChangeType = 0
	GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_MODIFIED GraphDriverChangeType = 1
	GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_ADDED    GraphDriverChangeType = 2
	GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_DELETED  GraphDriverChangeType = 3
)

var GraphDriverChangeType_name = map[int32]string{
	0: "GRAPH_DRIVER_CHANGE_TYPE_NONE",
	1: "GRAPH_DRIVER_CHANGE_TYPE_MODIFIED",
	2: "GRAPH_DRIVER_CHANGE_TYPE_ADDED",
	3: "GRAPH_DRIVER_CHANGE_TYPE_DELETED",
}
var GraphDriverChangeType_value = map[string]int32{
	"GRAPH_DRIVER_CHANGE_TYPE_NONE":     0,
	"GRAPH_DRIVER_CHANGE_TYPE_MODIFIED": 1,
	"GRAPH_DRIVER_CHANGE_TYPE_ADDED":    2,
	"GRAPH_DRIVER_CHANGE_TYPE_DELETED":  3,
}

func (x GraphDriverChangeType) String() string {
	return proto.EnumName(GraphDriverChangeType_name, int32(x))
}
func (GraphDriverChangeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{3}
}

type SeverityType int32

const (
	SeverityType_SEVERITY_TYPE_NONE    SeverityType = 0
	SeverityType_SEVERITY_TYPE_ALARM   SeverityType = 1
	SeverityType_SEVERITY_TYPE_WARNING SeverityType = 2
	SeverityType_SEVERITY_TYPE_NOTIFY  SeverityType = 3
)

var SeverityType_name = map[int32]string{
	0: "SEVERITY_TYPE_NONE",
	1: "SEVERITY_TYPE_ALARM",
	2: "SEVERITY_TYPE_WARNING",
	3: "SEVERITY_TYPE_NOTIFY",
}
var SeverityType_value = map[string]int32{
	"SEVERITY_TYPE_NONE":    0,
	"SEVERITY_TYPE_ALARM":   1,
	"SEVERITY_TYPE_WARNING": 2,
	"SEVERITY_TYPE_NOTIFY":  3,
}

func (x SeverityType) String() string {
	return proto.EnumName(SeverityType_name, int32(x))
}
func (SeverityType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{4}
}

type ResourceType int32

const (
	ResourceType_RESOURCE_TYPE_NONE    ResourceType = 0
	ResourceType_RESOURCE_TYPE_VOLUME  ResourceType = 1
	ResourceType_RESOURCE_TYPE_NODE    ResourceType = 2
	ResourceType_RESOURCE_TYPE_CLUSTER ResourceType = 3
	ResourceType_RESOURCE_TYPE_DRIVE   ResourceType = 4
	ResourceType_RESOURCE_TYPE_POOL    ResourceType = 5
)

var ResourceType_name = map[int32]string{
	0: "RESOURCE_TYPE_NONE",
	1: "RESOURCE_TYPE_VOLUME",
	2: "RESOURCE_TYPE_NODE",
	3: "RESOURCE_TYPE_CLUSTER",
	4: "RESOURCE_TYPE_DRIVE",
	5: "RESOURCE_TYPE_POOL",
}
var ResourceType_value = map[string]int32{
	"RESOURCE_TYPE_NONE":    0,
	"RESOURCE_TYPE_VOLUME":  1,
	"RESOURCE_TYPE_NODE":    2,
	"RESOURCE_TYPE_CLUSTER": 3,
	"RESOURCE_TYPE_DRIVE":   4,
	"RESOURCE_TYPE_POOL":    5,
}

func (x ResourceType) String() string {
	return proto.EnumName(ResourceType_name, int32(x))
}
func (ResourceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{5}
}

type AlertActionType int32

const (
	AlertActionType_ALERT_ACTION_TYPE_NONE   AlertActionType = 0
	AlertActionType_ALERT_ACTION_TYPE_DELETE AlertActionType = 1
	AlertActionType_ALERT_ACTION_TYPE_CREATE AlertActionType = 2
	AlertActionType_ALERT_ACTION_TYPE_UPDATE AlertActionType = 3
)

var AlertActionType_name = map[int32]string{
	0: "ALERT_ACTION_TYPE_NONE",
	1: "ALERT_ACTION_TYPE_DELETE",
	2: "ALERT_ACTION_TYPE_CREATE",
	3: "ALERT_ACTION_TYPE_UPDATE",
}
var AlertActionType_value = map[string]int32{
	"ALERT_ACTION_TYPE_NONE":   0,
	"ALERT_ACTION_TYPE_DELETE": 1,
	"ALERT_ACTION_TYPE_CREATE": 2,
	"ALERT_ACTION_TYPE_UPDATE": 3,
}

func (x AlertActionType) String() string {
	return proto.EnumName(AlertActionType_name, int32(x))
}
func (AlertActionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{6}
}

type VolumeActionParam int32

const (
	VolumeActionParam_VOLUME_ACTION_PARAM_NONE VolumeActionParam = 0
	// Maps to the boolean value false
	VolumeActionParam_VOLUME_ACTION_PARAM_OFF VolumeActionParam = 1
	// Maps to the boolean value true.
	VolumeActionParam_VOLUME_ACTION_PARAM_ON VolumeActionParam = 2
)

var VolumeActionParam_name = map[int32]string{
	0: "VOLUME_ACTION_PARAM_NONE",
	1: "VOLUME_ACTION_PARAM_OFF",
	2: "VOLUME_ACTION_PARAM_ON",
}
var VolumeActionParam_value = map[string]int32{
	"VOLUME_ACTION_PARAM_NONE": 0,
	"VOLUME_ACTION_PARAM_OFF":  1,
	"VOLUME_ACTION_PARAM_ON":   2,
}

func (x VolumeActionParam) String() string {
	return proto.EnumName(VolumeActionParam_name, int32(x))
}
func (VolumeActionParam) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{7}
}

type CosType int32

const (
	CosType_NONE   CosType = 0
	CosType_LOW    CosType = 1
	CosType_MEDIUM CosType = 2
	CosType_HIGH   CosType = 3
)

var CosType_name = map[int32]string{
	0: "NONE",
	1: "LOW",
	2: "MEDIUM",
	3: "HIGH",
}
var CosType_value = map[string]int32{
	"NONE":   0,
	"LOW":    1,
	"MEDIUM": 2,
	"HIGH":   3,
}

func (x CosType) String() string {
	return proto.EnumName(CosType_name, int32(x))
}
func (CosType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{8}
}

type IoProfile int32

const (
	IoProfile_IO_PROFILE_SEQUENTIAL   IoProfile = 0
	IoProfile_IO_PROFILE_RANDOM       IoProfile = 1
	IoProfile_IO_PROFILE_DB           IoProfile = 2
	IoProfile_IO_PROFILE_DB_REMOTE    IoProfile = 3
	IoProfile_IO_PROFILE_CMS          IoProfile = 4
	IoProfile_IO_PROFILE_SYNC_SHARED  IoProfile = 5
	IoProfile_IO_PROFILE_AUTO         IoProfile = 6
	IoProfile_IO_PROFILE_NONE         IoProfile = 7
	IoProfile_IO_PROFILE_JOURNAL      IoProfile = 8
	IoProfile_IO_PROFILE_AUTO_JOURNAL IoProfile = 9
)

var IoProfile_name = map[int32]string{
	0: "IO_PROFILE_SEQUENTIAL",
	1: "IO_PROFILE_RANDOM",
	2: "IO_PROFILE_DB",
	3: "IO_PROFILE_DB_REMOTE",
	4: "IO_PROFILE_CMS",
	5: "IO_PROFILE_SYNC_SHARED",
	6: "IO_PROFILE_AUTO",
	7: "IO_PROFILE_NONE",
	8: "IO_PROFILE_JOURNAL",
	9: "IO_PROFILE_AUTO_JOURNAL",
}
var IoProfile_value = map[string]int32{
	"IO_PROFILE_SEQUENTIAL":   0,
	"IO_PROFILE_RANDOM":       1,
	"IO_PROFILE_DB":           2,
	"IO_PROFILE_DB_REMOTE":    3,
	"IO_PROFILE_CMS":          4,
	"IO_PROFILE_SYNC_SHARED":  5,
	"IO_PROFILE_AUTO":         6,
	"IO_PROFILE_NONE":         7,
	"IO_PROFILE_JOURNAL":      8,
	"IO_PROFILE_AUTO_JOURNAL": 9,
}

func (x IoProfile) String() string {
	return proto.EnumName(IoProfile_name, int32(x))
}
func (IoProfile) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{9}
}

// VolumeState represents the state of a volume.
type VolumeState int32

const (
	VolumeState_VOLUME_STATE_NONE VolumeState = 0
	// Volume is transitioning to new state
	VolumeState_VOLUME_STATE_PENDING VolumeState = 1
	// Volume is ready to be assigned to a container
	VolumeState_VOLUME_STATE_AVAILABLE VolumeState = 2
	// Volume is attached to container
	VolumeState_VOLUME_STATE_ATTACHED VolumeState = 3
	// Volume is detached but associated with a container
	VolumeState_VOLUME_STATE_DETACHED VolumeState = 4
	// Volume detach is in progress
	VolumeState_VOLUME_STATE_DETATCHING VolumeState = 5
	// Volume is in error state
	VolumeState_VOLUME_STATE_ERROR VolumeState = 6
	// Volume is deleted, it will remain in this state
	// while resources are asynchronously reclaimed
	VolumeState_VOLUME_STATE_DELETED VolumeState = 7
	// Volume is trying to be detached
	VolumeState_VOLUME_STATE_TRY_DETACHING VolumeState = 8
	// Volume is undergoing restore
	VolumeState_VOLUME_STATE_RESTORE VolumeState = 9
)

var VolumeState_name = map[int32]string{
	0: "VOLUME_STATE_NONE",
	1: "VOLUME_STATE_PENDING",
	2: "VOLUME_STATE_AVAILABLE",
	3: "VOLUME_STATE_ATTACHED",
	4: "VOLUME_STATE_DETACHED",
	5: "VOLUME_STATE_DETATCHING",
	6: "VOLUME_STATE_ERROR",
	7: "VOLUME_STATE_DELETED",
	8: "VOLUME_STATE_TRY_DETACHING",
	9: "VOLUME_STATE_RESTORE",
}
var VolumeState_value = map[string]int32{
	"VOLUME_STATE_NONE":          0,
	"VOLUME_STATE_PENDING":       1,
	"VOLUME_STATE_AVAILABLE":     2,
	"VOLUME_STATE_ATTACHED":      3,
	"VOLUME_STATE_DETACHED":      4,
	"VOLUME_STATE_DETATCHING":    5,
	"VOLUME_STATE_ERROR":         6,
	"VOLUME_STATE_DELETED":       7,
	"VOLUME_STATE_TRY_DETACHING": 8,
	"VOLUME_STATE_RESTORE":       9,
}

func (x VolumeState) String() string {
	return proto.EnumName(VolumeState_name, int32(x))
}
func (VolumeState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{10}
}

// VolumeStatus represents a health status for a volume.
type VolumeStatus int32

const (
	VolumeStatus_VOLUME_STATUS_NONE VolumeStatus = 0
	// Volume is not present
	VolumeStatus_VOLUME_STATUS_NOT_PRESENT VolumeStatus = 1
	// Volume is healthy
	VolumeStatus_VOLUME_STATUS_UP VolumeStatus = 2
	// Volume is in fail mode
	VolumeStatus_VOLUME_STATUS_DOWN VolumeStatus = 3
	// Volume is up but with degraded performance
	// In a RAID group, this may indicate a problem with one or more drives
	VolumeStatus_VOLUME_STATUS_DEGRADED VolumeStatus = 4
)

var VolumeStatus_name = map[int32]string{
	0: "VOLUME_STATUS_NONE",
	1: "VOLUME_STATUS_NOT_PRESENT",
	2: "VOLUME_STATUS_UP",
	3: "VOLUME_STATUS_DOWN",
	4: "VOLUME_STATUS_DEGRADED",
}
var VolumeStatus_value = map[string]int32{
	"VOLUME_STATUS_NONE":        0,
	"VOLUME_STATUS_NOT_PRESENT": 1,
	"VOLUME_STATUS_UP":          2,
	"VOLUME_STATUS_DOWN":        3,
	"VOLUME_STATUS_DEGRADED":    4,
}

func (x VolumeStatus) String() string {
	return proto.EnumName(VolumeStatus_name, int32(x))
}
func (VolumeStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{11}
}

type FilesystemHealthStatus int32

const (
	// filesystem health status is unknown
	FilesystemHealthStatus_FS_HEALTH_STATUS_UNKNOWN FilesystemHealthStatus = 0
	// filesystem is a healthy
	FilesystemHealthStatus_FS_HEALTH_STATUS_HEALTHY FilesystemHealthStatus = 1
	// filesystem has errors, but can be fixed safely
	FilesystemHealthStatus_FS_HEALTH_STATUS_SAFE_TO_FIX FilesystemHealthStatus = 2
	// filesystem has errors, these cannot be fixed automatically,
	// user needs to review the reported errors and take appropriate action
	FilesystemHealthStatus_FS_HEALTH_STATUS_NEEDS_INSPECTION FilesystemHealthStatus = 3
)

var FilesystemHealthStatus_name = map[int32]string{
	0: "FS_HEALTH_STATUS_UNKNOWN",
	1: "FS_HEALTH_STATUS_HEALTHY",
	2: "FS_HEALTH_STATUS_SAFE_TO_FIX",
	3: "FS_HEALTH_STATUS_NEEDS_INSPECTION",
}
var FilesystemHealthStatus_value = map[string]int32{
	"FS_HEALTH_STATUS_UNKNOWN":          0,
	"FS_HEALTH_STATUS_HEALTHY":          1,
	"FS_HEALTH_STATUS_SAFE_TO_FIX":      2,
	"FS_HEALTH_STATUS_NEEDS_INSPECTION": 3,
}

func (x FilesystemHealthStatus) String() string {
	return proto.EnumName(FilesystemHealthStatus_name, int32(x))
}
func (FilesystemHealthStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{12}
}

type StorageMedium int32

const (
	// Magnetic spinning disk.
	StorageMedium_STORAGE_MEDIUM_MAGNETIC StorageMedium = 0
	// SSD disk
	StorageMedium_STORAGE_MEDIUM_SSD StorageMedium = 1
	// NVME disk
	StorageMedium_STORAGE_MEDIUM_NVME StorageMedium = 2
)

var StorageMedium_name = map[int32]string{
	0: "STORAGE_MEDIUM_MAGNETIC",
	1: "STORAGE_MEDIUM_SSD",
	2: "STORAGE_MEDIUM_NVME",
}
var StorageMedium_value = map[string]int32{
	"STORAGE_MEDIUM_MAGNETIC": 0,
	"STORAGE_MEDIUM_SSD":      1,
	"STORAGE_MEDIUM_NVME":     2,
}

func (x StorageMedium) String() string {
	return proto.EnumName(StorageMedium_name, int32(x))
}
func (StorageMedium) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{13}
}

type AttachState int32

const (
	// Attached and available externally
	AttachState_ATTACH_STATE_EXTERNAL AttachState = 0
	// Attached but only available internally
	AttachState_ATTACH_STATE_INTERNAL AttachState = 1
	// Switching from External to Internal
	AttachState_ATTACH_STATE_INTERNAL_SWITCH AttachState = 2
)

var AttachState_name = map[int32]string{
	0: "ATTACH_STATE_EXTERNAL",
	1: "ATTACH_STATE_INTERNAL",
	2: "ATTACH_STATE_INTERNAL_SWITCH",
}
var AttachState_value = map[string]int32{
	"ATTACH_STATE_EXTERNAL":        0,
	"ATTACH_STATE_INTERNAL":        1,
	"ATTACH_STATE_INTERNAL_SWITCH": 2,
}

func (x AttachState) String() string {
	return proto.EnumName(AttachState_name, int32(x))
}
func (AttachState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{14}
}

type OperationFlags int32

const (
	OperationFlags_OP_FLAGS_UNKNOWN OperationFlags = 0
	OperationFlags_OP_FLAGS_NONE    OperationFlags = 1
	// Perform a force_detach during detach operation
	OperationFlags_OP_FLAGS_DETACH_FORCE OperationFlags = 2
)

var OperationFlags_name = map[int32]string{
	0: "OP_FLAGS_UNKNOWN",
	1: "OP_FLAGS_NONE",
	2: "OP_FLAGS_DETACH_FORCE",
}
var OperationFlags_value = map[string]int32{
	"OP_FLAGS_UNKNOWN":      0,
	"OP_FLAGS_NONE":         1,
	"OP_FLAGS_DETACH_FORCE": 2,
}

func (x OperationFlags) String() string {
	return proto.EnumName(OperationFlags_name, int32(x))
}
func (OperationFlags) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{15}
}

type HardwareType int32

const (
	// When we do not know the machine type alsp the default
	HardwareType_UnknownMachine HardwareType = 0
	// when we are running on virtual machine
	HardwareType_VirtualMachine HardwareType = 1
	// when we are running on physical hardware
	HardwareType_BareMetalMachine HardwareType = 2
)

var HardwareType_name = map[int32]string{
	0: "UnknownMachine",
	1: "VirtualMachine",
	2: "BareMetalMachine",
}
var HardwareType_value = map[string]int32{
	"UnknownMachine":   0,
	"VirtualMachine":   1,
	"BareMetalMachine": 2,
}

func (x HardwareType) String() string {
	return proto.EnumName(HardwareType_name, int32(x))
}
func (HardwareType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{16}
}

// ExportProtocol defines how the device is exported..
type ExportProtocol int32

const (
	// Invalid uninitialized value
	ExportProtocol_INVALID ExportProtocol = 0
	// PXD the volume is exported over Portworx block interace.
	ExportProtocol_PXD ExportProtocol = 1
	// ISCSI the volume is exported over ISCSI.
	ExportProtocol_ISCSI ExportProtocol = 2
	// NFS the volume is exported over NFS.
	ExportProtocol_NFS ExportProtocol = 3
	// Custom the volume is exported over custom interace.
	ExportProtocol_CUSTOM ExportProtocol = 4
)

var ExportProtocol_name = map[int32]string{
	0: "INVALID",
	1: "PXD",
	2: "ISCSI",
	3: "NFS",
	4: "CUSTOM",
}
var ExportProtocol_value = map[string]int32{
	"INVALID": 0,
	"PXD":     1,
	"ISCSI":   2,
	"NFS":     3,
	"CUSTOM":  4,
}

func (x ExportProtocol) String() string {
	return proto.EnumName(ExportProtocol_name, int32(x))
}
func (ExportProtocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{17}
}

// ProxyProtocol defines the protocol used for proxy.
type ProxyProtocol int32

const (
	// Invalid uninitialized value
	ProxyProtocol_PROXY_PROTOCOL_INVALID ProxyProtocol = 0
	// NFS indicates that the external data source is NFS and the volume
	// will be reflected over NFS protocol
	ProxyProtocol_PROXY_PROTOCOL_NFS ProxyProtocol = 1
	// S3 indicates that the external data source is an object store.
	ProxyProtocol_PROXY_PROTOCOL_S3 ProxyProtocol = 2
	// PXD indicates that the external data source is a Portworx block volume.
	ProxyProtocol_PROXY_PROTOCOL_PXD ProxyProtocol = 3
	// PURE_BLOCK indicates that the external data source is a pure_block volume.
	ProxyProtocol_PROXY_PROTOCOL_PURE_BLOCK ProxyProtocol = 4
	// PURE_FILE indicates that the external data source is a pure_file volume.
	ProxyProtocol_PROXY_PROTOCOL_PURE_FILE ProxyProtocol = 5
)

var ProxyProtocol_name = map[int32]string{
	0: "PROXY_PROTOCOL_INVALID",
	1: "PROXY_PROTOCOL_NFS",
	2: "PROXY_PROTOCOL_S3",
	3: "PROXY_PROTOCOL_PXD",
	4: "PROXY_PROTOCOL_PURE_BLOCK",
	5: "PROXY_PROTOCOL_PURE_FILE",
}
var ProxyProtocol_value = map[string]int32{
	"PROXY_PROTOCOL_INVALID":    0,
	"PROXY_PROTOCOL_NFS":        1,
	"PROXY_PROTOCOL_S3":         2,
	"PROXY_PROTOCOL_PXD":        3,
	"PROXY_PROTOCOL_PURE_BLOCK": 4,
	"PROXY_PROTOCOL_PURE_FILE":  5,
}

func (x ProxyProtocol) String() string {
	return proto.EnumName(ProxyProtocol_name, int32(x))
}
func (ProxyProtocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{18}
}

// fastpath extensions
type FastpathStatus int32

const (
	// backward compatible state
	FastpathStatus_FASTPATH_UNKNOWN FastpathStatus = 0
	// fastpath activated and enabled
	FastpathStatus_FASTPATH_ACTIVE FastpathStatus = 1
	// fastpath inactive
	FastpathStatus_FASTPATH_INACTIVE FastpathStatus = 2
	// fastpath unsupported, disabled
	FastpathStatus_FASTPATH_UNSUPPORTED FastpathStatus = 3
	// fastpath operation setup in progress
	FastpathStatus_FASTPATH_PENDING FastpathStatus = 4
	// fastpath error'd, possible stuck failure
	FastpathStatus_FASTPATH_ERRORED FastpathStatus = 5
)

var FastpathStatus_name = map[int32]string{
	0: "FASTPATH_UNKNOWN",
	1: "FASTPATH_ACTIVE",
	2: "FASTPATH_INACTIVE",
	3: "FASTPATH_UNSUPPORTED",
	4: "FASTPATH_PENDING",
	5: "FASTPATH_ERRORED",
}
var FastpathStatus_value = map[string]int32{
	"FASTPATH_UNKNOWN":     0,
	"FASTPATH_ACTIVE":      1,
	"FASTPATH_INACTIVE":    2,
	"FASTPATH_UNSUPPORTED": 3,
	"FASTPATH_PENDING":     4,
	"FASTPATH_ERRORED":     5,
}

func (x FastpathStatus) String() string {
	return proto.EnumName(FastpathStatus_name, int32(x))
}
func (FastpathStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{19}
}

type FastpathProtocol int32

const (
	FastpathProtocol_FASTPATH_PROTO_UNKNOWN    FastpathProtocol = 0
	FastpathProtocol_FASTPATH_PROTO_NVMEOF_TCP FastpathProtocol = 1
	FastpathProtocol_FASTPATH_PROTO_ISCSI      FastpathProtocol = 2
	FastpathProtocol_FASTPATH_PROTO_LOCAL      FastpathProtocol = 3
)

var FastpathProtocol_name = map[int32]string{
	0: "FASTPATH_PROTO_UNKNOWN",
	1: "FASTPATH_PROTO_NVMEOF_TCP",
	2: "FASTPATH_PROTO_ISCSI",
	3: "FASTPATH_PROTO_LOCAL",
}
var FastpathProtocol_value = map[string]int32{
	"FASTPATH_PROTO_UNKNOWN":    0,
	"FASTPATH_PROTO_NVMEOF_TCP": 1,
	"FASTPATH_PROTO_ISCSI":      2,
	"FASTPATH_PROTO_LOCAL":      3,
}

func (x FastpathProtocol) String() string {
	return proto.EnumName(FastpathProtocol_name, int32(x))
}
func (FastpathProtocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{20}
}

type NearSyncReplicationStrategy int32

const (
	NearSyncReplicationStrategy_NEAR_SYNC_STRATEGY_NONE       NearSyncReplicationStrategy = 0
	NearSyncReplicationStrategy_NEAR_SYNC_STRATEGY_AGGRESSIVE NearSyncReplicationStrategy = 1
	NearSyncReplicationStrategy_NEAR_SYNC_STRATEGY_OPTIMIZED  NearSyncReplicationStrategy = 2
)

var NearSyncReplicationStrategy_name = map[int32]string{
	0: "NEAR_SYNC_STRATEGY_NONE",
	1: "NEAR_SYNC_STRATEGY_AGGRESSIVE",
	2: "NEAR_SYNC_STRATEGY_OPTIMIZED",
}
var NearSyncReplicationStrategy_value = map[string]int32{
	"NEAR_SYNC_STRATEGY_NONE":       0,
	"NEAR_SYNC_STRATEGY_AGGRESSIVE": 1,
	"NEAR_SYNC_STRATEGY_OPTIMIZED":  2,
}

func (x NearSyncReplicationStrategy) String() string {
	return proto.EnumName(NearSyncReplicationStrategy_name, int32(x))
}
func (NearSyncReplicationStrategy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{21}
}

type AnonymousBucketAccessMode int32

const (
	AnonymousBucketAccessMode_UnknownBucketAccessMode AnonymousBucketAccessMode = 0
	// Default, disallow uncredentialed access to the backend storage.
	AnonymousBucketAccessMode_Private AnonymousBucketAccessMode = 1
	// Read only, uncredentialed users can call ListBucket and GetObject.
	AnonymousBucketAccessMode_ReadOnly AnonymousBucketAccessMode = 2
	// Write only, uncredentialed users can only call PutObject.
	AnonymousBucketAccessMode_WriteOnly AnonymousBucketAccessMode = 3
	// Read/Write, uncredentialed users can read objects as well as PutObject.
	AnonymousBucketAccessMode_ReadWrite AnonymousBucketAccessMode = 4
)

var AnonymousBucketAccessMode_name = map[int32]string{
	0: "UnknownBucketAccessMode",
	1: "Private",
	2: "ReadOnly",
	3: "WriteOnly",
	4: "ReadWrite",
}
var AnonymousBucketAccessMode_value = map[string]int32{
	"UnknownBucketAccessMode": 0,
	"Private":                 1,
	"ReadOnly":                2,
	"WriteOnly":               3,
	"ReadWrite":               4,
}

func (x AnonymousBucketAccessMode) String() string {
	return proto.EnumName(AnonymousBucketAccessMode_name, int32(x))
}
func (AnonymousBucketAccessMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{22}
}

// Defines times of day
type SdkTimeWeekday int32

const (
	// Sunday
	SdkTimeWeekday_SdkTimeWeekdaySunday SdkTimeWeekday = 0
	// Monday
	SdkTimeWeekday_SdkTimeWeekdayMonday SdkTimeWeekday = 1
	// Tuesday
	SdkTimeWeekday_SdkTimeWeekdayTuesday SdkTimeWeekday = 2
	// Wednesday
	SdkTimeWeekday_SdkTimeWeekdayWednesday SdkTimeWeekday = 3
	// Thursday
	SdkTimeWeekday_SdkTimeWeekdayThursday SdkTimeWeekday = 4
	// Friday
	SdkTimeWeekday_SdkTimeWeekdayFriday SdkTimeWeekday = 5
	// Saturday
	SdkTimeWeekday_SdkTimeWeekdaySaturday SdkTimeWeekday = 6
)

var SdkTimeWeekday_name = map[int32]string{
	0: "SdkTimeWeekdaySunday",
	1: "SdkTimeWeekdayMonday",
	2: "SdkTimeWeekdayTuesday",
	3: "SdkTimeWeekdayWednesday",
	4: "SdkTimeWeekdayThursday",
	5: "SdkTimeWeekdayFriday",
	6: "SdkTimeWeekdaySaturday",
}
var SdkTimeWeekday_value = map[string]int32{
	"SdkTimeWeekdaySunday":    0,
	"SdkTimeWeekdayMonday":    1,
	"SdkTimeWeekdayTuesday":   2,
	"SdkTimeWeekdayWednesday": 3,
	"SdkTimeWeekdayThursday":  4,
	"SdkTimeWeekdayFriday":    5,
	"SdkTimeWeekdaySaturday":  6,
}

func (x SdkTimeWeekday) String() string {
	return proto.EnumName(SdkTimeWeekday_name, int32(x))
}
func (SdkTimeWeekday) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{23}
}

// StorageRebalanceJobState is an enum for state of the current rebalance operation
type StorageRebalanceJobState int32

const (
	// Pending indicates job is still pending and has not started work
	StorageRebalanceJobState_PENDING StorageRebalanceJobState = 0
	// Running indicates job is actively running
	StorageRebalanceJobState_RUNNING StorageRebalanceJobState = 1
	// Done indicates job has finished processing
	StorageRebalanceJobState_DONE StorageRebalanceJobState = 2
	// Paused indicates job is paused
	StorageRebalanceJobState_PAUSED StorageRebalanceJobState = 3
	// Cancelled indicates job is cancelled
	StorageRebalanceJobState_CANCELLED StorageRebalanceJobState = 4
)

var StorageRebalanceJobState_name = map[int32]string{
	0: "PENDING",
	1: "RUNNING",
	2: "DONE",
	3: "PAUSED",
	4: "CANCELLED",
}
var StorageRebalanceJobState_value = map[string]int32{
	"PENDING":   0,
	"RUNNING":   1,
	"DONE":      2,
	"PAUSED":    3,
	"CANCELLED": 4,
}

func (x StorageRebalanceJobState) String() string {
	return proto.EnumName(StorageRebalanceJobState_name, int32(x))
}
func (StorageRebalanceJobState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{24}
}

// CloudBackup operations types
type SdkCloudBackupOpType int32

const (
	// Unknown
	SdkCloudBackupOpType_SdkCloudBackupOpTypeUnknown SdkCloudBackupOpType = 0
	// Backup
	SdkCloudBackupOpType_SdkCloudBackupOpTypeBackupOp SdkCloudBackupOpType = 1
	// Restore
	SdkCloudBackupOpType_SdkCloudBackupOpTypeRestoreOp SdkCloudBackupOpType = 2
	// NearSync clone
	SdkCloudBackupOpType_SdkNearSyncOpTypeCloneOp SdkCloudBackupOpType = 3
	// NearSync replication add
	SdkCloudBackupOpType_SdkNearSyncOpTypeReplAddOp SdkCloudBackupOpType = 4
	// NearSync restore
	SdkCloudBackupOpType_SdkNearSyncOpTypeRestoreOp SdkCloudBackupOpType = 5
)

var SdkCloudBackupOpType_name = map[int32]string{
	0: "SdkCloudBackupOpTypeUnknown",
	1: "SdkCloudBackupOpTypeBackupOp",
	2: "SdkCloudBackupOpTypeRestoreOp",
	3: "SdkNearSyncOpTypeCloneOp",
	4: "SdkNearSyncOpTypeReplAddOp",
	5: "SdkNearSyncOpTypeRestoreOp",
}
var SdkCloudBackupOpType_value = map[string]int32{
	"SdkCloudBackupOpTypeUnknown":   0,
	"SdkCloudBackupOpTypeBackupOp":  1,
	"SdkCloudBackupOpTypeRestoreOp": 2,
	"SdkNearSyncOpTypeCloneOp":      3,
	"SdkNearSyncOpTypeReplAddOp":    4,
	"SdkNearSyncOpTypeRestoreOp":    5,
}

func (x SdkCloudBackupOpType) String() string {
	return proto.EnumName(SdkCloudBackupOpType_name, int32(x))
}
func (SdkCloudBackupOpType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{25}
}

// CloudBackup status types
type SdkCloudBackupStatusType int32

const (
	// Unkonwn
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypeUnknown SdkCloudBackupStatusType = 0
	// Not started
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypeNotStarted SdkCloudBackupStatusType = 1
	// Done
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypeDone SdkCloudBackupStatusType = 2
	// Aborted
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypeAborted SdkCloudBackupStatusType = 3
	// Paused
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypePaused SdkCloudBackupStatusType = 4
	// Stopped
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypeStopped SdkCloudBackupStatusType = 5
	// Active
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypeActive SdkCloudBackupStatusType = 6
	// Failed
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypeFailed SdkCloudBackupStatusType = 7
	// Queued
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypeQueued SdkCloudBackupStatusType = 8
	// Invalid, used by enumerate, includes failed,
	// stopped and aborted
	SdkCloudBackupStatusType_SdkCloudBackupStatusTypeInvalid SdkCloudBackupStatusType = 9
	// Near sync
	// Not started
	SdkCloudBackupStatusType_SdkNearSyncStatusTypeNotStarted SdkCloudBackupStatusType = 10
	// Done
	SdkCloudBackupStatusType_SdkNearSyncStatusTypeDone SdkCloudBackupStatusType = 11
	// Paused
	SdkCloudBackupStatusType_SdkNearSyncStatusTypePaused SdkCloudBackupStatusType = 12
	// Stopped
	SdkCloudBackupStatusType_SdkNearSyncStatusTypeStopped SdkCloudBackupStatusType = 13
	// Active
	SdkCloudBackupStatusType_SdkNearSyncStatusTypeActive SdkCloudBackupStatusType = 14
	// Failed
	SdkCloudBackupStatusType_SdkNearSyncStatusTypeFailed SdkCloudBackupStatusType = 15
	// Invalid
	SdkCloudBackupStatusType_SdkNearSyncStatusTypeInvalid SdkCloudBackupStatusType = 16
)

var SdkCloudBackupStatusType_name = map[int32]string{
	0:  "SdkCloudBackupStatusTypeUnknown",
	1:  "SdkCloudBackupStatusTypeNotStarted",
	2:  "SdkCloudBackupStatusTypeDone",
	3:  "SdkCloudBackupStatusTypeAborted",
	4:  "SdkCloudBackupStatusTypePaused",
	5:  "SdkCloudBackupStatusTypeStopped",
	6:  "SdkCloudBackupStatusTypeActive",
	7:  "SdkCloudBackupStatusTypeFailed",
	8:  "SdkCloudBackupStatusTypeQueued",
	9:  "SdkCloudBackupStatusTypeInvalid",
	10: "SdkNearSyncStatusTypeNotStarted",
	11: "SdkNearSyncStatusTypeDone",
	12: "SdkNearSyncStatusTypePaused",
	13: "SdkNearSyncStatusTypeStopped",
	14: "SdkNearSyncStatusTypeActive",
	15: "SdkNearSyncStatusTypeFailed",
	16: "SdkNearSyncStatusTypeInvalid",
}
var SdkCloudBackupStatusType_value = map[string]int32{
	"SdkCloudBackupStatusTypeUnknown":    0,
	"SdkCloudBackupStatusTypeNotStarted": 1,
	"SdkCloudBackupStatusTypeDone":       2,
	"SdkCloudBackupStatusTypeAborted":    3,
	"SdkCloudBackupStatusTypePaused":     4,
	"SdkCloudBackupStatusTypeStopped":    5,
	"SdkCloudBackupStatusTypeActive":     6,
	"SdkCloudBackupStatusTypeFailed":     7,
	"SdkCloudBackupStatusTypeQueued":     8,
	"SdkCloudBackupStatusTypeInvalid":    9,
	"SdkNearSyncStatusTypeNotStarted":    10,
	"SdkNearSyncStatusTypeDone":          11,
	"SdkNearSyncStatusTypePaused":        12,
	"SdkNearSyncStatusTypeStopped":       13,
	"SdkNearSyncStatusTypeActive":        14,
	"SdkNearSyncStatusTypeFailed":        15,
	"SdkNearSyncStatusTypeInvalid":       16,
}

func (x SdkCloudBackupStatusType) String() string {
	return proto.EnumName(SdkCloudBackupStatusType_name, int32(x))
}
func (SdkCloudBackupStatusType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{26}
}

// SdkCloudBackupRequestedState defines states to set a specified backup or restore
// to or from a cloud provider
type SdkCloudBackupRequestedState int32

const (
	// Unknown state
	SdkCloudBackupRequestedState_SdkCloudBackupRequestedStateUnknown SdkCloudBackupRequestedState = 0
	// Pause the backup or restore
	SdkCloudBackupRequestedState_SdkCloudBackupRequestedStatePause SdkCloudBackupRequestedState = 1
	// Resume the backup or restore
	SdkCloudBackupRequestedState_SdkCloudBackupRequestedStateResume SdkCloudBackupRequestedState = 2
	// Stop a backup or restore
	SdkCloudBackupRequestedState_SdkCloudBackupRequestedStateStop SdkCloudBackupRequestedState = 3
	// Pause the near sync migrate
	SdkCloudBackupRequestedState_SdkNearSyncRequestedStatePause SdkCloudBackupRequestedState = 4
	// Resume the near sync migrate
	SdkCloudBackupRequestedState_SdkNearSyncRequestedStateResume SdkCloudBackupRequestedState = 5
	// Stop a near sync migrate
	SdkCloudBackupRequestedState_SdkNearSyncRequestedStateStop SdkCloudBackupRequestedState = 6
)

var SdkCloudBackupRequestedState_name = map[int32]string{
	0: "SdkCloudBackupRequestedStateUnknown",
	1: "SdkCloudBackupRequestedStatePause",
	2: "SdkCloudBackupRequestedStateResume",
	3: "SdkCloudBackupRequestedStateStop",
	4: "SdkNearSyncRequestedStatePause",
	5: "SdkNearSyncRequestedStateResume",
	6: "SdkNearSyncRequestedStateStop",
}
var SdkCloudBackupRequestedState_value = map[string]int32{
	"SdkCloudBackupRequestedStateUnknown": 0,
	"SdkCloudBackupRequestedStatePause":   1,
	"SdkCloudBackupRequestedStateResume":  2,
	"SdkCloudBackupRequestedStateStop":    3,
	"SdkNearSyncRequestedStatePause":      4,
	"SdkNearSyncRequestedStateResume":     5,
	"SdkNearSyncRequestedStateStop":       6,
}

func (x SdkCloudBackupRequestedState) String() string {
	return proto.EnumName(SdkCloudBackupRequestedState_name, int32(x))
}
func (SdkCloudBackupRequestedState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{27}
}

// Defines the types of enforcement on the given rules
type EnforcementType int32

const (
	// This specifies that the rule is required and must be strictly enforced
	EnforcementType_required EnforcementType = 0
	// This specifies that the rule is preferred and can be best effort
	EnforcementType_preferred EnforcementType = 1
)

var EnforcementType_name = map[int32]string{
	0: "required",
	1: "preferred",
}
var EnforcementType_value = map[string]int32{
	"required":  0,
	"preferred": 1,
}

func (x EnforcementType) String() string {
	return proto.EnumName(EnforcementType_name, int32(x))
}
func (EnforcementType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{28}
}

type RestoreParamBoolType int32

const (
	RestoreParamBoolType_PARAM_BKUPSRC RestoreParamBoolType = 0
	RestoreParamBoolType_PARAM_FALSE   RestoreParamBoolType = 1
	RestoreParamBoolType_PARAM_TRUE    RestoreParamBoolType = 2
)

var RestoreParamBoolType_name = map[int32]string{
	0: "PARAM_BKUPSRC",
	1: "PARAM_FALSE",
	2: "PARAM_TRUE",
}
var RestoreParamBoolType_value = map[string]int32{
	"PARAM_BKUPSRC": 0,
	"PARAM_FALSE":   1,
	"PARAM_TRUE":    2,
}

func (x RestoreParamBoolType) String() string {
	return proto.EnumName(RestoreParamBoolType_name, int32(x))
}
func (RestoreParamBoolType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{29}
}

type Xattr_Value int32

const (
	// Value is uninitialized or unknown
	Xattr_UNSPECIFIED Xattr_Value = 0
	// Enable on-demand copy-on-write on the volume
	Xattr_COW_ON_DEMAND Xattr_Value = 1
)

var Xattr_Value_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "COW_ON_DEMAND",
}
var Xattr_Value_value = map[string]int32{
	"UNSPECIFIED":   0,
	"COW_ON_DEMAND": 1,
}

func (x Xattr_Value) String() string {
	return proto.EnumName(Xattr_Value_name, int32(x))
}
func (Xattr_Value) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{10, 0}
}

// Type of sharedv4 service. Values are governed by the different types
// of services supported by container orchestrators such as Kubernetes.
type Sharedv4ServiceSpec_ServiceType int32

const (
	// Unspecified
	Sharedv4ServiceSpec_UNSPECIFIED Sharedv4ServiceSpec_ServiceType = 0
	// Export the sharedv4 service on each Node's IP.
	// In this mode the sharedv4 volume can be accessed from outside the
	// cluster using one of the node's IPs.
	Sharedv4ServiceSpec_NODEPORT Sharedv4ServiceSpec_ServiceType = 1
	// Export the shared4 service on an internal cluster IP.
	// In this mode the sharedv4 volume will only be accessible
	// within the cluster via this service.
	Sharedv4ServiceSpec_CLUSTERIP Sharedv4ServiceSpec_ServiceType = 2
	// Expose the sharedv4 service on cloud provider's load balancer.
	// Applicable when running in cloud. In this mode the sharedv4 volume
	// can be accessed from outside the cluster.
	Sharedv4ServiceSpec_LOADBALANCER Sharedv4ServiceSpec_ServiceType = 3
	// Do not use sharedv4 service feature. Use legacy sharedv4 volumes instead.
	Sharedv4ServiceSpec_NONE Sharedv4ServiceSpec_ServiceType = 4
)

var Sharedv4ServiceSpec_ServiceType_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "NODEPORT",
	2: "CLUSTERIP",
	3: "LOADBALANCER",
	4: "NONE",
}
var Sharedv4ServiceSpec_ServiceType_value = map[string]int32{
	"UNSPECIFIED":  0,
	"NODEPORT":     1,
	"CLUSTERIP":    2,
	"LOADBALANCER": 3,
	"NONE":         4,
}

func (x Sharedv4ServiceSpec_ServiceType) String() string {
	return proto.EnumName(Sharedv4ServiceSpec_ServiceType_name, int32(x))
}
func (Sharedv4ServiceSpec_ServiceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{18, 0}
}

type Sharedv4FailoverStrategy_Value int32

const (
	// Unspecified
	Sharedv4FailoverStrategy_UNSPECIFIED Sharedv4FailoverStrategy_Value = 0
	// Fail over to the new NFS server quickly. This is appropriate for
	// the apps with sharedv4 service volumes. It can also be used
	// for the apps with sharedv4 volumes when such apps are able
	// to restart quickly.
	Sharedv4FailoverStrategy_AGGRESSIVE Sharedv4FailoverStrategy_Value = 1
	// Give the old NFS server more time to come back up before
	// triggering the failover. This is appropriate for the apps
	// with sharedv4 volumes (non-service).
	Sharedv4FailoverStrategy_NORMAL Sharedv4FailoverStrategy_Value = 2
)

var Sharedv4FailoverStrategy_Value_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "AGGRESSIVE",
	2: "NORMAL",
}
var Sharedv4FailoverStrategy_Value_value = map[string]int32{
	"UNSPECIFIED": 0,
	"AGGRESSIVE":  1,
	"NORMAL":      2,
}

func (x Sharedv4FailoverStrategy_Value) String() string {
	return proto.EnumName(Sharedv4FailoverStrategy_Value_name, int32(x))
}
func (Sharedv4FailoverStrategy_Value) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{19, 0}
}

type ScanPolicy_ScanTrigger int32

const (
	ScanPolicy_SCAN_TRIGGER_NONE          ScanPolicy_ScanTrigger = 0
	ScanPolicy_SCAN_TRIGGER_ON_MOUNT      ScanPolicy_ScanTrigger = 1
	ScanPolicy_SCAN_TRIGGER_ON_NEXT_MOUNT ScanPolicy_ScanTrigger = 2
)

var ScanPolicy_ScanTrigger_name = map[int32]string{
	0: "SCAN_TRIGGER_NONE",
	1: "SCAN_TRIGGER_ON_MOUNT",
	2: "SCAN_TRIGGER_ON_NEXT_MOUNT",
}
var ScanPolicy_ScanTrigger_value = map[string]int32{
	"SCAN_TRIGGER_NONE":          0,
	"SCAN_TRIGGER_ON_MOUNT":      1,
	"SCAN_TRIGGER_ON_NEXT_MOUNT": 2,
}

func (x ScanPolicy_ScanTrigger) String() string {
	return proto.EnumName(ScanPolicy_ScanTrigger_name, int32(x))
}
func (ScanPolicy_ScanTrigger) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{24, 0}
}

type ScanPolicy_ScanAction int32

const (
	ScanPolicy_SCAN_ACTION_NONE        ScanPolicy_ScanAction = 0
	ScanPolicy_SCAN_ACTION_SCAN_ONLY   ScanPolicy_ScanAction = 1
	ScanPolicy_SCAN_ACTION_SCAN_REPAIR ScanPolicy_ScanAction = 2
)

var ScanPolicy_ScanAction_name = map[int32]string{
	0: "SCAN_ACTION_NONE",
	1: "SCAN_ACTION_SCAN_ONLY",
	2: "SCAN_ACTION_SCAN_REPAIR",
}
var ScanPolicy_ScanAction_value = map[string]int32{
	"SCAN_ACTION_NONE":        0,
	"SCAN_ACTION_SCAN_ONLY":   1,
	"SCAN_ACTION_SCAN_REPAIR": 2,
}

func (x ScanPolicy_ScanAction) String() string {
	return proto.EnumName(ScanPolicy_ScanAction_name, int32(x))
}
func (ScanPolicy_ScanAction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{24, 1}
}

// This defines an operator for the policy comparisons
type VolumeSpecPolicy_PolicyOp int32

const (
	// Policy will make sure the value must be equal
	VolumeSpecPolicy_Equal VolumeSpecPolicy_PolicyOp = 0
	// Policy will make sure the requested value must be greater than or equal
	VolumeSpecPolicy_Minimum VolumeSpecPolicy_PolicyOp = 1
	// Policy will make sure the requested value must be less than or equal
	VolumeSpecPolicy_Maximum VolumeSpecPolicy_PolicyOp = 2
)

var VolumeSpecPolicy_PolicyOp_name = map[int32]string{
	0: "Equal",
	1: "Minimum",
	2: "Maximum",
}
var VolumeSpecPolicy_PolicyOp_value = map[string]int32{
	"Equal":   0,
	"Minimum": 1,
	"Maximum": 2,
}

func (x VolumeSpecPolicy_PolicyOp) String() string {
	return proto.EnumName(VolumeSpecPolicy_PolicyOp_name, int32(x))
}
func (VolumeSpecPolicy_PolicyOp) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{28, 0}
}

// Access types can be set by owner to have different levels of access to
// a resource.
//
// It is up to the resource to interpret what the types mean and are
// used for.
type Ownership_AccessType int32

const (
	// Read access only and cannot affect the resource.
	Ownership_Read Ownership_AccessType = 0
	// Write access and can affect the resource.
	// This type automatically provides Read access also.
	Ownership_Write Ownership_AccessType = 1
	// Administrator access.
	// This type automatically provides Read and Write access also.
	Ownership_Admin Ownership_AccessType = 2
)

var Ownership_AccessType_name = map[int32]string{
	0: "Read",
	1: "Write",
	2: "Admin",
}
var Ownership_AccessType_value = map[string]int32{
	"Read":  0,
	"Write": 1,
	"Admin": 2,
}

func (x Ownership_AccessType) String() string {
	return proto.EnumName(Ownership_AccessType_name, int32(x))
}
func (Ownership_AccessType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{31, 0}
}

type StorageNode_SecurityStatus int32

const (
	// Security status type is unknown
	StorageNode_UNSPECIFIED StorageNode_SecurityStatus = 0
	// Node is unsecure
	StorageNode_UNSECURED StorageNode_SecurityStatus = 1
	// Node is secured with authentication and authorization
	StorageNode_SECURED StorageNode_SecurityStatus = 2
	// Node is secured, but in the process of removing security. This state allows
	// other unsecured nodes to join the cluster since the cluster is in the process
	// of removing secuirty authenticaiton and authorization.
	StorageNode_SECURED_ALLOW_SECURITY_REMOVAL StorageNode_SecurityStatus = 3
)

var StorageNode_SecurityStatus_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "UNSECURED",
	2: "SECURED",
	3: "SECURED_ALLOW_SECURITY_REMOVAL",
}
var StorageNode_SecurityStatus_value = map[string]int32{
	"UNSPECIFIED":                    0,
	"UNSECURED":                      1,
	"SECURED":                        2,
	"SECURED_ALLOW_SECURITY_REMOVAL": 3,
}

func (x StorageNode_SecurityStatus) String() string {
	return proto.EnumName(StorageNode_SecurityStatus_name, int32(x))
}
func (StorageNode_SecurityStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{75, 0}
}

// Type are the supported job types
type Job_Type int32

const (
	// Unspecified
	Job_UNSPECIFIED_TYPE Job_Type = 0
	// None
	Job_NONE Job_Type = 1
	// Job for draining volume attachments
	Job_DRAIN_ATTACHMENTS Job_Type = 2
	// Job for transferring cloud drives between nodes
	Job_CLOUD_DRIVE_TRANSFER Job_Type = 3
	// Job for collecting diags from the cluster nodes
	Job_COLLECT_DIAGS Job_Type = 4
	// Job for storage defragmentation on cluster nodes
	Job_DEFRAG Job_Type = 5
)

var Job_Type_name = map[int32]string{
	0: "UNSPECIFIED_TYPE",
	1: "NONE",
	2: "DRAIN_ATTACHMENTS",
	3: "CLOUD_DRIVE_TRANSFER",
	4: "COLLECT_DIAGS",
}
var Job_Type_value = map[string]int32{
	"UNSPECIFIED_TYPE":     0,
	"NONE":                 1,
	"DRAIN_ATTACHMENTS":    2,
	"CLOUD_DRIVE_TRANSFER": 3,
	"COLLECT_DIAGS":        4,
}

func (x Job_Type) String() string {
	return proto.EnumName(Job_Type_name, int32(x))
}
func (Job_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{198, 0}
}

// State is an enum for state of a node drain operation
type Job_State int32

const (
	// Unspecified
	Job_UNSPECIFIED_STATE Job_State = 0
	// Pending indicates job is still pending and has not started work
	Job_PENDING Job_State = 1
	// Running indicates job is actively running
	Job_RUNNING Job_State = 2
	// Done indicates job has finished processing
	Job_DONE Job_State = 3
	// Paused indicates job is paused
	Job_PAUSED Job_State = 4
	// Cancelled indicates job is cancelled
	Job_CANCELLED Job_State = 5
	// Failed indicates job has failed
	Job_FAILED Job_State = 6
)

var Job_State_name = map[int32]string{
	0: "UNSPECIFIED_STATE",
	1: "PENDING",
	2: "RUNNING",
	3: "DONE",
	4: "PAUSED",
	5: "CANCELLED",
	6: "FAILED",
}
var Job_State_value = map[string]int32{
	"UNSPECIFIED_STATE": 0,
	"PENDING":           1,
	"RUNNING":           2,
	"DONE":              3,
	"PAUSED":            4,
	"CANCELLED":         5,
	"FAILED":            6,
}

func (x Job_State) String() string {
	return proto.EnumName(Job_State_name, int32(x))
}
func (Job_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{198, 1}
}

// State is an enum for state of diags collection on a given node
type DiagsCollectionStatus_State int32

const (
	// Unspecified means uninitialized or unknown state
	DiagsCollectionStatus_UNSPECIFIED DiagsCollectionStatus_State = 0
	// Pending indicates the diags collection is pending and hasn't started
	DiagsCollectionStatus_PENDING DiagsCollectionStatus_State = 1
	// Running indicates diags collection is actively running
	DiagsCollectionStatus_RUNNING DiagsCollectionStatus_State = 2
	// Done indicates diags collection has finished
	DiagsCollectionStatus_DONE DiagsCollectionStatus_State = 3
	// Failed indicates diags collection has failed
	DiagsCollectionStatus_FAILED DiagsCollectionStatus_State = 4
)

var DiagsCollectionStatus_State_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "PENDING",
	2: "RUNNING",
	3: "DONE",
	4: "FAILED",
}
var DiagsCollectionStatus_State_value = map[string]int32{
	"UNSPECIFIED": 0,
	"PENDING":     1,
	"RUNNING":     2,
	"DONE":        3,
	"FAILED":      4,
}

func (x DiagsCollectionStatus_State) String() string {
	return proto.EnumName(DiagsCollectionStatus_State_name, int32(x))
}
func (DiagsCollectionStatus_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{205, 0}
}

// Type is an enum that defines the type fo the trigger threshold
type StorageRebalanceTriggerThreshold_Type int32

const (
	// AbsolutePercent indicates absolute percent comparison.
	// Example, 75 % used of capacity, or 50 % provisioned of capacity.
	StorageRebalanceTriggerThreshold_ABSOLUTE_PERCENT StorageRebalanceTriggerThreshold_Type = 0
	// DeltaMeanPercent indicates mean percent comparision threshold.
	// Example, 10 % more than mean for cluster.
	StorageRebalanceTriggerThreshold_DELTA_MEAN_PERCENT StorageRebalanceTriggerThreshold_Type = 1
)

var StorageRebalanceTriggerThreshold_Type_name = map[int32]string{
	0: "ABSOLUTE_PERCENT",
	1: "DELTA_MEAN_PERCENT",
}
var StorageRebalanceTriggerThreshold_Type_value = map[string]int32{
	"ABSOLUTE_PERCENT":   0,
	"DELTA_MEAN_PERCENT": 1,
}

func (x StorageRebalanceTriggerThreshold_Type) String() string {
	return proto.EnumName(StorageRebalanceTriggerThreshold_Type_name, int32(x))
}
func (StorageRebalanceTriggerThreshold_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{225, 0}
}

// Metric is an enum that defines the metric to use for rebalance
type StorageRebalanceTriggerThreshold_Metric int32

const (
	// ProvisionSpace indicates rebalance for provisioned space
	StorageRebalanceTriggerThreshold_PROVISION_SPACE StorageRebalanceTriggerThreshold_Metric = 0
	// UsedSpace indicates rebalance for used space
	StorageRebalanceTriggerThreshold_USED_SPACE StorageRebalanceTriggerThreshold_Metric = 1
)

var StorageRebalanceTriggerThreshold_Metric_name = map[int32]string{
	0: "PROVISION_SPACE",
	1: "USED_SPACE",
}
var StorageRebalanceTriggerThreshold_Metric_value = map[string]int32{
	"PROVISION_SPACE": 0,
	"USED_SPACE":      1,
}

func (x StorageRebalanceTriggerThreshold_Metric) String() string {
	return proto.EnumName(StorageRebalanceTriggerThreshold_Metric_name, int32(x))
}
func (StorageRebalanceTriggerThreshold_Metric) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{225, 1}
}

// Mode is an enum that defines the mode of the volume reorg job
type SdkStorageRebalanceRequest_Mode int32

const (
	// StorageRebalance mode: rebalance pools based on provisioned/used space (the default mode)
	SdkStorageRebalanceRequest_STORAGE_REBALANCE SdkStorageRebalanceRequest_Mode = 0
	// VolumePlacementFix mode: scan all volumes for incorrect placement and fix them
	SdkStorageRebalanceRequest_VOLUME_PLACEMENT_FIX SdkStorageRebalanceRequest_Mode = 1
)

var SdkStorageRebalanceRequest_Mode_name = map[int32]string{
	0: "STORAGE_REBALANCE",
	1: "VOLUME_PLACEMENT_FIX",
}
var SdkStorageRebalanceRequest_Mode_value = map[string]int32{
	"STORAGE_REBALANCE":    0,
	"VOLUME_PLACEMENT_FIX": 1,
}

func (x SdkStorageRebalanceRequest_Mode) String() string {
	return proto.EnumName(SdkStorageRebalanceRequest_Mode_name, int32(x))
}
func (SdkStorageRebalanceRequest_Mode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{226, 0}
}

// Type is an enum to indicate the type of work summary
type StorageRebalanceWorkSummary_Type int32

const (
	// summary for unbalanced pools
	StorageRebalanceWorkSummary_UnbalancedPools StorageRebalanceWorkSummary_Type = 0
	// summary for unbalanced volumes
	StorageRebalanceWorkSummary_UnbalancedVolumes StorageRebalanceWorkSummary_Type = 1
	// summary for unbalanced provisioned space
	StorageRebalanceWorkSummary_UnbalancedProvisionedSpaceBytes StorageRebalanceWorkSummary_Type = 2
	// summary for unbalanced used space
	StorageRebalanceWorkSummary_UnbalancedUsedSpaceBytes StorageRebalanceWorkSummary_Type = 3
)

var StorageRebalanceWorkSummary_Type_name = map[int32]string{
	0: "UnbalancedPools",
	1: "UnbalancedVolumes",
	2: "UnbalancedProvisionedSpaceBytes",
	3: "UnbalancedUsedSpaceBytes",
}
var StorageRebalanceWorkSummary_Type_value = map[string]int32{
	"UnbalancedPools":                 0,
	"UnbalancedVolumes":               1,
	"UnbalancedProvisionedSpaceBytes": 2,
	"UnbalancedUsedSpaceBytes":        3,
}

func (x StorageRebalanceWorkSummary_Type) String() string {
	return proto.EnumName(StorageRebalanceWorkSummary_Type_name, int32(x))
}
func (StorageRebalanceWorkSummary_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{230, 0}
}

// StorageRebalanceAction describes type of rebalance action
type StorageRebalanceAudit_StorageRebalanceAction int32

const (
	// Indicates new replica was added
	StorageRebalanceAudit_ADD_REPLICA StorageRebalanceAudit_StorageRebalanceAction = 0
	// Indicates existing replica was removed
	StorageRebalanceAudit_REMOVE_REPLICA StorageRebalanceAudit_StorageRebalanceAction = 1
)

var StorageRebalanceAudit_StorageRebalanceAction_name = map[int32]string{
	0: "ADD_REPLICA",
	1: "REMOVE_REPLICA",
}
var StorageRebalanceAudit_StorageRebalanceAction_value = map[string]int32{
	"ADD_REPLICA":    0,
	"REMOVE_REPLICA": 1,
}

func (x StorageRebalanceAudit_StorageRebalanceAction) String() string {
	return proto.EnumName(StorageRebalanceAudit_StorageRebalanceAction_name, int32(x))
}
func (StorageRebalanceAudit_StorageRebalanceAction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{231, 0}
}

// OperationStatus captures the various statuses of a storage pool operation
type SdkStoragePool_OperationStatus int32

const (
	// Operation pending
	SdkStoragePool_OPERATION_PENDING SdkStoragePool_OperationStatus = 0
	// Operation is in progress
	SdkStoragePool_OPERATION_IN_PROGRESS SdkStoragePool_OperationStatus = 1
	// Operation is successful
	SdkStoragePool_OPERATION_SUCCESSFUL SdkStoragePool_OperationStatus = 2
	// Operation failed
	SdkStoragePool_OPERATION_FAILED SdkStoragePool_OperationStatus = 3
)

var SdkStoragePool_OperationStatus_name = map[int32]string{
	0: "OPERATION_PENDING",
	1: "OPERATION_IN_PROGRESS",
	2: "OPERATION_SUCCESSFUL",
	3: "OPERATION_FAILED",
}
var SdkStoragePool_OperationStatus_value = map[string]int32{
	"OPERATION_PENDING":     0,
	"OPERATION_IN_PROGRESS": 1,
	"OPERATION_SUCCESSFUL":  2,
	"OPERATION_FAILED":      3,
}

func (x SdkStoragePool_OperationStatus) String() string {
	return proto.EnumName(SdkStoragePool_OperationStatus_name, int32(x))
}
func (SdkStoragePool_OperationStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{238, 0}
}

// OperationType defines the various operations that are performed on a storage pool
type SdkStoragePool_OperationType int32

const (
	// Resize operation
	SdkStoragePool_OPERATION_RESIZE SdkStoragePool_OperationType = 0
)

var SdkStoragePool_OperationType_name = map[int32]string{
	0: "OPERATION_RESIZE",
}
var SdkStoragePool_OperationType_value = map[string]int32{
	"OPERATION_RESIZE": 0,
}

func (x SdkStoragePool_OperationType) String() string {
	return proto.EnumName(SdkStoragePool_OperationType_name, int32(x))
}
func (SdkStoragePool_OperationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{238, 1}
}

// Defines the operation types available to resize a storage pool
type SdkStoragePool_ResizeOperationType int32

const (
	// Automatically pick the optimum resize operation type
	SdkStoragePool_RESIZE_TYPE_AUTO SdkStoragePool_ResizeOperationType = 0
	// Add a new drive to resize the pool
	SdkStoragePool_RESIZE_TYPE_ADD_DISK SdkStoragePool_ResizeOperationType = 1
	// Resize existing drives to resize the pool
	SdkStoragePool_RESIZE_TYPE_RESIZE_DISK SdkStoragePool_ResizeOperationType = 2
)

var SdkStoragePool_ResizeOperationType_name = map[int32]string{
	0: "RESIZE_TYPE_AUTO",
	1: "RESIZE_TYPE_ADD_DISK",
	2: "RESIZE_TYPE_RESIZE_DISK",
}
var SdkStoragePool_ResizeOperationType_value = map[string]int32{
	"RESIZE_TYPE_AUTO":        0,
	"RESIZE_TYPE_ADD_DISK":    1,
	"RESIZE_TYPE_RESIZE_DISK": 2,
}

func (x SdkStoragePool_ResizeOperationType) String() string {
	return proto.EnumName(SdkStoragePool_ResizeOperationType_name, int32(x))
}
func (SdkStoragePool_ResizeOperationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{238, 2}
}

type SdkCloudBackupClusterType_Value int32

const (
	// Unknown
	SdkCloudBackupClusterType_UNKNOWN SdkCloudBackupClusterType_Value = 0
	// Belongs to this cluster
	SdkCloudBackupClusterType_CURRENT_CLUSTER SdkCloudBackupClusterType_Value = 1
	// belongs to other cluster
	SdkCloudBackupClusterType_OTHER_CLUSTER SdkCloudBackupClusterType_Value = 2
)

var SdkCloudBackupClusterType_Value_name = map[int32]string{
	0: "UNKNOWN",
	1: "CURRENT_CLUSTER",
	2: "OTHER_CLUSTER",
}
var SdkCloudBackupClusterType_Value_value = map[string]int32{
	"UNKNOWN":         0,
	"CURRENT_CLUSTER": 1,
	"OTHER_CLUSTER":   2,
}

func (x SdkCloudBackupClusterType_Value) String() string {
	return proto.EnumName(SdkCloudBackupClusterType_Value_name, int32(x))
}
func (SdkCloudBackupClusterType_Value) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{269, 0}
}

// FilesystemTrimStatus represents the status codes returned from
// OpenStorageFilesystemTrim service APIs()
type FilesystemTrim_FilesystemTrimStatus int32

const (
	// Filesystem Trim operation is an unknown state
	FilesystemTrim_FS_TRIM_UNKNOWN FilesystemTrim_FilesystemTrimStatus = 0
	// Filesystem Trim operation is not running for the specified volume
	FilesystemTrim_FS_TRIM_NOT_RUNNING FilesystemTrim_FilesystemTrimStatus = 1
	// Filesystem Trim operation started for the specified volume
	FilesystemTrim_FS_TRIM_STARTED FilesystemTrim_FilesystemTrimStatus = 2
	// Filesystem Trim operation is in progress for the specified volume
	FilesystemTrim_FS_TRIM_INPROGRESS FilesystemTrim_FilesystemTrimStatus = 3
	// Filesystem Trim operation was stopped by the user for the specified volume
	FilesystemTrim_FS_TRIM_STOPPED FilesystemTrim_FilesystemTrimStatus = 4
	// Filesystem Trim operation completed successfully for the specified volume
	FilesystemTrim_FS_TRIM_COMPLETED FilesystemTrim_FilesystemTrimStatus = 5
	// Filesystem Trim operation failed due to internal error for the specified
	// volume
	FilesystemTrim_FS_TRIM_FAILED FilesystemTrim_FilesystemTrimStatus = 6
)

var FilesystemTrim_FilesystemTrimStatus_name = map[int32]string{
	0: "FS_TRIM_UNKNOWN",
	1: "FS_TRIM_NOT_RUNNING",
	2: "FS_TRIM_STARTED",
	3: "FS_TRIM_INPROGRESS",
	4: "FS_TRIM_STOPPED",
	5: "FS_TRIM_COMPLETED",
	6: "FS_TRIM_FAILED",
}
var FilesystemTrim_FilesystemTrimStatus_value = map[string]int32{
	"FS_TRIM_UNKNOWN":     0,
	"FS_TRIM_NOT_RUNNING": 1,
	"FS_TRIM_STARTED":     2,
	"FS_TRIM_INPROGRESS":  3,
	"FS_TRIM_STOPPED":     4,
	"FS_TRIM_COMPLETED":   5,
	"FS_TRIM_FAILED":      6,
}

func (x FilesystemTrim_FilesystemTrimStatus) String() string {
	return proto.EnumName(FilesystemTrim_FilesystemTrimStatus_name, int32(x))
}
func (FilesystemTrim_FilesystemTrimStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{304, 0}
}

// FilesystemChecktatus represents the status codes returned from
// OpenStorageFilesystemCheck service APIs()
type FilesystemCheck_FilesystemCheckStatus int32

const (
	// Filesystem Check operation is an unknown state
	FilesystemCheck_FS_CHECK_UNKNOWN FilesystemCheck_FilesystemCheckStatus = 0
	// FilesystemCheck operation not running for the specified volume
	FilesystemCheck_FS_CHECK_NOT_RUNNING FilesystemCheck_FilesystemCheckStatus = 1
	// FilesystemCheck operation started for the specified volume
	FilesystemCheck_FS_CHECK_STARTED FilesystemCheck_FilesystemCheckStatus = 2
	// FilesystemCheck operation is in progress
	FilesystemCheck_FS_CHECK_INPROGRESS FilesystemCheck_FilesystemCheckStatus = 3
	// FilesystemCheck operation was stopped by the user
	FilesystemCheck_FS_CHECK_STOPPED FilesystemCheck_FilesystemCheckStatus = 4
	// FilesystemCheck operation completed successfully
	FilesystemCheck_FS_CHECK_COMPLETED FilesystemCheck_FilesystemCheckStatus = 5
	// FilesystemCheck operation failed due to internal error
	FilesystemCheck_FS_CHECK_FAILED FilesystemCheck_FilesystemCheckStatus = 6
)

var FilesystemCheck_FilesystemCheckStatus_name = map[int32]string{
	0: "FS_CHECK_UNKNOWN",
	1: "FS_CHECK_NOT_RUNNING",
	2: "FS_CHECK_STARTED",
	3: "FS_CHECK_INPROGRESS",
	4: "FS_CHECK_STOPPED",
	5: "FS_CHECK_COMPLETED",
	6: "FS_CHECK_FAILED",
}
var FilesystemCheck_FilesystemCheckStatus_value = map[string]int32{
	"FS_CHECK_UNKNOWN":     0,
	"FS_CHECK_NOT_RUNNING": 1,
	"FS_CHECK_STARTED":     2,
	"FS_CHECK_INPROGRESS":  3,
	"FS_CHECK_STOPPED":     4,
	"FS_CHECK_COMPLETED":   5,
	"FS_CHECK_FAILED":      6,
}

func (x FilesystemCheck_FilesystemCheckStatus) String() string {
	return proto.EnumName(FilesystemCheck_FilesystemCheckStatus_name, int32(x))
}
func (FilesystemCheck_FilesystemCheckStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{321, 0}
}

type SdkServiceCapability_OpenStorageService_Type int32

const (
	// Unknown service
	SdkServiceCapability_OpenStorageService_UNKNOWN SdkServiceCapability_OpenStorageService_Type = 0
	// Cluster management
	SdkServiceCapability_OpenStorageService_CLUSTER SdkServiceCapability_OpenStorageService_Type = 1
	// Cloud backup of volumes management
	SdkServiceCapability_OpenStorageService_CLOUD_BACKUP SdkServiceCapability_OpenStorageService_Type = 2
	// Credentials management
	SdkServiceCapability_OpenStorageService_CREDENTIALS SdkServiceCapability_OpenStorageService_Type = 3
	// Node management
	SdkServiceCapability_OpenStorageService_NODE SdkServiceCapability_OpenStorageService_Type = 4
	// Object Storage management
	SdkServiceCapability_OpenStorageService_OBJECT_STORAGE SdkServiceCapability_OpenStorageService_Type = 5
	// Schedule policy management
	SdkServiceCapability_OpenStorageService_SCHEDULE_POLICY SdkServiceCapability_OpenStorageService_Type = 6
	// Volume management
	SdkServiceCapability_OpenStorageService_VOLUME SdkServiceCapability_OpenStorageService_Type = 7
	// Alert enumeration
	SdkServiceCapability_OpenStorageService_ALERTS SdkServiceCapability_OpenStorageService_Type = 8
	// Mount/Attach Support
	SdkServiceCapability_OpenStorageService_MOUNT_ATTACH SdkServiceCapability_OpenStorageService_Type = 9
	// Role service
	SdkServiceCapability_OpenStorageService_ROLE SdkServiceCapability_OpenStorageService_Type = 10
	// Cluster Pair service
	SdkServiceCapability_OpenStorageService_CLUSTER_PAIR SdkServiceCapability_OpenStorageService_Type = 11
	// Migrate service
	SdkServiceCapability_OpenStorageService_MIGRATE SdkServiceCapability_OpenStorageService_Type = 12
	// StoragePolicy Service
	SdkServiceCapability_OpenStorageService_STORAGE_POLICY SdkServiceCapability_OpenStorageService_Type = 13
)

var SdkServiceCapability_OpenStorageService_Type_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "CLUSTER",
	2:  "CLOUD_BACKUP",
	3:  "CREDENTIALS",
	4:  "NODE",
	5:  "OBJECT_STORAGE",
	6:  "SCHEDULE_POLICY",
	7:  "VOLUME",
	8:  "ALERTS",
	9:  "MOUNT_ATTACH",
	10: "ROLE",
	11: "CLUSTER_PAIR",
	12: "MIGRATE",
	13: "STORAGE_POLICY",
}
var SdkServiceCapability_OpenStorageService_Type_value = map[string]int32{
	"UNKNOWN":         0,
	"CLUSTER":         1,
	"CLOUD_BACKUP":    2,
	"CREDENTIALS":     3,
	"NODE":            4,
	"OBJECT_STORAGE":  5,
	"SCHEDULE_POLICY": 6,
	"VOLUME":          7,
	"ALERTS":          8,
	"MOUNT_ATTACH":    9,
	"ROLE":            10,
	"CLUSTER_PAIR":    11,
	"MIGRATE":         12,
	"STORAGE_POLICY":  13,
}

func (x SdkServiceCapability_OpenStorageService_Type) String() string {
	return proto.EnumName(SdkServiceCapability_OpenStorageService_Type_name, int32(x))
}
func (SdkServiceCapability_OpenStorageService_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{332, 0, 0}
}

// These values are constants that can be used by the
// client and server applications
type SdkVersion_Version int32

const (
	// Must be set in the proto file; ignore.
	SdkVersion_MUST_HAVE_ZERO_VALUE SdkVersion_Version = 0
	// SDK version major value of this specification
	SdkVersion_Major SdkVersion_Version = 0
	// SDK version minor value of this specification
	SdkVersion_Minor SdkVersion_Version = 101
	// SDK version patch value of this specification
	SdkVersion_Patch SdkVersion_Version = 50
)

var SdkVersion_Version_name = map[int32]string{
	0: "MUST_HAVE_ZERO_VALUE",
	// Duplicate value: 0: "Major",
	101: "Minor",
	50:  "Patch",
}
var SdkVersion_Version_value = map[string]int32{
	"MUST_HAVE_ZERO_VALUE": 0,
	"Major":                0,
	"Minor":                101,
	"Patch":                50,
}

func (x SdkVersion_Version) String() string {
	return proto.EnumName(SdkVersion_Version_name, int32(x))
}
func (SdkVersion_Version) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{333, 0}
}

type CloudMigrate_OperationType int32

const (
	CloudMigrate_InvalidType CloudMigrate_OperationType = 0
	// Migrate all volumes in the cluster
	CloudMigrate_MigrateCluster CloudMigrate_OperationType = 1
	// Migrate a single volume
	CloudMigrate_MigrateVolume CloudMigrate_OperationType = 2
	// Migrate a group of volumes
	CloudMigrate_MigrateVolumeGroup CloudMigrate_OperationType = 3
)

var CloudMigrate_OperationType_name = map[int32]string{
	0: "InvalidType",
	1: "MigrateCluster",
	2: "MigrateVolume",
	3: "MigrateVolumeGroup",
}
var CloudMigrate_OperationType_value = map[string]int32{
	"InvalidType":        0,
	"MigrateCluster":     1,
	"MigrateVolume":      2,
	"MigrateVolumeGroup": 3,
}

func (x CloudMigrate_OperationType) String() string {
	return proto.EnumName(CloudMigrate_OperationType_name, int32(x))
}
func (CloudMigrate_OperationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{335, 0}
}

type CloudMigrate_Stage int32

const (
	CloudMigrate_InvalidStage CloudMigrate_Stage = 0
	CloudMigrate_Backup       CloudMigrate_Stage = 1
	CloudMigrate_Restore      CloudMigrate_Stage = 2
	CloudMigrate_VolumeUpdate CloudMigrate_Stage = 3
	CloudMigrate_Done         CloudMigrate_Stage = 4
)

var CloudMigrate_Stage_name = map[int32]string{
	0: "InvalidStage",
	1: "Backup",
	2: "Restore",
	3: "VolumeUpdate",
	4: "Done",
}
var CloudMigrate_Stage_value = map[string]int32{
	"InvalidStage": 0,
	"Backup":       1,
	"Restore":      2,
	"VolumeUpdate": 3,
	"Done":         4,
}

func (x CloudMigrate_Stage) String() string {
	return proto.EnumName(CloudMigrate_Stage_name, int32(x))
}
func (CloudMigrate_Stage) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{335, 1}
}

type CloudMigrate_Status int32

const (
	CloudMigrate_InvalidStatus CloudMigrate_Status = 0
	CloudMigrate_Queued        CloudMigrate_Status = 1
	CloudMigrate_Initialized   CloudMigrate_Status = 2
	CloudMigrate_InProgress    CloudMigrate_Status = 3
	CloudMigrate_Failed        CloudMigrate_Status = 4
	CloudMigrate_Complete      CloudMigrate_Status = 5
	CloudMigrate_Canceled      CloudMigrate_Status = 6
)

var CloudMigrate_Status_name = map[int32]string{
	0: "InvalidStatus",
	1: "Queued",
	2: "Initialized",
	3: "InProgress",
	4: "Failed",
	5: "Complete",
	6: "Canceled",
}
var CloudMigrate_Status_value = map[string]int32{
	"InvalidStatus": 0,
	"Queued":        1,
	"Initialized":   2,
	"InProgress":    3,
	"Failed":        4,
	"Complete":      5,
	"Canceled":      6,
}

func (x CloudMigrate_Status) String() string {
	return proto.EnumName(CloudMigrate_Status_name, int32(x))
}
func (CloudMigrate_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{335, 2}
}

type ClusterPairMode_Mode int32

const (
	// Default pairing mode
	ClusterPairMode_Default ClusterPairMode_Mode = 0
	// Paired for DisasterRecovery
	ClusterPairMode_DisasterRecovery ClusterPairMode_Mode = 1
	// Paired for one-time migration
	ClusterPairMode_OneTimeMigration ClusterPairMode_Mode = 2
)

var ClusterPairMode_Mode_name = map[int32]string{
	0: "Default",
	1: "DisasterRecovery",
	2: "OneTimeMigration",
}
var ClusterPairMode_Mode_value = map[string]int32{
	"Default":          0,
	"DisasterRecovery": 1,
	"OneTimeMigration": 2,
}

func (x ClusterPairMode_Mode) String() string {
	return proto.EnumName(ClusterPairMode_Mode_name, int32(x))
}
func (ClusterPairMode_Mode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{349, 0}
}

// This defines operator types used in a label matching rule
type LabelSelectorRequirement_Operator int32

const (
	// In means the value for 'key' should be in one of the given value(s)
	LabelSelectorRequirement_In LabelSelectorRequirement_Operator = 0
	// NotIn means the value for 'key' should NOT be in one of the given value(s)
	LabelSelectorRequirement_NotIn LabelSelectorRequirement_Operator = 1
	// Exists means the 'key' should just exist regardless of the value
	LabelSelectorRequirement_Exists LabelSelectorRequirement_Operator = 2
	// DoesNotExist means the 'key' should NOT exist
	LabelSelectorRequirement_DoesNotExist LabelSelectorRequirement_Operator = 3
	// Gt means the 'key' should be greater than the value(s)
	LabelSelectorRequirement_Gt LabelSelectorRequirement_Operator = 4
	// Lt means the 'key' should be less than the value(s)
	LabelSelectorRequirement_Lt LabelSelectorRequirement_Operator = 5
)

var LabelSelectorRequirement_Operator_name = map[int32]string{
	0: "In",
	1: "NotIn",
	2: "Exists",
	3: "DoesNotExist",
	4: "Gt",
	5: "Lt",
}
var LabelSelectorRequirement_Operator_value = map[string]int32{
	"In":           0,
	"NotIn":        1,
	"Exists":       2,
	"DoesNotExist": 3,
	"Gt":           4,
	"Lt":           5,
}

func (x LabelSelectorRequirement_Operator) String() string {
	return proto.EnumName(LabelSelectorRequirement_Operator_name, int32(x))
}
func (LabelSelectorRequirement_Operator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{377, 0}
}

// StorageResource groups properties of a storage device.
type StorageResource struct {
	// Id is the LUN identifier.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Path device path for this storage resource.
	Path string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	// Storage medium.
	Medium StorageMedium `protobuf:"varint,3,opt,name=medium,enum=openstorage.api.StorageMedium" json:"medium,omitempty"`
	// True if this device is online.
	Online bool `protobuf:"varint,4,opt,name=online" json:"online,omitempty"`
	// IOPS
	Iops uint64 `protobuf:"varint,5,opt,name=iops" json:"iops,omitempty"`
	// SeqWrite
	SeqWrite float64 `protobuf:"fixed64,6,opt,name=seq_write,json=seqWrite" json:"seq_write,omitempty"`
	// SeqRead
	SeqRead float64 `protobuf:"fixed64,7,opt,name=seq_read,json=seqRead" json:"seq_read,omitempty"`
	// RandRW
	RandRW float64 `protobuf:"fixed64,8,opt,name=randRW" json:"randRW,omitempty"`
	// Total size in bytes.
	Size uint64 `protobuf:"varint,9,opt,name=size" json:"size,omitempty"`
	// Physical Bytes used.
	Used uint64 `protobuf:"varint,10,opt,name=used" json:"used,omitempty"`
	// True if this device is rotational.
	RotationSpeed string `protobuf:"bytes,11,opt,name=rotation_speed,json=rotationSpeed" json:"rotation_speed,omitempty"`
	// Timestamp of last time this device was scanned.
	LastScan *timestamp.Timestamp `protobuf:"bytes,12,opt,name=last_scan,json=lastScan" json:"last_scan,omitempty"`
	// True if dedicated for metadata.
	Metadata bool `protobuf:"varint,13,opt,name=metadata" json:"metadata,omitempty"`
	// True if dedicated as cache
	Cache bool `protobuf:"varint,14,opt,name=cache" json:"cache,omitempty"`
	// True if the resource is used as thin pool metadata disk
	PoolMetadataDev bool `protobuf:"varint,15,opt,name=pool_metadata_dev,json=poolMetadataDev" json:"pool_metadata_dev,omitempty"`
	// Cloud drive type
	CloudDriveType       string   `protobuf:"bytes,16,opt,name=cloud_drive_type,json=cloudDriveType" json:"cloud_drive_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StorageResource) Reset()         { *m = StorageResource{} }
func (m *StorageResource) String() string { return proto.CompactTextString(m) }
func (*StorageResource) ProtoMessage()    {}
func (*StorageResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{0}
}
func (m *StorageResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageResource.Unmarshal(m, b)
}
func (m *StorageResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageResource.Marshal(b, m, deterministic)
}
func (dst *StorageResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageResource.Merge(dst, src)
}
func (m *StorageResource) XXX_Size() int {
	return xxx_messageInfo_StorageResource.Size(m)
}
func (m *StorageResource) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageResource.DiscardUnknown(m)
}

var xxx_messageInfo_StorageResource proto.InternalMessageInfo

func (m *StorageResource) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StorageResource) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *StorageResource) GetMedium() StorageMedium {
	if m != nil {
		return m.Medium
	}
	return StorageMedium_STORAGE_MEDIUM_MAGNETIC
}

func (m *StorageResource) GetOnline() bool {
	if m != nil {
		return m.Online
	}
	return false
}

func (m *StorageResource) GetIops() uint64 {
	if m != nil {
		return m.Iops
	}
	return 0
}

func (m *StorageResource) GetSeqWrite() float64 {
	if m != nil {
		return m.SeqWrite
	}
	return 0
}

func (m *StorageResource) GetSeqRead() float64 {
	if m != nil {
		return m.SeqRead
	}
	return 0
}

func (m *StorageResource) GetRandRW() float64 {
	if m != nil {
		return m.RandRW
	}
	return 0
}

func (m *StorageResource) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *StorageResource) GetUsed() uint64 {
	if m != nil {
		return m.Used
	}
	return 0
}

func (m *StorageResource) GetRotationSpeed() string {
	if m != nil {
		return m.RotationSpeed
	}
	return ""
}

func (m *StorageResource) GetLastScan() *timestamp.Timestamp {
	if m != nil {
		return m.LastScan
	}
	return nil
}

func (m *StorageResource) GetMetadata() bool {
	if m != nil {
		return m.Metadata
	}
	return false
}

func (m *StorageResource) GetCache() bool {
	if m != nil {
		return m.Cache
	}
	return false
}

func (m *StorageResource) GetPoolMetadataDev() bool {
	if m != nil {
		return m.PoolMetadataDev
	}
	return false
}

func (m *StorageResource) GetCloudDriveType() string {
	if m != nil {
		return m.CloudDriveType
	}
	return ""
}

// StoragePool groups different storage devices based on their CosType
type StoragePool struct {
	// Deprecated! Use `uuid` instead. ID pool ID
	ID int32 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	// Cos reflects the capabilities of this drive pool
	Cos CosType `protobuf:"varint,2,opt,name=Cos,enum=openstorage.api.CosType" json:"Cos,omitempty"`
	// Medium underlying storage type
	Medium StorageMedium `protobuf:"varint,3,opt,name=Medium,enum=openstorage.api.StorageMedium" json:"Medium,omitempty"`
	// RaidLevel storage raid level
	RaidLevel string `protobuf:"bytes,4,opt,name=RaidLevel" json:"RaidLevel,omitempty"`
	// TotalSize of the pool
	TotalSize uint64 `protobuf:"varint,7,opt,name=TotalSize" json:"TotalSize,omitempty"`
	// Used size of the pool
	Used uint64 `protobuf:"varint,8,opt,name=Used" json:"Used,omitempty"`
	// Labels is a list of user defined name-value pairs
	Labels map[string]string `protobuf:"bytes,9,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// UUID is the unique identifier for a storage pool
	Uuid string `protobuf:"bytes,10,opt,name=uuid" json:"uuid,omitempty"`
	// LastOperation is the most recent operation being performed on a storage pool
	LastOperation        *StoragePoolOperation `protobuf:"bytes,11,opt,name=last_operation,json=lastOperation" json:"last_operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *StoragePool) Reset()         { *m = StoragePool{} }
func (m *StoragePool) String() string { return proto.CompactTextString(m) }
func (*StoragePool) ProtoMessage()    {}
func (*StoragePool) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{1}
}
func (m *StoragePool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoragePool.Unmarshal(m, b)
}
func (m *StoragePool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoragePool.Marshal(b, m, deterministic)
}
func (dst *StoragePool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoragePool.Merge(dst, src)
}
func (m *StoragePool) XXX_Size() int {
	return xxx_messageInfo_StoragePool.Size(m)
}
func (m *StoragePool) XXX_DiscardUnknown() {
	xxx_messageInfo_StoragePool.DiscardUnknown(m)
}

var xxx_messageInfo_StoragePool proto.InternalMessageInfo

func (m *StoragePool) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *StoragePool) GetCos() CosType {
	if m != nil {
		return m.Cos
	}
	return CosType_NONE
}

func (m *StoragePool) GetMedium() StorageMedium {
	if m != nil {
		return m.Medium
	}
	return StorageMedium_STORAGE_MEDIUM_MAGNETIC
}

func (m *StoragePool) GetRaidLevel() string {
	if m != nil {
		return m.RaidLevel
	}
	return ""
}

func (m *StoragePool) GetTotalSize() uint64 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

func (m *StoragePool) GetUsed() uint64 {
	if m != nil {
		return m.Used
	}
	return 0
}

func (m *StoragePool) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *StoragePool) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *StoragePool) GetLastOperation() *StoragePoolOperation {
	if m != nil {
		return m.LastOperation
	}
	return nil
}

// SchedulerTopology defines the topology information of the storage node
// in scheduler context
type SchedulerTopology struct {
	// Key-value pairs defining the topology of the node
	Labels               map[string]string `protobuf:"bytes,1,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SchedulerTopology) Reset()         { *m = SchedulerTopology{} }
func (m *SchedulerTopology) String() string { return proto.CompactTextString(m) }
func (*SchedulerTopology) ProtoMessage()    {}
func (*SchedulerTopology) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{2}
}
func (m *SchedulerTopology) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SchedulerTopology.Unmarshal(m, b)
}
func (m *SchedulerTopology) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SchedulerTopology.Marshal(b, m, deterministic)
}
func (dst *SchedulerTopology) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SchedulerTopology.Merge(dst, src)
}
func (m *SchedulerTopology) XXX_Size() int {
	return xxx_messageInfo_SchedulerTopology.Size(m)
}
func (m *SchedulerTopology) XXX_DiscardUnknown() {
	xxx_messageInfo_SchedulerTopology.DiscardUnknown(m)
}

var xxx_messageInfo_SchedulerTopology proto.InternalMessageInfo

func (m *SchedulerTopology) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// StoragePoolOperation defines an operation being performed on a storage pool
type StoragePoolOperation struct {
	// Type is the type of the operation
	Type SdkStoragePool_OperationType `protobuf:"varint,1,opt,name=type,enum=openstorage.api.SdkStoragePool_OperationType" json:"type,omitempty"`
	// Msg is a user friendly message for the operation
	Msg string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	// Params for the parameters for the operation
	Params map[string]string `protobuf:"bytes,3,rep,name=params" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Status is the status of the operation
	Status               SdkStoragePool_OperationStatus `protobuf:"varint,4,opt,name=status,enum=openstorage.api.SdkStoragePool_OperationStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *StoragePoolOperation) Reset()         { *m = StoragePoolOperation{} }
func (m *StoragePoolOperation) String() string { return proto.CompactTextString(m) }
func (*StoragePoolOperation) ProtoMessage()    {}
func (*StoragePoolOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{3}
}
func (m *StoragePoolOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoragePoolOperation.Unmarshal(m, b)
}
func (m *StoragePoolOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoragePoolOperation.Marshal(b, m, deterministic)
}
func (dst *StoragePoolOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoragePoolOperation.Merge(dst, src)
}
func (m *StoragePoolOperation) XXX_Size() int {
	return xxx_messageInfo_StoragePoolOperation.Size(m)
}
func (m *StoragePoolOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_StoragePoolOperation.DiscardUnknown(m)
}

var xxx_messageInfo_StoragePoolOperation proto.InternalMessageInfo

func (m *StoragePoolOperation) GetType() SdkStoragePool_OperationType {
	if m != nil {
		return m.Type
	}
	return SdkStoragePool_OPERATION_RESIZE
}

func (m *StoragePoolOperation) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *StoragePoolOperation) GetParams() map[string]string {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *StoragePoolOperation) GetStatus() SdkStoragePool_OperationStatus {
	if m != nil {
		return m.Status
	}
	return SdkStoragePool_OPERATION_PENDING
}

// TopologyRequirement defines the topology requirement for a volume
type TopologyRequirement struct {
	// Key-value pairs defining the required topology for a volume
	Labels               map[string]string `protobuf:"bytes,1,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TopologyRequirement) Reset()         { *m = TopologyRequirement{} }
func (m *TopologyRequirement) String() string { return proto.CompactTextString(m) }
func (*TopologyRequirement) ProtoMessage()    {}
func (*TopologyRequirement) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{4}
}
func (m *TopologyRequirement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopologyRequirement.Unmarshal(m, b)
}
func (m *TopologyRequirement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopologyRequirement.Marshal(b, m, deterministic)
}
func (dst *TopologyRequirement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopologyRequirement.Merge(dst, src)
}
func (m *TopologyRequirement) XXX_Size() int {
	return xxx_messageInfo_TopologyRequirement.Size(m)
}
func (m *TopologyRequirement) XXX_DiscardUnknown() {
	xxx_messageInfo_TopologyRequirement.DiscardUnknown(m)
}

var xxx_messageInfo_TopologyRequirement proto.InternalMessageInfo

func (m *TopologyRequirement) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// VolumeLocator is a structure that is attached to a volume
// and is used to carry opaque metadata.
type VolumeLocator struct {
	// User friendly identifier
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// A set of name-value pairs that acts as search filters
	VolumeLabels map[string]string `protobuf:"bytes,2,rep,name=volume_labels,json=volumeLabels" json:"volume_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Filter with ownership
	Ownership *Ownership `protobuf:"bytes,3,opt,name=ownership" json:"ownership,omitempty"`
	// Filter by group
	Group *Group `protobuf:"bytes,4,opt,name=group" json:"group,omitempty"`
	// Volume Ids to match
	VolumeIds            []string `protobuf:"bytes,5,rep,name=volume_ids,json=volumeIds" json:"volume_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeLocator) Reset()         { *m = VolumeLocator{} }
func (m *VolumeLocator) String() string { return proto.CompactTextString(m) }
func (*VolumeLocator) ProtoMessage()    {}
func (*VolumeLocator) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{5}
}
func (m *VolumeLocator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeLocator.Unmarshal(m, b)
}
func (m *VolumeLocator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeLocator.Marshal(b, m, deterministic)
}
func (dst *VolumeLocator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeLocator.Merge(dst, src)
}
func (m *VolumeLocator) XXX_Size() int {
	return xxx_messageInfo_VolumeLocator.Size(m)
}
func (m *VolumeLocator) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeLocator.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeLocator proto.InternalMessageInfo

func (m *VolumeLocator) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VolumeLocator) GetVolumeLabels() map[string]string {
	if m != nil {
		return m.VolumeLabels
	}
	return nil
}

func (m *VolumeLocator) GetOwnership() *Ownership {
	if m != nil {
		return m.Ownership
	}
	return nil
}

func (m *VolumeLocator) GetGroup() *Group {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *VolumeLocator) GetVolumeIds() []string {
	if m != nil {
		return m.VolumeIds
	}
	return nil
}

// Options used for volume inspection
type VolumeInspectOptions struct {
	// Deep inspection is used to collect more information about
	// the volume. Setting this value may delay the request.
	Deep                 bool     `protobuf:"varint,1,opt,name=deep" json:"deep,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeInspectOptions) Reset()         { *m = VolumeInspectOptions{} }
func (m *VolumeInspectOptions) String() string { return proto.CompactTextString(m) }
func (*VolumeInspectOptions) ProtoMessage()    {}
func (*VolumeInspectOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{6}
}
func (m *VolumeInspectOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeInspectOptions.Unmarshal(m, b)
}
func (m *VolumeInspectOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeInspectOptions.Marshal(b, m, deterministic)
}
func (dst *VolumeInspectOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeInspectOptions.Merge(dst, src)
}
func (m *VolumeInspectOptions) XXX_Size() int {
	return xxx_messageInfo_VolumeInspectOptions.Size(m)
}
func (m *VolumeInspectOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeInspectOptions.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeInspectOptions proto.InternalMessageInfo

func (m *VolumeInspectOptions) GetDeep() bool {
	if m != nil {
		return m.Deep
	}
	return false
}

// Source is a structure that can be given to a volume
// to seed the volume with data.
type Source struct {
	// A volume id, if specified will create a clone of the parent.
	Parent string `protobuf:"bytes,1,opt,name=parent" json:"parent,omitempty"`
	// Seed will seed the volume from the specified URI
	// Any additional config for the source comes from the labels in the spec
	Seed                 string   `protobuf:"bytes,2,opt,name=seed" json:"seed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Source) Reset()         { *m = Source{} }
func (m *Source) String() string { return proto.CompactTextString(m) }
func (*Source) ProtoMessage()    {}
func (*Source) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{7}
}
func (m *Source) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Source.Unmarshal(m, b)
}
func (m *Source) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Source.Marshal(b, m, deterministic)
}
func (dst *Source) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Source.Merge(dst, src)
}
func (m *Source) XXX_Size() int {
	return xxx_messageInfo_Source.Size(m)
}
func (m *Source) XXX_DiscardUnknown() {
	xxx_messageInfo_Source.DiscardUnknown(m)
}

var xxx_messageInfo_Source proto.InternalMessageInfo

func (m *Source) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *Source) GetSeed() string {
	if m != nil {
		return m.Seed
	}
	return ""
}

// Group represents VolumeGroup / namespace
// All volumes in the same group share this object.
type Group struct {
	// Id common identifier across volumes that have the same group.
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}
func (*Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{8}
}
func (m *Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group.Unmarshal(m, b)
}
func (m *Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group.Marshal(b, m, deterministic)
}
func (dst *Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group.Merge(dst, src)
}
func (m *Group) XXX_Size() int {
	return xxx_messageInfo_Group.Size(m)
}
func (m *Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Group proto.InternalMessageInfo

func (m *Group) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// IoStrategy defines how I/O should be performed to backing storage media.
type IoStrategy struct {
	// AsyncIO enables kaio.
	AsyncIo bool `protobuf:"varint,1,opt,name=async_io,json=asyncIo" json:"async_io,omitempty"`
	// EarlyAck enables acks for async I/O at the source.
	EarlyAck bool `protobuf:"varint,2,opt,name=early_ack,json=earlyAck" json:"early_ack,omitempty"`
	// Enable direct I/O on the backing datastore
	DirectIo             bool     `protobuf:"varint,3,opt,name=direct_io,json=directIo" json:"direct_io,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IoStrategy) Reset()         { *m = IoStrategy{} }
func (m *IoStrategy) String() string { return proto.CompactTextString(m) }
func (*IoStrategy) ProtoMessage()    {}
func (*IoStrategy) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{9}
}
func (m *IoStrategy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IoStrategy.Unmarshal(m, b)
}
func (m *IoStrategy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IoStrategy.Marshal(b, m, deterministic)
}
func (dst *IoStrategy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IoStrategy.Merge(dst, src)
}
func (m *IoStrategy) XXX_Size() int {
	return xxx_messageInfo_IoStrategy.Size(m)
}
func (m *IoStrategy) XXX_DiscardUnknown() {
	xxx_messageInfo_IoStrategy.DiscardUnknown(m)
}

var xxx_messageInfo_IoStrategy proto.InternalMessageInfo

func (m *IoStrategy) GetAsyncIo() bool {
	if m != nil {
		return m.AsyncIo
	}
	return false
}

func (m *IoStrategy) GetEarlyAck() bool {
	if m != nil {
		return m.EarlyAck
	}
	return false
}

func (m *IoStrategy) GetDirectIo() bool {
	if m != nil {
		return m.DirectIo
	}
	return false
}

// Xattr defines implementation specific volume attribute
type Xattr struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Xattr) Reset()         { *m = Xattr{} }
func (m *Xattr) String() string { return proto.CompactTextString(m) }
func (*Xattr) ProtoMessage()    {}
func (*Xattr) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{10}
}
func (m *Xattr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Xattr.Unmarshal(m, b)
}
func (m *Xattr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Xattr.Marshal(b, m, deterministic)
}
func (dst *Xattr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Xattr.Merge(dst, src)
}
func (m *Xattr) XXX_Size() int {
	return xxx_messageInfo_Xattr.Size(m)
}
func (m *Xattr) XXX_DiscardUnknown() {
	xxx_messageInfo_Xattr.DiscardUnknown(m)
}

var xxx_messageInfo_Xattr proto.InternalMessageInfo

// ExportSpec defines how the volume is exported..
type ExportSpec struct {
	// ExportProtocol defines how the volume is exported.
	ExportProtocol ExportProtocol `protobuf:"varint,1,opt,name=export_protocol,json=exportProtocol,enum=openstorage.api.ExportProtocol" json:"export_protocol,omitempty"`
	// ExportOptions options exporting the volume.
	ExportOptions        string   `protobuf:"bytes,2,opt,name=export_options,json=exportOptions" json:"export_options,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExportSpec) Reset()         { *m = ExportSpec{} }
func (m *ExportSpec) String() string { return proto.CompactTextString(m) }
func (*ExportSpec) ProtoMessage()    {}
func (*ExportSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{11}
}
func (m *ExportSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExportSpec.Unmarshal(m, b)
}
func (m *ExportSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExportSpec.Marshal(b, m, deterministic)
}
func (dst *ExportSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExportSpec.Merge(dst, src)
}
func (m *ExportSpec) XXX_Size() int {
	return xxx_messageInfo_ExportSpec.Size(m)
}
func (m *ExportSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ExportSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ExportSpec proto.InternalMessageInfo

func (m *ExportSpec) GetExportProtocol() ExportProtocol {
	if m != nil {
		return m.ExportProtocol
	}
	return ExportProtocol_INVALID
}

func (m *ExportSpec) GetExportOptions() string {
	if m != nil {
		return m.ExportOptions
	}
	return ""
}

// NFSProxySpec is the spec for proxying an NFS share.
type NFSProxySpec struct {
	// ExportPath is the NFS export path on the NFS server
	ExportPath string `protobuf:"bytes,1,opt,name=export_path,json=exportPath" json:"export_path,omitempty"`
	// SubPath is the sub-directory from an NFS share that should be reflected.
	SubPath              string   `protobuf:"bytes,2,opt,name=sub_path,json=subPath" json:"sub_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NFSProxySpec) Reset()         { *m = NFSProxySpec{} }
func (m *NFSProxySpec) String() string { return proto.CompactTextString(m) }
func (*NFSProxySpec) ProtoMessage()    {}
func (*NFSProxySpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{12}
}
func (m *NFSProxySpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NFSProxySpec.Unmarshal(m, b)
}
func (m *NFSProxySpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NFSProxySpec.Marshal(b, m, deterministic)
}
func (dst *NFSProxySpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NFSProxySpec.Merge(dst, src)
}
func (m *NFSProxySpec) XXX_Size() int {
	return xxx_messageInfo_NFSProxySpec.Size(m)
}
func (m *NFSProxySpec) XXX_DiscardUnknown() {
	xxx_messageInfo_NFSProxySpec.DiscardUnknown(m)
}

var xxx_messageInfo_NFSProxySpec proto.InternalMessageInfo

func (m *NFSProxySpec) GetExportPath() string {
	if m != nil {
		return m.ExportPath
	}
	return ""
}

func (m *NFSProxySpec) GetSubPath() string {
	if m != nil {
		return m.SubPath
	}
	return ""
}

// S3ProxySpec is the spec for proxying an external object store.
type S3ProxySpec struct {
	// BucketName is the name of the bucket from the object store
	BucketName           string   `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName" json:"bucket_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S3ProxySpec) Reset()         { *m = S3ProxySpec{} }
func (m *S3ProxySpec) String() string { return proto.CompactTextString(m) }
func (*S3ProxySpec) ProtoMessage()    {}
func (*S3ProxySpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{13}
}
func (m *S3ProxySpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S3ProxySpec.Unmarshal(m, b)
}
func (m *S3ProxySpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S3ProxySpec.Marshal(b, m, deterministic)
}
func (dst *S3ProxySpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S3ProxySpec.Merge(dst, src)
}
func (m *S3ProxySpec) XXX_Size() int {
	return xxx_messageInfo_S3ProxySpec.Size(m)
}
func (m *S3ProxySpec) XXX_DiscardUnknown() {
	xxx_messageInfo_S3ProxySpec.DiscardUnknown(m)
}

var xxx_messageInfo_S3ProxySpec proto.InternalMessageInfo

func (m *S3ProxySpec) GetBucketName() string {
	if m != nil {
		return m.BucketName
	}
	return ""
}

// PXDProxySpec is the spec for proxying a Portworx volume
type PXDProxySpec struct {
	// ID of the remote portworx volume
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PXDProxySpec) Reset()         { *m = PXDProxySpec{} }
func (m *PXDProxySpec) String() string { return proto.CompactTextString(m) }
func (*PXDProxySpec) ProtoMessage()    {}
func (*PXDProxySpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{14}
}
func (m *PXDProxySpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PXDProxySpec.Unmarshal(m, b)
}
func (m *PXDProxySpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PXDProxySpec.Marshal(b, m, deterministic)
}
func (dst *PXDProxySpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PXDProxySpec.Merge(dst, src)
}
func (m *PXDProxySpec) XXX_Size() int {
	return xxx_messageInfo_PXDProxySpec.Size(m)
}
func (m *PXDProxySpec) XXX_DiscardUnknown() {
	xxx_messageInfo_PXDProxySpec.DiscardUnknown(m)
}

var xxx_messageInfo_PXDProxySpec proto.InternalMessageInfo

func (m *PXDProxySpec) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// PureBlockSpec is the spec for proxying a volume on pure_block backends
type PureBlockSpec struct {
	SerialNum            string   `protobuf:"bytes,1,opt,name=serial_num,json=serialNum" json:"serial_num,omitempty"`
	FullVolName          string   `protobuf:"bytes,2,opt,name=full_vol_name,json=fullVolName" json:"full_vol_name,omitempty"`
	PodName              string   `protobuf:"bytes,3,opt,name=pod_name,json=podName" json:"pod_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PureBlockSpec) Reset()         { *m = PureBlockSpec{} }
func (m *PureBlockSpec) String() string { return proto.CompactTextString(m) }
func (*PureBlockSpec) ProtoMessage()    {}
func (*PureBlockSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{15}
}
func (m *PureBlockSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PureBlockSpec.Unmarshal(m, b)
}
func (m *PureBlockSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PureBlockSpec.Marshal(b, m, deterministic)
}
func (dst *PureBlockSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PureBlockSpec.Merge(dst, src)
}
func (m *PureBlockSpec) XXX_Size() int {
	return xxx_messageInfo_PureBlockSpec.Size(m)
}
func (m *PureBlockSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_PureBlockSpec.DiscardUnknown(m)
}

var xxx_messageInfo_PureBlockSpec proto.InternalMessageInfo

func (m *PureBlockSpec) GetSerialNum() string {
	if m != nil {
		return m.SerialNum
	}
	return ""
}

func (m *PureBlockSpec) GetFullVolName() string {
	if m != nil {
		return m.FullVolName
	}
	return ""
}

func (m *PureBlockSpec) GetPodName() string {
	if m != nil {
		return m.PodName
	}
	return ""
}

// PureFileSpec is the spec for proxying a volume on pure_file backends
type PureFileSpec struct {
	ExportRules          string   `protobuf:"bytes,1,opt,name=export_rules,json=exportRules" json:"export_rules,omitempty"`
	FullVolName          string   `protobuf:"bytes,2,opt,name=full_vol_name,json=fullVolName" json:"full_vol_name,omitempty"`
	NfsEndpoint          string   `protobuf:"bytes,3,opt,name=nfs_endpoint,json=nfsEndpoint" json:"nfs_endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PureFileSpec) Reset()         { *m = PureFileSpec{} }
func (m *PureFileSpec) String() string { return proto.CompactTextString(m) }
func (*PureFileSpec) ProtoMessage()    {}
func (*PureFileSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{16}
}
func (m *PureFileSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PureFileSpec.Unmarshal(m, b)
}
func (m *PureFileSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PureFileSpec.Marshal(b, m, deterministic)
}
func (dst *PureFileSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PureFileSpec.Merge(dst, src)
}
func (m *PureFileSpec) XXX_Size() int {
	return xxx_messageInfo_PureFileSpec.Size(m)
}
func (m *PureFileSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_PureFileSpec.DiscardUnknown(m)
}

var xxx_messageInfo_PureFileSpec proto.InternalMessageInfo

func (m *PureFileSpec) GetExportRules() string {
	if m != nil {
		return m.ExportRules
	}
	return ""
}

func (m *PureFileSpec) GetFullVolName() string {
	if m != nil {
		return m.FullVolName
	}
	return ""
}

func (m *PureFileSpec) GetNfsEndpoint() string {
	if m != nil {
		return m.NfsEndpoint
	}
	return ""
}

// ProxySpec defines how this volume will reflect an external data source.
type ProxySpec struct {
	// ProxyProtocol defines the protocol used for proxy.
	ProxyProtocol ProxyProtocol `protobuf:"varint,1,opt,name=proxy_protocol,json=proxyProtocol,enum=openstorage.api.ProxyProtocol" json:"proxy_protocol,omitempty"`
	// Endpoint is the external endpoint which can be used for accessing the
	// external data source.
	Endpoint string `protobuf:"bytes,2,opt,name=endpoint" json:"endpoint,omitempty"`
	// NFSProxySpec is the spec for proxying an NFS share
	NfsSpec *NFSProxySpec `protobuf:"bytes,3,opt,name=nfs_spec,json=nfsSpec" json:"nfs_spec,omitempty"`
	// S3ProxySpec is the spec for proxying an external object store
	S3Spec *S3ProxySpec `protobuf:"bytes,4,opt,name=s3_spec,json=s3Spec" json:"s3_spec,omitempty"`
	// PXDProxySpec is the spec for proxying a Portworx volume
	PxdSpec *PXDProxySpec `protobuf:"bytes,5,opt,name=pxd_spec,json=pxdSpec" json:"pxd_spec,omitempty"`
	// PureFileSpec is the spec for proxying a volume on pure_file backends
	PureBlockSpec *PureBlockSpec `protobuf:"bytes,6,opt,name=pure_block_spec,json=pureBlockSpec" json:"pure_block_spec,omitempty"`
	// PureFileSpec is the spec for proxying a volume on pure_file backends
	PureFileSpec         *PureFileSpec `protobuf:"bytes,7,opt,name=pure_file_spec,json=pureFileSpec" json:"pure_file_spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ProxySpec) Reset()         { *m = ProxySpec{} }
func (m *ProxySpec) String() string { return proto.CompactTextString(m) }
func (*ProxySpec) ProtoMessage()    {}
func (*ProxySpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{17}
}
func (m *ProxySpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProxySpec.Unmarshal(m, b)
}
func (m *ProxySpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProxySpec.Marshal(b, m, deterministic)
}
func (dst *ProxySpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxySpec.Merge(dst, src)
}
func (m *ProxySpec) XXX_Size() int {
	return xxx_messageInfo_ProxySpec.Size(m)
}
func (m *ProxySpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxySpec.DiscardUnknown(m)
}

var xxx_messageInfo_ProxySpec proto.InternalMessageInfo

func (m *ProxySpec) GetProxyProtocol() ProxyProtocol {
	if m != nil {
		return m.ProxyProtocol
	}
	return ProxyProtocol_PROXY_PROTOCOL_INVALID
}

func (m *ProxySpec) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *ProxySpec) GetNfsSpec() *NFSProxySpec {
	if m != nil {
		return m.NfsSpec
	}
	return nil
}

func (m *ProxySpec) GetS3Spec() *S3ProxySpec {
	if m != nil {
		return m.S3Spec
	}
	return nil
}

func (m *ProxySpec) GetPxdSpec() *PXDProxySpec {
	if m != nil {
		return m.PxdSpec
	}
	return nil
}

func (m *ProxySpec) GetPureBlockSpec() *PureBlockSpec {
	if m != nil {
		return m.PureBlockSpec
	}
	return nil
}

func (m *ProxySpec) GetPureFileSpec() *PureFileSpec {
	if m != nil {
		return m.PureFileSpec
	}
	return nil
}

// Sharedv4ServiceSpec when set, creates a service endpoint for accessing
// a sharedv4 volume.
type Sharedv4ServiceSpec struct {
	// Name of the service. If not provided the name of the volume will be
	// used for setting up a service
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Indicates what kind of service would be created for this volume.
	Type                 Sharedv4ServiceSpec_ServiceType `protobuf:"varint,2,opt,name=type,enum=openstorage.api.Sharedv4ServiceSpec_ServiceType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *Sharedv4ServiceSpec) Reset()         { *m = Sharedv4ServiceSpec{} }
func (m *Sharedv4ServiceSpec) String() string { return proto.CompactTextString(m) }
func (*Sharedv4ServiceSpec) ProtoMessage()    {}
func (*Sharedv4ServiceSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{18}
}
func (m *Sharedv4ServiceSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sharedv4ServiceSpec.Unmarshal(m, b)
}
func (m *Sharedv4ServiceSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sharedv4ServiceSpec.Marshal(b, m, deterministic)
}
func (dst *Sharedv4ServiceSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sharedv4ServiceSpec.Merge(dst, src)
}
func (m *Sharedv4ServiceSpec) XXX_Size() int {
	return xxx_messageInfo_Sharedv4ServiceSpec.Size(m)
}
func (m *Sharedv4ServiceSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_Sharedv4ServiceSpec.DiscardUnknown(m)
}

var xxx_messageInfo_Sharedv4ServiceSpec proto.InternalMessageInfo

func (m *Sharedv4ServiceSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Sharedv4ServiceSpec) GetType() Sharedv4ServiceSpec_ServiceType {
	if m != nil {
		return m.Type
	}
	return Sharedv4ServiceSpec_UNSPECIFIED
}

// Sharedv4FailoverStrategy specifies how long to wait before failing over to a new server.
type Sharedv4FailoverStrategy struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sharedv4FailoverStrategy) Reset()         { *m = Sharedv4FailoverStrategy{} }
func (m *Sharedv4FailoverStrategy) String() string { return proto.CompactTextString(m) }
func (*Sharedv4FailoverStrategy) ProtoMessage()    {}
func (*Sharedv4FailoverStrategy) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{19}
}
func (m *Sharedv4FailoverStrategy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sharedv4FailoverStrategy.Unmarshal(m, b)
}
func (m *Sharedv4FailoverStrategy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sharedv4FailoverStrategy.Marshal(b, m, deterministic)
}
func (dst *Sharedv4FailoverStrategy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sharedv4FailoverStrategy.Merge(dst, src)
}
func (m *Sharedv4FailoverStrategy) XXX_Size() int {
	return xxx_messageInfo_Sharedv4FailoverStrategy.Size(m)
}
func (m *Sharedv4FailoverStrategy) XXX_DiscardUnknown() {
	xxx_messageInfo_Sharedv4FailoverStrategy.DiscardUnknown(m)
}

var xxx_messageInfo_Sharedv4FailoverStrategy proto.InternalMessageInfo

// Sharedv4Spec specifies common properties of sharedv4 and sharedv4 service volumes
type Sharedv4Spec struct {
	// Indicates how aggressively to fail over to a new server.
	FailoverStrategy     Sharedv4FailoverStrategy_Value `protobuf:"varint,1,opt,name=failover_strategy,json=failoverStrategy,enum=openstorage.api.Sharedv4FailoverStrategy_Value" json:"failover_strategy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Sharedv4Spec) Reset()         { *m = Sharedv4Spec{} }
func (m *Sharedv4Spec) String() string { return proto.CompactTextString(m) }
func (*Sharedv4Spec) ProtoMessage()    {}
func (*Sharedv4Spec) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{20}
}
func (m *Sharedv4Spec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sharedv4Spec.Unmarshal(m, b)
}
func (m *Sharedv4Spec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sharedv4Spec.Marshal(b, m, deterministic)
}
func (dst *Sharedv4Spec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sharedv4Spec.Merge(dst, src)
}
func (m *Sharedv4Spec) XXX_Size() int {
	return xxx_messageInfo_Sharedv4Spec.Size(m)
}
func (m *Sharedv4Spec) XXX_DiscardUnknown() {
	xxx_messageInfo_Sharedv4Spec.DiscardUnknown(m)
}

var xxx_messageInfo_Sharedv4Spec proto.InternalMessageInfo

func (m *Sharedv4Spec) GetFailoverStrategy() Sharedv4FailoverStrategy_Value {
	if m != nil {
		return m.FailoverStrategy
	}
	return Sharedv4FailoverStrategy_UNSPECIFIED
}

// MountOptions defines the mount options with which a volume is mounted.
type MountOptions struct {
	// Options are opaque key value pairs that are passed as mount options when
	// a volume is mounted.
	// If an empty value is provided only the key will be passed as an option
	// If both key and value are provided then 'key=value' will be passed as an
	// option
	Options              map[string]string `protobuf:"bytes,1,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MountOptions) Reset()         { *m = MountOptions{} }
func (m *MountOptions) String() string { return proto.CompactTextString(m) }
func (*MountOptions) ProtoMessage()    {}
func (*MountOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{21}
}
func (m *MountOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MountOptions.Unmarshal(m, b)
}
func (m *MountOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MountOptions.Marshal(b, m, deterministic)
}
func (dst *MountOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MountOptions.Merge(dst, src)
}
func (m *MountOptions) XXX_Size() int {
	return xxx_messageInfo_MountOptions.Size(m)
}
func (m *MountOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_MountOptions.DiscardUnknown(m)
}

var xxx_messageInfo_MountOptions proto.InternalMessageInfo

func (m *MountOptions) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

type FastpathReplState struct {
	DevId    uint64           `protobuf:"varint,1,opt,name=dev_id,json=devId" json:"dev_id,omitempty"`
	NodeId   uint32           `protobuf:"varint,2,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	Protocol FastpathProtocol `protobuf:"varint,3,opt,name=protocol,enum=openstorage.api.FastpathProtocol" json:"protocol,omitempty"`
	Acl      bool             `protobuf:"varint,4,opt,name=acl" json:"acl,omitempty"`
	// target info
	ExportedDevice string `protobuf:"bytes,5,opt,name=exported_device,json=exportedDevice" json:"exported_device,omitempty"`
	Block          bool   `protobuf:"varint,6,opt,name=block" json:"block,omitempty"`
	Target         string `protobuf:"bytes,7,opt,name=target" json:"target,omitempty"`
	Exported       bool   `protobuf:"varint,8,opt,name=exported" json:"exported,omitempty"`
	// initiator info
	Imported bool   `protobuf:"varint,9,opt,name=imported" json:"imported,omitempty"`
	Devpath  string `protobuf:"bytes,10,opt,name=devpath" json:"devpath,omitempty"`
	// node_uuid added to enhance UI reporting
	NodeUuid             string   `protobuf:"bytes,11,opt,name=node_uuid,json=nodeUuid" json:"node_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FastpathReplState) Reset()         { *m = FastpathReplState{} }
func (m *FastpathReplState) String() string { return proto.CompactTextString(m) }
func (*FastpathReplState) ProtoMessage()    {}
func (*FastpathReplState) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{22}
}
func (m *FastpathReplState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FastpathReplState.Unmarshal(m, b)
}
func (m *FastpathReplState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FastpathReplState.Marshal(b, m, deterministic)
}
func (dst *FastpathReplState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FastpathReplState.Merge(dst, src)
}
func (m *FastpathReplState) XXX_Size() int {
	return xxx_messageInfo_FastpathReplState.Size(m)
}
func (m *FastpathReplState) XXX_DiscardUnknown() {
	xxx_messageInfo_FastpathReplState.DiscardUnknown(m)
}

var xxx_messageInfo_FastpathReplState proto.InternalMessageInfo

func (m *FastpathReplState) GetDevId() uint64 {
	if m != nil {
		return m.DevId
	}
	return 0
}

func (m *FastpathReplState) GetNodeId() uint32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *FastpathReplState) GetProtocol() FastpathProtocol {
	if m != nil {
		return m.Protocol
	}
	return FastpathProtocol_FASTPATH_PROTO_UNKNOWN
}

func (m *FastpathReplState) GetAcl() bool {
	if m != nil {
		return m.Acl
	}
	return false
}

func (m *FastpathReplState) GetExportedDevice() string {
	if m != nil {
		return m.ExportedDevice
	}
	return ""
}

func (m *FastpathReplState) GetBlock() bool {
	if m != nil {
		return m.Block
	}
	return false
}

func (m *FastpathReplState) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *FastpathReplState) GetExported() bool {
	if m != nil {
		return m.Exported
	}
	return false
}

func (m *FastpathReplState) GetImported() bool {
	if m != nil {
		return m.Imported
	}
	return false
}

func (m *FastpathReplState) GetDevpath() string {
	if m != nil {
		return m.Devpath
	}
	return ""
}

func (m *FastpathReplState) GetNodeUuid() string {
	if m != nil {
		return m.NodeUuid
	}
	return ""
}

// FastpathConfig part of volume
type FastpathConfig struct {
	// fastpath setup on this node
	SetupOn int32 `protobuf:"varint,1,opt,name=setup_on,json=setupOn" json:"setup_on,omitempty"`
	// Fastpath temporary promotion during attach
	Promote bool `protobuf:"varint,2,opt,name=promote" json:"promote,omitempty"`
	// Fastpath consolidated current status across replicas
	Status FastpathStatus `protobuf:"varint,3,opt,name=status,enum=openstorage.api.FastpathStatus" json:"status,omitempty"`
	// Fastpath replica state for each replica in replica set
	Replicas []*FastpathReplState `protobuf:"bytes,4,rep,name=replicas" json:"replicas,omitempty"`
	// Dirty flag on volume - was attached in userspace
	Dirty bool `protobuf:"varint,5,opt,name=dirty" json:"dirty,omitempty"`
	// fastpath coordinator node uuid to enhance reporting
	CoordUuid string `protobuf:"bytes,6,opt,name=coord_uuid,json=coordUuid" json:"coord_uuid,omitempty"`
	// fastpath force failover, disable auto promote to fastpath
	ForceFailover        bool     `protobuf:"varint,7,opt,name=force_failover,json=forceFailover" json:"force_failover,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FastpathConfig) Reset()         { *m = FastpathConfig{} }
func (m *FastpathConfig) String() string { return proto.CompactTextString(m) }
func (*FastpathConfig) ProtoMessage()    {}
func (*FastpathConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{23}
}
func (m *FastpathConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FastpathConfig.Unmarshal(m, b)
}
func (m *FastpathConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FastpathConfig.Marshal(b, m, deterministic)
}
func (dst *FastpathConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FastpathConfig.Merge(dst, src)
}
func (m *FastpathConfig) XXX_Size() int {
	return xxx_messageInfo_FastpathConfig.Size(m)
}
func (m *FastpathConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_FastpathConfig.DiscardUnknown(m)
}

var xxx_messageInfo_FastpathConfig proto.InternalMessageInfo

func (m *FastpathConfig) GetSetupOn() int32 {
	if m != nil {
		return m.SetupOn
	}
	return 0
}

func (m *FastpathConfig) GetPromote() bool {
	if m != nil {
		return m.Promote
	}
	return false
}

func (m *FastpathConfig) GetStatus() FastpathStatus {
	if m != nil {
		return m.Status
	}
	return FastpathStatus_FASTPATH_UNKNOWN
}

func (m *FastpathConfig) GetReplicas() []*FastpathReplState {
	if m != nil {
		return m.Replicas
	}
	return nil
}

func (m *FastpathConfig) GetDirty() bool {
	if m != nil {
		return m.Dirty
	}
	return false
}

func (m *FastpathConfig) GetCoordUuid() string {
	if m != nil {
		return m.CoordUuid
	}
	return ""
}

func (m *FastpathConfig) GetForceFailover() bool {
	if m != nil {
		return m.ForceFailover
	}
	return false
}

// ScanPolicy defines when a filesystem check is triggered and what action to take
// User can specify *one* of the following valid policies
// 1. trigger=SCAN_TRIGGER_ON_MOUNT, action=SCAN_ACTION_SCAN_ONLY
// 2. trigger=SCAN_TRIGGER_ON_MOUNT, action=SCAN_ACTION_SCAN_REPAIR
// 3. trigger=SCAN_TRIGGER_ON_NEXT_MOUNT, action=SCAN_ACTION_SCAN_ONLY
// 4. trigger=SCAN_TRIGGER_ON_NEXT_MOUNT, action=SCAN_ACTION_SCAN_REPAIR
// 5. trigger=SCAN_TRIGGER_NONE, action=SCAN_ACTION_NONE
// Note: When trigger == SCAN_TRIGGER_ON_NEXT_MOUNT, the associated action is
// performed once on the next mount and the scanpolicy gets reset to
// `trigger=SCAN_TRIGGER_NONE, action=SCAN_ACTION_NONE`, irrespective of the
// output of the action.
type ScanPolicy struct {
	Trigger              ScanPolicy_ScanTrigger `protobuf:"varint,1,opt,name=trigger,enum=openstorage.api.ScanPolicy_ScanTrigger" json:"trigger,omitempty"`
	Action               ScanPolicy_ScanAction  `protobuf:"varint,2,opt,name=action,enum=openstorage.api.ScanPolicy_ScanAction" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ScanPolicy) Reset()         { *m = ScanPolicy{} }
func (m *ScanPolicy) String() string { return proto.CompactTextString(m) }
func (*ScanPolicy) ProtoMessage()    {}
func (*ScanPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{24}
}
func (m *ScanPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanPolicy.Unmarshal(m, b)
}
func (m *ScanPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanPolicy.Marshal(b, m, deterministic)
}
func (dst *ScanPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanPolicy.Merge(dst, src)
}
func (m *ScanPolicy) XXX_Size() int {
	return xxx_messageInfo_ScanPolicy.Size(m)
}
func (m *ScanPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_ScanPolicy proto.InternalMessageInfo

func (m *ScanPolicy) GetTrigger() ScanPolicy_ScanTrigger {
	if m != nil {
		return m.Trigger
	}
	return ScanPolicy_SCAN_TRIGGER_NONE
}

func (m *ScanPolicy) GetAction() ScanPolicy_ScanAction {
	if m != nil {
		return m.Action
	}
	return ScanPolicy_SCAN_ACTION_NONE
}

// IoThrottle defines IO throttle limits for a volume
// read_iops : maximum read iops this volume is allowed
// write_iops : maximum write iops this volume is allowed
// read_bw_mbytes  : maximum read bandwidth this volume is allowed in MegaBytes
// write_bw_mbytes : maximum write bandwidth this volume is allowed in MegaBytes
type IoThrottle struct {
	ReadIops             uint32   `protobuf:"varint,1,opt,name=read_iops,json=readIops" json:"read_iops,omitempty"`
	WriteIops            uint32   `protobuf:"varint,2,opt,name=write_iops,json=writeIops" json:"write_iops,omitempty"`
	ReadBwMbytes         uint32   `protobuf:"varint,3,opt,name=read_bw_mbytes,json=readBwMbytes" json:"read_bw_mbytes,omitempty"`
	WriteBwMbytes        uint32   `protobuf:"varint,4,opt,name=write_bw_mbytes,json=writeBwMbytes" json:"write_bw_mbytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IoThrottle) Reset()         { *m = IoThrottle{} }
func (m *IoThrottle) String() string { return proto.CompactTextString(m) }
func (*IoThrottle) ProtoMessage()    {}
func (*IoThrottle) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{25}
}
func (m *IoThrottle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IoThrottle.Unmarshal(m, b)
}
func (m *IoThrottle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IoThrottle.Marshal(b, m, deterministic)
}
func (dst *IoThrottle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IoThrottle.Merge(dst, src)
}
func (m *IoThrottle) XXX_Size() int {
	return xxx_messageInfo_IoThrottle.Size(m)
}
func (m *IoThrottle) XXX_DiscardUnknown() {
	xxx_messageInfo_IoThrottle.DiscardUnknown(m)
}

var xxx_messageInfo_IoThrottle proto.InternalMessageInfo

func (m *IoThrottle) GetReadIops() uint32 {
	if m != nil {
		return m.ReadIops
	}
	return 0
}

func (m *IoThrottle) GetWriteIops() uint32 {
	if m != nil {
		return m.WriteIops
	}
	return 0
}

func (m *IoThrottle) GetReadBwMbytes() uint32 {
	if m != nil {
		return m.ReadBwMbytes
	}
	return 0
}

func (m *IoThrottle) GetWriteBwMbytes() uint32 {
	if m != nil {
		return m.WriteBwMbytes
	}
	return 0
}

// VolumeSpec has the properties needed to create a volume.
type VolumeSpec struct {
	// Ephemeral storage
	Ephemeral bool `protobuf:"varint,1,opt,name=ephemeral" json:"ephemeral,omitempty"`
	// Size specifies the thin provisioned volume size in bytes
	Size uint64 `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	// Format specifies the filesystem for this volume.
	Format FSType `protobuf:"varint,3,opt,name=format,enum=openstorage.api.FSType" json:"format,omitempty"`
	// BlockSize for the filesystem.
	BlockSize int64 `protobuf:"varint,4,opt,name=block_size,json=blockSize" json:"block_size,omitempty"`
	// HaLevel specifies the number of copies of data.
	HaLevel int64 `protobuf:"varint,5,opt,name=ha_level,json=haLevel" json:"ha_level,omitempty"`
	// Cos specifies the relative class of service.
	Cos CosType `protobuf:"varint,6,opt,name=cos,enum=openstorage.api.CosType" json:"cos,omitempty"`
	// IoProfile provides a hint about application using this volume.
	IoProfile IoProfile `protobuf:"varint,7,opt,name=io_profile,json=ioProfile,enum=openstorage.api.IoProfile" json:"io_profile,omitempty"`
	// Dedupe specifies if the volume data is to be de-duplicated.
	Dedupe bool `protobuf:"varint,8,opt,name=dedupe" json:"dedupe,omitempty"`
	// SnapshotInterval in minutes, set to 0 to disable snapshots
	SnapshotInterval uint32 `protobuf:"varint,9,opt,name=snapshot_interval,json=snapshotInterval" json:"snapshot_interval,omitempty"`
	// (deprecated, do not use) VolumeLabels configuration labels
	VolumeLabels map[string]string `protobuf:"bytes,10,rep,name=volume_labels,json=volumeLabels" json:"volume_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Shared is true if this volume can be concurrently accessed by multiple users.
	Shared bool `protobuf:"varint,11,opt,name=shared" json:"shared,omitempty"`
	// ReplicaSet is the desired set of nodes for the volume data.
	ReplicaSet *ReplicaSet `protobuf:"bytes,12,opt,name=replica_set,json=replicaSet" json:"replica_set,omitempty"`
	// Aggregation level Specifies the number of parts the volume can be aggregated from.
	AggregationLevel uint32 `protobuf:"varint,13,opt,name=aggregation_level,json=aggregationLevel" json:"aggregation_level,omitempty"`
	// Encrypted is true if this volume will be cryptographically secured.
	Encrypted bool `protobuf:"varint,14,opt,name=encrypted" json:"encrypted,omitempty"`
	// Passphrase for an encrypted volume
	Passphrase string `protobuf:"bytes,15,opt,name=passphrase" json:"passphrase,omitempty"`
	// SnapshotSchedule a well known string that specifies when snapshots should be taken.
	SnapshotSchedule string `protobuf:"bytes,16,opt,name=snapshot_schedule,json=snapshotSchedule" json:"snapshot_schedule,omitempty"`
	// Scale allows autocreation of volumes.
	Scale uint32 `protobuf:"varint,17,opt,name=scale" json:"scale,omitempty"`
	// Sticky volumes cannot be deleted until the flag is removed.
	Sticky bool `protobuf:"varint,18,opt,name=sticky" json:"sticky,omitempty"`
	// Group identifies a consistency group
	Group *Group `protobuf:"bytes,21,opt,name=group" json:"group,omitempty"`
	// GroupEnforced is true if consistency group creation is enforced.
	GroupEnforced bool `protobuf:"varint,22,opt,name=group_enforced,json=groupEnforced" json:"group_enforced,omitempty"`
	// Compressed is true if this volume is to be compressed.
	Compressed bool `protobuf:"varint,23,opt,name=compressed" json:"compressed,omitempty"`
	// Cascaded is true if this volume can be populated on any node from an external source.
	Cascaded bool `protobuf:"varint,24,opt,name=cascaded" json:"cascaded,omitempty"`
	// Journal is true if data for the volume goes into the journal.
	Journal bool `protobuf:"varint,25,opt,name=journal" json:"journal,omitempty"`
	// Sharedv4 is true if this volume can be accessed via sharedv4.
	Sharedv4 bool `protobuf:"varint,26,opt,name=sharedv4" json:"sharedv4,omitempty"`
	// QueueDepth defines the desired block device queue depth
	QueueDepth uint32 `protobuf:"varint,27,opt,name=queue_depth,json=queueDepth" json:"queue_depth,omitempty"`
	// Use to force a file system type which is not recommended.
	// The driver may still refuse to use the file system type.
	ForceUnsupportedFsType bool `protobuf:"varint,28,opt,name=force_unsupported_fs_type,json=forceUnsupportedFsType" json:"force_unsupported_fs_type,omitempty"`
	// Nodiscard specifies if the volume will be mounted with discard support disabled.
	// i.e. FS will not release allocated blocks back to the backing storage pool.
	Nodiscard bool `protobuf:"varint,29,opt,name=nodiscard" json:"nodiscard,omitempty"`
	// IoStrategy preferred strategy for I/O.
	IoStrategy *IoStrategy `protobuf:"bytes,30,opt,name=io_strategy,json=ioStrategy" json:"io_strategy,omitempty"`
	// PlacementStrategy specifies a spec to indicate where to place the volume.
	PlacementStrategy *VolumePlacementStrategy `protobuf:"bytes,31,opt,name=placement_strategy,json=placementStrategy" json:"placement_strategy,omitempty"`
	// StoragePolicy if applied/specified while creating volume
	StoragePolicy string `protobuf:"bytes,32,opt,name=storage_policy,json=storagePolicy" json:"storage_policy,omitempty"`
	// Ownership
	Ownership *Ownership `protobuf:"bytes,33,opt,name=ownership" json:"ownership,omitempty"`
	// ExportSpec defines how the volume should be exported.
	ExportSpec *ExportSpec `protobuf:"bytes,34,opt,name=export_spec,json=exportSpec" json:"export_spec,omitempty"`
	// fastpath extensions
	FpPreference bool `protobuf:"varint,35,opt,name=fp_preference,json=fpPreference" json:"fp_preference,omitempty"`
	// Xattr specifies implementation specific volume attributes
	Xattr Xattr_Value `protobuf:"varint,36,opt,name=xattr,enum=openstorage.api.Xattr_Value" json:"xattr,omitempty"`
	// ScanPolicy specifies the filesystem check policy
	ScanPolicy *ScanPolicy `protobuf:"bytes,37,opt,name=scan_policy,json=scanPolicy" json:"scan_policy,omitempty"`
	// MountOptions defines the options that will be used while mounting this volume
	MountOptions *MountOptions `protobuf:"bytes,38,opt,name=mount_options,json=mountOptions" json:"mount_options,omitempty"`
	// Sharedv4MountOptions defines the options that will be used while mounting a sharedv4 volume
	// from a node where the volume replica does not exist
	Sharedv4MountOptions *MountOptions `protobuf:"bytes,39,opt,name=sharedv4_mount_options,json=sharedv4MountOptions" json:"sharedv4_mount_options,omitempty"`
	// Proxy_write if true, per volume proxy write replication enabled
	ProxyWrite bool `protobuf:"varint,40,opt,name=proxy_write,json=proxyWrite" json:"proxy_write,omitempty"`
	// ProxySpec indicates that this volume is used for proxying an external data source
	ProxySpec *ProxySpec `protobuf:"bytes,41,opt,name=proxy_spec,json=proxySpec" json:"proxy_spec,omitempty"`
	// Sharedv4ServiceSpec specifies a spec for configuring a service for a sharedv4 volume
	Sharedv4ServiceSpec *Sharedv4ServiceSpec `protobuf:"bytes,42,opt,name=sharedv4_service_spec,json=sharedv4ServiceSpec" json:"sharedv4_service_spec,omitempty"`
	// Sharedv4Spec specifies common properties of sharedv4 and sharedv4 service volumes
	Sharedv4Spec *Sharedv4Spec `protobuf:"bytes,43,opt,name=sharedv4_spec,json=sharedv4Spec" json:"sharedv4_spec,omitempty"`
	// Autofstrim indicates that fstrim would be run on this volume automatically, without user intervention
	AutoFstrim bool `protobuf:"varint,44,opt,name=auto_fstrim,json=autoFstrim" json:"auto_fstrim,omitempty"`
	// IoThrottle specifies maximum io(iops/bandwidth) this volume is restricted to
	IoThrottle *IoThrottle `protobuf:"bytes,45,opt,name=io_throttle,json=ioThrottle" json:"io_throttle,omitempty"`
	// TopologyRequirement topology requirement for this volume
	TopologyRequirement *TopologyRequirement `protobuf:"bytes,48,opt,name=topology_requirement,json=topologyRequirement" json:"topology_requirement,omitempty"`
	// Filesystem create options to be honored.
	FaCreateOptions string `protobuf:"bytes,50,opt,name=fa_create_options,json=faCreateOptions" json:"fa_create_options,omitempty"`
	// NearSync specifies the volume has a near-sync replica
	NearSync bool `protobuf:"varint,51,opt,name=near_sync,json=nearSync" json:"near_sync,omitempty"`
	// NearSyncReplicationStrategy is replication strategy for near sync volumes
	NearSyncReplicationStrategy NearSyncReplicationStrategy `protobuf:"varint,52,opt,name=near_sync_replication_strategy,json=nearSyncReplicationStrategy,enum=openstorage.api.NearSyncReplicationStrategy" json:"near_sync_replication_strategy,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                    `json:"-"`
	XXX_unrecognized            []byte                      `json:"-"`
	XXX_sizecache               int32                       `json:"-"`
}

func (m *VolumeSpec) Reset()         { *m = VolumeSpec{} }
func (m *VolumeSpec) String() string { return proto.CompactTextString(m) }
func (*VolumeSpec) ProtoMessage()    {}
func (*VolumeSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{26}
}
func (m *VolumeSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSpec.Unmarshal(m, b)
}
func (m *VolumeSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSpec.Marshal(b, m, deterministic)
}
func (dst *VolumeSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSpec.Merge(dst, src)
}
func (m *VolumeSpec) XXX_Size() int {
	return xxx_messageInfo_VolumeSpec.Size(m)
}
func (m *VolumeSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSpec.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSpec proto.InternalMessageInfo

func (m *VolumeSpec) GetEphemeral() bool {
	if m != nil {
		return m.Ephemeral
	}
	return false
}

func (m *VolumeSpec) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *VolumeSpec) GetFormat() FSType {
	if m != nil {
		return m.Format
	}
	return FSType_FS_TYPE_NONE
}

func (m *VolumeSpec) GetBlockSize() int64 {
	if m != nil {
		return m.BlockSize
	}
	return 0
}

func (m *VolumeSpec) GetHaLevel() int64 {
	if m != nil {
		return m.HaLevel
	}
	return 0
}

func (m *VolumeSpec) GetCos() CosType {
	if m != nil {
		return m.Cos
	}
	return CosType_NONE
}

func (m *VolumeSpec) GetIoProfile() IoProfile {
	if m != nil {
		return m.IoProfile
	}
	return IoProfile_IO_PROFILE_SEQUENTIAL
}

func (m *VolumeSpec) GetDedupe() bool {
	if m != nil {
		return m.Dedupe
	}
	return false
}

func (m *VolumeSpec) GetSnapshotInterval() uint32 {
	if m != nil {
		return m.SnapshotInterval
	}
	return 0
}

func (m *VolumeSpec) GetVolumeLabels() map[string]string {
	if m != nil {
		return m.VolumeLabels
	}
	return nil
}

func (m *VolumeSpec) GetShared() bool {
	if m != nil {
		return m.Shared
	}
	return false
}

func (m *VolumeSpec) GetReplicaSet() *ReplicaSet {
	if m != nil {
		return m.ReplicaSet
	}
	return nil
}

func (m *VolumeSpec) GetAggregationLevel() uint32 {
	if m != nil {
		return m.AggregationLevel
	}
	return 0
}

func (m *VolumeSpec) GetEncrypted() bool {
	if m != nil {
		return m.Encrypted
	}
	return false
}

func (m *VolumeSpec) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

func (m *VolumeSpec) GetSnapshotSchedule() string {
	if m != nil {
		return m.SnapshotSchedule
	}
	return ""
}

func (m *VolumeSpec) GetScale() uint32 {
	if m != nil {
		return m.Scale
	}
	return 0
}

func (m *VolumeSpec) GetSticky() bool {
	if m != nil {
		return m.Sticky
	}
	return false
}

func (m *VolumeSpec) GetGroup() *Group {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *VolumeSpec) GetGroupEnforced() bool {
	if m != nil {
		return m.GroupEnforced
	}
	return false
}

func (m *VolumeSpec) GetCompressed() bool {
	if m != nil {
		return m.Compressed
	}
	return false
}

func (m *VolumeSpec) GetCascaded() bool {
	if m != nil {
		return m.Cascaded
	}
	return false
}

func (m *VolumeSpec) GetJournal() bool {
	if m != nil {
		return m.Journal
	}
	return false
}

func (m *VolumeSpec) GetSharedv4() bool {
	if m != nil {
		return m.Sharedv4
	}
	return false
}

func (m *VolumeSpec) GetQueueDepth() uint32 {
	if m != nil {
		return m.QueueDepth
	}
	return 0
}

func (m *VolumeSpec) GetForceUnsupportedFsType() bool {
	if m != nil {
		return m.ForceUnsupportedFsType
	}
	return false
}

func (m *VolumeSpec) GetNodiscard() bool {
	if m != nil {
		return m.Nodiscard
	}
	return false
}

func (m *VolumeSpec) GetIoStrategy() *IoStrategy {
	if m != nil {
		return m.IoStrategy
	}
	return nil
}

func (m *VolumeSpec) GetPlacementStrategy() *VolumePlacementStrategy {
	if m != nil {
		return m.PlacementStrategy
	}
	return nil
}

func (m *VolumeSpec) GetStoragePolicy() string {
	if m != nil {
		return m.StoragePolicy
	}
	return ""
}

func (m *VolumeSpec) GetOwnership() *Ownership {
	if m != nil {
		return m.Ownership
	}
	return nil
}

func (m *VolumeSpec) GetExportSpec() *ExportSpec {
	if m != nil {
		return m.ExportSpec
	}
	return nil
}

func (m *VolumeSpec) GetFpPreference() bool {
	if m != nil {
		return m.FpPreference
	}
	return false
}

func (m *VolumeSpec) GetXattr() Xattr_Value {
	if m != nil {
		return m.Xattr
	}
	return Xattr_UNSPECIFIED
}

func (m *VolumeSpec) GetScanPolicy() *ScanPolicy {
	if m != nil {
		return m.ScanPolicy
	}
	return nil
}

func (m *VolumeSpec) GetMountOptions() *MountOptions {
	if m != nil {
		return m.MountOptions
	}
	return nil
}

func (m *VolumeSpec) GetSharedv4MountOptions() *MountOptions {
	if m != nil {
		return m.Sharedv4MountOptions
	}
	return nil
}

func (m *VolumeSpec) GetProxyWrite() bool {
	if m != nil {
		return m.ProxyWrite
	}
	return false
}

func (m *VolumeSpec) GetProxySpec() *ProxySpec {
	if m != nil {
		return m.ProxySpec
	}
	return nil
}

func (m *VolumeSpec) GetSharedv4ServiceSpec() *Sharedv4ServiceSpec {
	if m != nil {
		return m.Sharedv4ServiceSpec
	}
	return nil
}

func (m *VolumeSpec) GetSharedv4Spec() *Sharedv4Spec {
	if m != nil {
		return m.Sharedv4Spec
	}
	return nil
}

func (m *VolumeSpec) GetAutoFstrim() bool {
	if m != nil {
		return m.AutoFstrim
	}
	return false
}

func (m *VolumeSpec) GetIoThrottle() *IoThrottle {
	if m != nil {
		return m.IoThrottle
	}
	return nil
}

func (m *VolumeSpec) GetTopologyRequirement() *TopologyRequirement {
	if m != nil {
		return m.TopologyRequirement
	}
	return nil
}

func (m *VolumeSpec) GetFaCreateOptions() string {
	if m != nil {
		return m.FaCreateOptions
	}
	return ""
}

func (m *VolumeSpec) GetNearSync() bool {
	if m != nil {
		return m.NearSync
	}
	return false
}

func (m *VolumeSpec) GetNearSyncReplicationStrategy() NearSyncReplicationStrategy {
	if m != nil {
		return m.NearSyncReplicationStrategy
	}
	return NearSyncReplicationStrategy_NEAR_SYNC_STRATEGY_NONE
}

// VolumeSpecUpdate provides a method to set any of the VolumeSpec of an existing volume
type VolumeSpecUpdate struct {
	// Size specifies the thin provisioned volume size in bytes
	//
	// Types that are valid to be assigned to SizeOpt:
	//	*VolumeSpecUpdate_Size
	SizeOpt isVolumeSpecUpdate_SizeOpt `protobuf_oneof:"size_opt"`
	// HaLevel specifies the number of copies of data.
	//
	// Types that are valid to be assigned to HaLevelOpt:
	//	*VolumeSpecUpdate_HaLevel
	HaLevelOpt isVolumeSpecUpdate_HaLevelOpt `protobuf_oneof:"ha_level_opt"`
	// Cos specifies the relative class of service.
	//
	// Types that are valid to be assigned to CosOpt:
	//	*VolumeSpecUpdate_Cos
	CosOpt isVolumeSpecUpdate_CosOpt `protobuf_oneof:"cos_opt"`
	// IoProfile provides a hint about application using this volume.
	//
	// Types that are valid to be assigned to IoProfileOpt:
	//	*VolumeSpecUpdate_IoProfile
	IoProfileOpt isVolumeSpecUpdate_IoProfileOpt `protobuf_oneof:"io_profile_opt"`
	// Dedupe specifies if the volume data is to be de-duplicated.
	//
	// Types that are valid to be assigned to DedupeOpt:
	//	*VolumeSpecUpdate_Dedupe
	DedupeOpt isVolumeSpecUpdate_DedupeOpt `protobuf_oneof:"dedupe_opt"`
	// SnapshotInterval in minutes, set to 0 to disable snapshots
	//
	// Types that are valid to be assigned to SnapshotIntervalOpt:
	//	*VolumeSpecUpdate_SnapshotInterval
	SnapshotIntervalOpt isVolumeSpecUpdate_SnapshotIntervalOpt `protobuf_oneof:"snapshot_interval_opt"`
	// Shared is true if this volume can be remotely accessed.
	//
	// Types that are valid to be assigned to SharedOpt:
	//	*VolumeSpecUpdate_Shared
	SharedOpt isVolumeSpecUpdate_SharedOpt `protobuf_oneof:"shared_opt"`
	// ReplicaSet is the desired set of nodes for the volume data.
	ReplicaSet *ReplicaSet `protobuf:"bytes,12,opt,name=replica_set,json=replicaSet" json:"replica_set,omitempty"`
	// Passphrase for an encrypted volume
	//
	// Types that are valid to be assigned to PassphraseOpt:
	//	*VolumeSpecUpdate_Passphrase
	PassphraseOpt isVolumeSpecUpdate_PassphraseOpt `protobuf_oneof:"passphrase_opt"`
	// SnapshotSchedule a well known string that specifies when snapshots should be taken.
	//
	// Types that are valid to be assigned to SnapshotScheduleOpt:
	//	*VolumeSpecUpdate_SnapshotSchedule
	SnapshotScheduleOpt isVolumeSpecUpdate_SnapshotScheduleOpt `protobuf_oneof:"snapshot_schedule_opt"`
	// Scale allows autocreation of volumes.
	//
	// Types that are valid to be assigned to ScaleOpt:
	//	*VolumeSpecUpdate_Scale
	ScaleOpt isVolumeSpecUpdate_ScaleOpt `protobuf_oneof:"scale_opt"`
	// Sticky volumes cannot be deleted until the flag is removed.
	//
	// Types that are valid to be assigned to StickyOpt:
	//	*VolumeSpecUpdate_Sticky
	StickyOpt isVolumeSpecUpdate_StickyOpt `protobuf_oneof:"sticky_opt"`
	// Group identifies a consistency group
	//
	// Types that are valid to be assigned to GroupOpt:
	//	*VolumeSpecUpdate_Group
	GroupOpt isVolumeSpecUpdate_GroupOpt `protobuf_oneof:"group_opt"`
	// Journal is true if data for the volume goes into the journal.
	//
	// Types that are valid to be assigned to JournalOpt:
	//	*VolumeSpecUpdate_Journal
	JournalOpt isVolumeSpecUpdate_JournalOpt `protobuf_oneof:"journal_opt"`
	// Sharedv4 is true if this volume can be accessed via sharedv4.
	//
	// Types that are valid to be assigned to Sharedv4Opt:
	//	*VolumeSpecUpdate_Sharedv4
	Sharedv4Opt isVolumeSpecUpdate_Sharedv4Opt `protobuf_oneof:"sharedv4_opt"`
	// QueueDepth defines the desired block device queue depth
	//
	// Types that are valid to be assigned to QueueDepthOpt:
	//	*VolumeSpecUpdate_QueueDepth
	QueueDepthOpt isVolumeSpecUpdate_QueueDepthOpt `protobuf_oneof:"queue_depth_opt"`
	// Ownership volume information to update. If the value of `owner` in the
	// `ownership` message is an empty string then the value of `owner` in
	// the `VolumeSpec.Ownership.owner` will not be updated.
	Ownership *Ownership `protobuf:"bytes,26,opt,name=ownership" json:"ownership,omitempty"`
	// Nodiscard specifies if the volume will be mounted with discard support disabled.
	// i.e. FS will not release allocated blocks back to the backing storage pool.
	//
	// Types that are valid to be assigned to NodiscardOpt:
	//	*VolumeSpecUpdate_Nodiscard
	NodiscardOpt isVolumeSpecUpdate_NodiscardOpt `protobuf_oneof:"nodiscard_opt"`
	// IoStrategy preferred strategy for I/O.
	IoStrategy *IoStrategy `protobuf:"bytes,28,opt,name=io_strategy,json=ioStrategy" json:"io_strategy,omitempty"`
	// ExportSpec volume export spec
	//
	// Types that are valid to be assigned to ExportSpecOpt:
	//	*VolumeSpecUpdate_ExportSpec
	ExportSpecOpt isVolumeSpecUpdate_ExportSpecOpt `protobuf_oneof:"export_spec_opt"`
	// fastpath preference
	//
	// Types that are valid to be assigned to FastpathOpt:
	//	*VolumeSpecUpdate_Fastpath
	FastpathOpt isVolumeSpecUpdate_FastpathOpt `protobuf_oneof:"fastpath_opt"`
	// Xattr specifies implementation specific volume attributes
	//
	// Types that are valid to be assigned to XattrOpt:
	//	*VolumeSpecUpdate_Xattr
	XattrOpt isVolumeSpecUpdate_XattrOpt `protobuf_oneof:"xattr_opt"`
	// scan_policy_opt defines the filesystem check policy for the volume
	//
	// Types that are valid to be assigned to ScanPolicyOpt:
	//	*VolumeSpecUpdate_ScanPolicy
	ScanPolicyOpt isVolumeSpecUpdate_ScanPolicyOpt `protobuf_oneof:"scan_policy_opt"`
	// mount_opt provides the mount time options for a volume
	//
	// Types that are valid to be assigned to MountOpt:
	//	*VolumeSpecUpdate_MountOptSpec
	MountOpt isVolumeSpecUpdate_MountOpt `protobuf_oneof:"mount_opt"`
	// sharedv4_mount_opt provides the client side mount time options for a sharedv4 volume
	//
	// Types that are valid to be assigned to Sharedv4MountOpt:
	//	*VolumeSpecUpdate_Sharedv4MountOptSpec
	Sharedv4MountOpt isVolumeSpecUpdate_Sharedv4MountOpt `protobuf_oneof:"sharedv4_mount_opt"`
	// Proxy_write is true if proxy write replication is enabled for the volume
	//
	// Types that are valid to be assigned to ProxyWriteOpt:
	//	*VolumeSpecUpdate_ProxyWrite
	ProxyWriteOpt isVolumeSpecUpdate_ProxyWriteOpt `protobuf_oneof:"proxy_write_opt"`
	// proxy_spec_opt provides the spec for a proxy volume
	//
	// Types that are valid to be assigned to ProxySpecOpt:
	//	*VolumeSpecUpdate_ProxySpec
	ProxySpecOpt isVolumeSpecUpdate_ProxySpecOpt `protobuf_oneof:"proxy_spec_opt"`
	// sharedv4_service_spec_opt provides the spec for sharedv4 volume service
	//
	// Types that are valid to be assigned to Sharedv4ServiceSpecOpt:
	//	*VolumeSpecUpdate_Sharedv4ServiceSpec
	Sharedv4ServiceSpecOpt isVolumeSpecUpdate_Sharedv4ServiceSpecOpt `protobuf_oneof:"sharedv4_service_spec_opt"`
	// Sharedv4Spec specifies common properties of sharedv4 and sharedv4 service volumes
	//
	// Types that are valid to be assigned to Sharedv4SpecOpt:
	//	*VolumeSpecUpdate_Sharedv4Spec
	Sharedv4SpecOpt isVolumeSpecUpdate_Sharedv4SpecOpt `protobuf_oneof:"sharedv4_spec_opt"`
	// Autofstrim is set to true, to enable automatic fstrim on this volume
	//
	// Types that are valid to be assigned to AutoFstrimOpt:
	//	*VolumeSpecUpdate_AutoFstrim
	AutoFstrimOpt isVolumeSpecUpdate_AutoFstrimOpt `protobuf_oneof:"auto_fstrim_opt"`
	// io_throttle_opt defines the io throttle limits for the volume
	//
	// Types that are valid to be assigned to IoThrottleOpt:
	//	*VolumeSpecUpdate_IoThrottle
	IoThrottleOpt isVolumeSpecUpdate_IoThrottleOpt `protobuf_oneof:"io_throttle_opt"`
	// NearSyncReplicationStrategy is replication strategy for near sync volumes
	//
	// Types that are valid to be assigned to NearSyncReplicationStrategyOpt:
	//	*VolumeSpecUpdate_NearSyncReplicationStrategy
	NearSyncReplicationStrategyOpt isVolumeSpecUpdate_NearSyncReplicationStrategyOpt `protobuf_oneof:"near_sync_replication_strategy_opt"`
	// PureNfsEnpoint specifies NFS endpoint for PureFile Direct Access volumes
	//
	// Types that are valid to be assigned to PureNfsEndpointOpt:
	//	*VolumeSpecUpdate_PureNfsEndpoint
	PureNfsEndpointOpt   isVolumeSpecUpdate_PureNfsEndpointOpt `protobuf_oneof:"pure_nfs_endpoint_opt"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *VolumeSpecUpdate) Reset()         { *m = VolumeSpecUpdate{} }
func (m *VolumeSpecUpdate) String() string { return proto.CompactTextString(m) }
func (*VolumeSpecUpdate) ProtoMessage()    {}
func (*VolumeSpecUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{27}
}
func (m *VolumeSpecUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSpecUpdate.Unmarshal(m, b)
}
func (m *VolumeSpecUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSpecUpdate.Marshal(b, m, deterministic)
}
func (dst *VolumeSpecUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSpecUpdate.Merge(dst, src)
}
func (m *VolumeSpecUpdate) XXX_Size() int {
	return xxx_messageInfo_VolumeSpecUpdate.Size(m)
}
func (m *VolumeSpecUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSpecUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSpecUpdate proto.InternalMessageInfo

type isVolumeSpecUpdate_SizeOpt interface {
	isVolumeSpecUpdate_SizeOpt()
}
type isVolumeSpecUpdate_HaLevelOpt interface {
	isVolumeSpecUpdate_HaLevelOpt()
}
type isVolumeSpecUpdate_CosOpt interface {
	isVolumeSpecUpdate_CosOpt()
}
type isVolumeSpecUpdate_IoProfileOpt interface {
	isVolumeSpecUpdate_IoProfileOpt()
}
type isVolumeSpecUpdate_DedupeOpt interface {
	isVolumeSpecUpdate_DedupeOpt()
}
type isVolumeSpecUpdate_SnapshotIntervalOpt interface {
	isVolumeSpecUpdate_SnapshotIntervalOpt()
}
type isVolumeSpecUpdate_SharedOpt interface {
	isVolumeSpecUpdate_SharedOpt()
}
type isVolumeSpecUpdate_PassphraseOpt interface {
	isVolumeSpecUpdate_PassphraseOpt()
}
type isVolumeSpecUpdate_SnapshotScheduleOpt interface {
	isVolumeSpecUpdate_SnapshotScheduleOpt()
}
type isVolumeSpecUpdate_ScaleOpt interface {
	isVolumeSpecUpdate_ScaleOpt()
}
type isVolumeSpecUpdate_StickyOpt interface {
	isVolumeSpecUpdate_StickyOpt()
}
type isVolumeSpecUpdate_GroupOpt interface {
	isVolumeSpecUpdate_GroupOpt()
}
type isVolumeSpecUpdate_JournalOpt interface {
	isVolumeSpecUpdate_JournalOpt()
}
type isVolumeSpecUpdate_Sharedv4Opt interface {
	isVolumeSpecUpdate_Sharedv4Opt()
}
type isVolumeSpecUpdate_QueueDepthOpt interface {
	isVolumeSpecUpdate_QueueDepthOpt()
}
type isVolumeSpecUpdate_NodiscardOpt interface {
	isVolumeSpecUpdate_NodiscardOpt()
}
type isVolumeSpecUpdate_ExportSpecOpt interface {
	isVolumeSpecUpdate_ExportSpecOpt()
}
type isVolumeSpecUpdate_FastpathOpt interface {
	isVolumeSpecUpdate_FastpathOpt()
}
type isVolumeSpecUpdate_XattrOpt interface {
	isVolumeSpecUpdate_XattrOpt()
}
type isVolumeSpecUpdate_ScanPolicyOpt interface {
	isVolumeSpecUpdate_ScanPolicyOpt()
}
type isVolumeSpecUpdate_MountOpt interface {
	isVolumeSpecUpdate_MountOpt()
}
type isVolumeSpecUpdate_Sharedv4MountOpt interface {
	isVolumeSpecUpdate_Sharedv4MountOpt()
}
type isVolumeSpecUpdate_ProxyWriteOpt interface {
	isVolumeSpecUpdate_ProxyWriteOpt()
}
type isVolumeSpecUpdate_ProxySpecOpt interface {
	isVolumeSpecUpdate_ProxySpecOpt()
}
type isVolumeSpecUpdate_Sharedv4ServiceSpecOpt interface {
	isVolumeSpecUpdate_Sharedv4ServiceSpecOpt()
}
type isVolumeSpecUpdate_Sharedv4SpecOpt interface {
	isVolumeSpecUpdate_Sharedv4SpecOpt()
}
type isVolumeSpecUpdate_AutoFstrimOpt interface {
	isVolumeSpecUpdate_AutoFstrimOpt()
}
type isVolumeSpecUpdate_IoThrottleOpt interface {
	isVolumeSpecUpdate_IoThrottleOpt()
}
type isVolumeSpecUpdate_NearSyncReplicationStrategyOpt interface {
	isVolumeSpecUpdate_NearSyncReplicationStrategyOpt()
}
type isVolumeSpecUpdate_PureNfsEndpointOpt interface {
	isVolumeSpecUpdate_PureNfsEndpointOpt()
}

type VolumeSpecUpdate_Size struct {
	Size uint64 `protobuf:"varint,2,opt,name=size,oneof"`
}
type VolumeSpecUpdate_HaLevel struct {
	HaLevel int64 `protobuf:"varint,5,opt,name=ha_level,json=haLevel,oneof"`
}
type VolumeSpecUpdate_Cos struct {
	Cos CosType `protobuf:"varint,6,opt,name=cos,enum=openstorage.api.CosType,oneof"`
}
type VolumeSpecUpdate_IoProfile struct {
	IoProfile IoProfile `protobuf:"varint,7,opt,name=io_profile,json=ioProfile,enum=openstorage.api.IoProfile,oneof"`
}
type VolumeSpecUpdate_Dedupe struct {
	Dedupe bool `protobuf:"varint,8,opt,name=dedupe,oneof"`
}
type VolumeSpecUpdate_SnapshotInterval struct {
	SnapshotInterval uint32 `protobuf:"varint,9,opt,name=snapshot_interval,json=snapshotInterval,oneof"`
}
type VolumeSpecUpdate_Shared struct {
	Shared bool `protobuf:"varint,11,opt,name=shared,oneof"`
}
type VolumeSpecUpdate_Passphrase struct {
	Passphrase string `protobuf:"bytes,15,opt,name=passphrase,oneof"`
}
type VolumeSpecUpdate_SnapshotSchedule struct {
	SnapshotSchedule string `protobuf:"bytes,16,opt,name=snapshot_schedule,json=snapshotSchedule,oneof"`
}
type VolumeSpecUpdate_Scale struct {
	Scale uint32 `protobuf:"varint,17,opt,name=scale,oneof"`
}
type VolumeSpecUpdate_Sticky struct {
	Sticky bool `protobuf:"varint,18,opt,name=sticky,oneof"`
}
type VolumeSpecUpdate_Group struct {
	Group *Group `protobuf:"bytes,19,opt,name=group,oneof"`
}
type VolumeSpecUpdate_Journal struct {
	Journal bool `protobuf:"varint,23,opt,name=journal,oneof"`
}
type VolumeSpecUpdate_Sharedv4 struct {
	Sharedv4 bool `protobuf:"varint,24,opt,name=sharedv4,oneof"`
}
type VolumeSpecUpdate_QueueDepth struct {
	QueueDepth uint32 `protobuf:"varint,25,opt,name=queue_depth,json=queueDepth,oneof"`
}
type VolumeSpecUpdate_Nodiscard struct {
	Nodiscard bool `protobuf:"varint,27,opt,name=nodiscard,oneof"`
}
type VolumeSpecUpdate_ExportSpec struct {
	ExportSpec *ExportSpec `protobuf:"bytes,29,opt,name=export_spec,json=exportSpec,oneof"`
}
type VolumeSpecUpdate_Fastpath struct {
	Fastpath bool `protobuf:"varint,30,opt,name=fastpath,oneof"`
}
type VolumeSpecUpdate_Xattr struct {
	Xattr Xattr_Value `protobuf:"varint,31,opt,name=xattr,enum=openstorage.api.Xattr_Value,oneof"`
}
type VolumeSpecUpdate_ScanPolicy struct {
	ScanPolicy *ScanPolicy `protobuf:"bytes,32,opt,name=scan_policy,json=scanPolicy,oneof"`
}
type VolumeSpecUpdate_MountOptSpec struct {
	MountOptSpec *MountOptions `protobuf:"bytes,33,opt,name=mount_opt_spec,json=mountOptSpec,oneof"`
}
type VolumeSpecUpdate_Sharedv4MountOptSpec struct {
	Sharedv4MountOptSpec *MountOptions `protobuf:"bytes,34,opt,name=sharedv4_mount_opt_spec,json=sharedv4MountOptSpec,oneof"`
}
type VolumeSpecUpdate_ProxyWrite struct {
	ProxyWrite bool `protobuf:"varint,35,opt,name=proxy_write,json=proxyWrite,oneof"`
}
type VolumeSpecUpdate_ProxySpec struct {
	ProxySpec *ProxySpec `protobuf:"bytes,36,opt,name=proxy_spec,json=proxySpec,oneof"`
}
type VolumeSpecUpdate_Sharedv4ServiceSpec struct {
	Sharedv4ServiceSpec *Sharedv4ServiceSpec `protobuf:"bytes,37,opt,name=sharedv4_service_spec,json=sharedv4ServiceSpec,oneof"`
}
type VolumeSpecUpdate_Sharedv4Spec struct {
	Sharedv4Spec *Sharedv4Spec `protobuf:"bytes,38,opt,name=sharedv4_spec,json=sharedv4Spec,oneof"`
}
type VolumeSpecUpdate_AutoFstrim struct {
	AutoFstrim bool `protobuf:"varint,39,opt,name=auto_fstrim,json=autoFstrim,oneof"`
}
type VolumeSpecUpdate_IoThrottle struct {
	IoThrottle *IoThrottle `protobuf:"bytes,40,opt,name=io_throttle,json=ioThrottle,oneof"`
}
type VolumeSpecUpdate_NearSyncReplicationStrategy struct {
	NearSyncReplicationStrategy NearSyncReplicationStrategy `protobuf:"varint,41,opt,name=near_sync_replication_strategy,json=nearSyncReplicationStrategy,enum=openstorage.api.NearSyncReplicationStrategy,oneof"`
}
type VolumeSpecUpdate_PureNfsEndpoint struct {
	PureNfsEndpoint string `protobuf:"bytes,42,opt,name=pure_nfs_endpoint,json=pureNfsEndpoint,oneof"`
}

func (*VolumeSpecUpdate_Size) isVolumeSpecUpdate_SizeOpt()                               {}
func (*VolumeSpecUpdate_HaLevel) isVolumeSpecUpdate_HaLevelOpt()                         {}
func (*VolumeSpecUpdate_Cos) isVolumeSpecUpdate_CosOpt()                                 {}
func (*VolumeSpecUpdate_IoProfile) isVolumeSpecUpdate_IoProfileOpt()                     {}
func (*VolumeSpecUpdate_Dedupe) isVolumeSpecUpdate_DedupeOpt()                           {}
func (*VolumeSpecUpdate_SnapshotInterval) isVolumeSpecUpdate_SnapshotIntervalOpt()       {}
func (*VolumeSpecUpdate_Shared) isVolumeSpecUpdate_SharedOpt()                           {}
func (*VolumeSpecUpdate_Passphrase) isVolumeSpecUpdate_PassphraseOpt()                   {}
func (*VolumeSpecUpdate_SnapshotSchedule) isVolumeSpecUpdate_SnapshotScheduleOpt()       {}
func (*VolumeSpecUpdate_Scale) isVolumeSpecUpdate_ScaleOpt()                             {}
func (*VolumeSpecUpdate_Sticky) isVolumeSpecUpdate_StickyOpt()                           {}
func (*VolumeSpecUpdate_Group) isVolumeSpecUpdate_GroupOpt()                             {}
func (*VolumeSpecUpdate_Journal) isVolumeSpecUpdate_JournalOpt()                         {}
func (*VolumeSpecUpdate_Sharedv4) isVolumeSpecUpdate_Sharedv4Opt()                       {}
func (*VolumeSpecUpdate_QueueDepth) isVolumeSpecUpdate_QueueDepthOpt()                   {}
func (*VolumeSpecUpdate_Nodiscard) isVolumeSpecUpdate_NodiscardOpt()                     {}
func (*VolumeSpecUpdate_ExportSpec) isVolumeSpecUpdate_ExportSpecOpt()                   {}
func (*VolumeSpecUpdate_Fastpath) isVolumeSpecUpdate_FastpathOpt()                       {}
func (*VolumeSpecUpdate_Xattr) isVolumeSpecUpdate_XattrOpt()                             {}
func (*VolumeSpecUpdate_ScanPolicy) isVolumeSpecUpdate_ScanPolicyOpt()                   {}
func (*VolumeSpecUpdate_MountOptSpec) isVolumeSpecUpdate_MountOpt()                      {}
func (*VolumeSpecUpdate_Sharedv4MountOptSpec) isVolumeSpecUpdate_Sharedv4MountOpt()      {}
func (*VolumeSpecUpdate_ProxyWrite) isVolumeSpecUpdate_ProxyWriteOpt()                   {}
func (*VolumeSpecUpdate_ProxySpec) isVolumeSpecUpdate_ProxySpecOpt()                     {}
func (*VolumeSpecUpdate_Sharedv4ServiceSpec) isVolumeSpecUpdate_Sharedv4ServiceSpecOpt() {}
func (*VolumeSpecUpdate_Sharedv4Spec) isVolumeSpecUpdate_Sharedv4SpecOpt()               {}
func (*VolumeSpecUpdate_AutoFstrim) isVolumeSpecUpdate_AutoFstrimOpt()                   {}
func (*VolumeSpecUpdate_IoThrottle) isVolumeSpecUpdate_IoThrottleOpt()                   {}
func (*VolumeSpecUpdate_NearSyncReplicationStrategy) isVolumeSpecUpdate_NearSyncReplicationStrategyOpt() {
}
func (*VolumeSpecUpdate_PureNfsEndpoint) isVolumeSpecUpdate_PureNfsEndpointOpt() {}

func (m *VolumeSpecUpdate) GetSizeOpt() isVolumeSpecUpdate_SizeOpt {
	if m != nil {
		return m.SizeOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetHaLevelOpt() isVolumeSpecUpdate_HaLevelOpt {
	if m != nil {
		return m.HaLevelOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetCosOpt() isVolumeSpecUpdate_CosOpt {
	if m != nil {
		return m.CosOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetIoProfileOpt() isVolumeSpecUpdate_IoProfileOpt {
	if m != nil {
		return m.IoProfileOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetDedupeOpt() isVolumeSpecUpdate_DedupeOpt {
	if m != nil {
		return m.DedupeOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetSnapshotIntervalOpt() isVolumeSpecUpdate_SnapshotIntervalOpt {
	if m != nil {
		return m.SnapshotIntervalOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetSharedOpt() isVolumeSpecUpdate_SharedOpt {
	if m != nil {
		return m.SharedOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetPassphraseOpt() isVolumeSpecUpdate_PassphraseOpt {
	if m != nil {
		return m.PassphraseOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetSnapshotScheduleOpt() isVolumeSpecUpdate_SnapshotScheduleOpt {
	if m != nil {
		return m.SnapshotScheduleOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetScaleOpt() isVolumeSpecUpdate_ScaleOpt {
	if m != nil {
		return m.ScaleOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetStickyOpt() isVolumeSpecUpdate_StickyOpt {
	if m != nil {
		return m.StickyOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetGroupOpt() isVolumeSpecUpdate_GroupOpt {
	if m != nil {
		return m.GroupOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetJournalOpt() isVolumeSpecUpdate_JournalOpt {
	if m != nil {
		return m.JournalOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetSharedv4Opt() isVolumeSpecUpdate_Sharedv4Opt {
	if m != nil {
		return m.Sharedv4Opt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetQueueDepthOpt() isVolumeSpecUpdate_QueueDepthOpt {
	if m != nil {
		return m.QueueDepthOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetNodiscardOpt() isVolumeSpecUpdate_NodiscardOpt {
	if m != nil {
		return m.NodiscardOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetExportSpecOpt() isVolumeSpecUpdate_ExportSpecOpt {
	if m != nil {
		return m.ExportSpecOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetFastpathOpt() isVolumeSpecUpdate_FastpathOpt {
	if m != nil {
		return m.FastpathOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetXattrOpt() isVolumeSpecUpdate_XattrOpt {
	if m != nil {
		return m.XattrOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetScanPolicyOpt() isVolumeSpecUpdate_ScanPolicyOpt {
	if m != nil {
		return m.ScanPolicyOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetMountOpt() isVolumeSpecUpdate_MountOpt {
	if m != nil {
		return m.MountOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetSharedv4MountOpt() isVolumeSpecUpdate_Sharedv4MountOpt {
	if m != nil {
		return m.Sharedv4MountOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetProxyWriteOpt() isVolumeSpecUpdate_ProxyWriteOpt {
	if m != nil {
		return m.ProxyWriteOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetProxySpecOpt() isVolumeSpecUpdate_ProxySpecOpt {
	if m != nil {
		return m.ProxySpecOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetSharedv4ServiceSpecOpt() isVolumeSpecUpdate_Sharedv4ServiceSpecOpt {
	if m != nil {
		return m.Sharedv4ServiceSpecOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetSharedv4SpecOpt() isVolumeSpecUpdate_Sharedv4SpecOpt {
	if m != nil {
		return m.Sharedv4SpecOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetAutoFstrimOpt() isVolumeSpecUpdate_AutoFstrimOpt {
	if m != nil {
		return m.AutoFstrimOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetIoThrottleOpt() isVolumeSpecUpdate_IoThrottleOpt {
	if m != nil {
		return m.IoThrottleOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetNearSyncReplicationStrategyOpt() isVolumeSpecUpdate_NearSyncReplicationStrategyOpt {
	if m != nil {
		return m.NearSyncReplicationStrategyOpt
	}
	return nil
}
func (m *VolumeSpecUpdate) GetPureNfsEndpointOpt() isVolumeSpecUpdate_PureNfsEndpointOpt {
	if m != nil {
		return m.PureNfsEndpointOpt
	}
	return nil
}

func (m *VolumeSpecUpdate) GetSize() uint64 {
	if x, ok := m.GetSizeOpt().(*VolumeSpecUpdate_Size); ok {
		return x.Size
	}
	return 0
}

func (m *VolumeSpecUpdate) GetHaLevel() int64 {
	if x, ok := m.GetHaLevelOpt().(*VolumeSpecUpdate_HaLevel); ok {
		return x.HaLevel
	}
	return 0
}

func (m *VolumeSpecUpdate) GetCos() CosType {
	if x, ok := m.GetCosOpt().(*VolumeSpecUpdate_Cos); ok {
		return x.Cos
	}
	return CosType_NONE
}

func (m *VolumeSpecUpdate) GetIoProfile() IoProfile {
	if x, ok := m.GetIoProfileOpt().(*VolumeSpecUpdate_IoProfile); ok {
		return x.IoProfile
	}
	return IoProfile_IO_PROFILE_SEQUENTIAL
}

func (m *VolumeSpecUpdate) GetDedupe() bool {
	if x, ok := m.GetDedupeOpt().(*VolumeSpecUpdate_Dedupe); ok {
		return x.Dedupe
	}
	return false
}

func (m *VolumeSpecUpdate) GetSnapshotInterval() uint32 {
	if x, ok := m.GetSnapshotIntervalOpt().(*VolumeSpecUpdate_SnapshotInterval); ok {
		return x.SnapshotInterval
	}
	return 0
}

func (m *VolumeSpecUpdate) GetShared() bool {
	if x, ok := m.GetSharedOpt().(*VolumeSpecUpdate_Shared); ok {
		return x.Shared
	}
	return false
}

func (m *VolumeSpecUpdate) GetReplicaSet() *ReplicaSet {
	if m != nil {
		return m.ReplicaSet
	}
	return nil
}

func (m *VolumeSpecUpdate) GetPassphrase() string {
	if x, ok := m.GetPassphraseOpt().(*VolumeSpecUpdate_Passphrase); ok {
		return x.Passphrase
	}
	return ""
}

func (m *VolumeSpecUpdate) GetSnapshotSchedule() string {
	if x, ok := m.GetSnapshotScheduleOpt().(*VolumeSpecUpdate_SnapshotSchedule); ok {
		return x.SnapshotSchedule
	}
	return ""
}

func (m *VolumeSpecUpdate) GetScale() uint32 {
	if x, ok := m.GetScaleOpt().(*VolumeSpecUpdate_Scale); ok {
		return x.Scale
	}
	return 0
}

func (m *VolumeSpecUpdate) GetSticky() bool {
	if x, ok := m.GetStickyOpt().(*VolumeSpecUpdate_Sticky); ok {
		return x.Sticky
	}
	return false
}

func (m *VolumeSpecUpdate) GetGroup() *Group {
	if x, ok := m.GetGroupOpt().(*VolumeSpecUpdate_Group); ok {
		return x.Group
	}
	return nil
}

func (m *VolumeSpecUpdate) GetJournal() bool {
	if x, ok := m.GetJournalOpt().(*VolumeSpecUpdate_Journal); ok {
		return x.Journal
	}
	return false
}

func (m *VolumeSpecUpdate) GetSharedv4() bool {
	if x, ok := m.GetSharedv4Opt().(*VolumeSpecUpdate_Sharedv4); ok {
		return x.Sharedv4
	}
	return false
}

func (m *VolumeSpecUpdate) GetQueueDepth() uint32 {
	if x, ok := m.GetQueueDepthOpt().(*VolumeSpecUpdate_QueueDepth); ok {
		return x.QueueDepth
	}
	return 0
}

func (m *VolumeSpecUpdate) GetOwnership() *Ownership {
	if m != nil {
		return m.Ownership
	}
	return nil
}

func (m *VolumeSpecUpdate) GetNodiscard() bool {
	if x, ok := m.GetNodiscardOpt().(*VolumeSpecUpdate_Nodiscard); ok {
		return x.Nodiscard
	}
	return false
}

func (m *VolumeSpecUpdate) GetIoStrategy() *IoStrategy {
	if m != nil {
		return m.IoStrategy
	}
	return nil
}

func (m *VolumeSpecUpdate) GetExportSpec() *ExportSpec {
	if x, ok := m.GetExportSpecOpt().(*VolumeSpecUpdate_ExportSpec); ok {
		return x.ExportSpec
	}
	return nil
}

func (m *VolumeSpecUpdate) GetFastpath() bool {
	if x, ok := m.GetFastpathOpt().(*VolumeSpecUpdate_Fastpath); ok {
		return x.Fastpath
	}
	return false
}

func (m *VolumeSpecUpdate) GetXattr() Xattr_Value {
	if x, ok := m.GetXattrOpt().(*VolumeSpecUpdate_Xattr); ok {
		return x.Xattr
	}
	return Xattr_UNSPECIFIED
}

func (m *VolumeSpecUpdate) GetScanPolicy() *ScanPolicy {
	if x, ok := m.GetScanPolicyOpt().(*VolumeSpecUpdate_ScanPolicy); ok {
		return x.ScanPolicy
	}
	return nil
}

func (m *VolumeSpecUpdate) GetMountOptSpec() *MountOptions {
	if x, ok := m.GetMountOpt().(*VolumeSpecUpdate_MountOptSpec); ok {
		return x.MountOptSpec
	}
	return nil
}

func (m *VolumeSpecUpdate) GetSharedv4MountOptSpec() *MountOptions {
	if x, ok := m.GetSharedv4MountOpt().(*VolumeSpecUpdate_Sharedv4MountOptSpec); ok {
		return x.Sharedv4MountOptSpec
	}
	return nil
}

func (m *VolumeSpecUpdate) GetProxyWrite() bool {
	if x, ok := m.GetProxyWriteOpt().(*VolumeSpecUpdate_ProxyWrite); ok {
		return x.ProxyWrite
	}
	return false
}

func (m *VolumeSpecUpdate) GetProxySpec() *ProxySpec {
	if x, ok := m.GetProxySpecOpt().(*VolumeSpecUpdate_ProxySpec); ok {
		return x.ProxySpec
	}
	return nil
}

func (m *VolumeSpecUpdate) GetSharedv4ServiceSpec() *Sharedv4ServiceSpec {
	if x, ok := m.GetSharedv4ServiceSpecOpt().(*VolumeSpecUpdate_Sharedv4ServiceSpec); ok {
		return x.Sharedv4ServiceSpec
	}
	return nil
}

func (m *VolumeSpecUpdate) GetSharedv4Spec() *Sharedv4Spec {
	if x, ok := m.GetSharedv4SpecOpt().(*VolumeSpecUpdate_Sharedv4Spec); ok {
		return x.Sharedv4Spec
	}
	return nil
}

func (m *VolumeSpecUpdate) GetAutoFstrim() bool {
	if x, ok := m.GetAutoFstrimOpt().(*VolumeSpecUpdate_AutoFstrim); ok {
		return x.AutoFstrim
	}
	return false
}

func (m *VolumeSpecUpdate) GetIoThrottle() *IoThrottle {
	if x, ok := m.GetIoThrottleOpt().(*VolumeSpecUpdate_IoThrottle); ok {
		return x.IoThrottle
	}
	return nil
}

func (m *VolumeSpecUpdate) GetNearSyncReplicationStrategy() NearSyncReplicationStrategy {
	if x, ok := m.GetNearSyncReplicationStrategyOpt().(*VolumeSpecUpdate_NearSyncReplicationStrategy); ok {
		return x.NearSyncReplicationStrategy
	}
	return NearSyncReplicationStrategy_NEAR_SYNC_STRATEGY_NONE
}

func (m *VolumeSpecUpdate) GetPureNfsEndpoint() string {
	if x, ok := m.GetPureNfsEndpointOpt().(*VolumeSpecUpdate_PureNfsEndpoint); ok {
		return x.PureNfsEndpoint
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*VolumeSpecUpdate) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _VolumeSpecUpdate_OneofMarshaler, _VolumeSpecUpdate_OneofUnmarshaler, _VolumeSpecUpdate_OneofSizer, []interface{}{
		(*VolumeSpecUpdate_Size)(nil),
		(*VolumeSpecUpdate_HaLevel)(nil),
		(*VolumeSpecUpdate_Cos)(nil),
		(*VolumeSpecUpdate_IoProfile)(nil),
		(*VolumeSpecUpdate_Dedupe)(nil),
		(*VolumeSpecUpdate_SnapshotInterval)(nil),
		(*VolumeSpecUpdate_Shared)(nil),
		(*VolumeSpecUpdate_Passphrase)(nil),
		(*VolumeSpecUpdate_SnapshotSchedule)(nil),
		(*VolumeSpecUpdate_Scale)(nil),
		(*VolumeSpecUpdate_Sticky)(nil),
		(*VolumeSpecUpdate_Group)(nil),
		(*VolumeSpecUpdate_Journal)(nil),
		(*VolumeSpecUpdate_Sharedv4)(nil),
		(*VolumeSpecUpdate_QueueDepth)(nil),
		(*VolumeSpecUpdate_Nodiscard)(nil),
		(*VolumeSpecUpdate_ExportSpec)(nil),
		(*VolumeSpecUpdate_Fastpath)(nil),
		(*VolumeSpecUpdate_Xattr)(nil),
		(*VolumeSpecUpdate_ScanPolicy)(nil),
		(*VolumeSpecUpdate_MountOptSpec)(nil),
		(*VolumeSpecUpdate_Sharedv4MountOptSpec)(nil),
		(*VolumeSpecUpdate_ProxyWrite)(nil),
		(*VolumeSpecUpdate_ProxySpec)(nil),
		(*VolumeSpecUpdate_Sharedv4ServiceSpec)(nil),
		(*VolumeSpecUpdate_Sharedv4Spec)(nil),
		(*VolumeSpecUpdate_AutoFstrim)(nil),
		(*VolumeSpecUpdate_IoThrottle)(nil),
		(*VolumeSpecUpdate_NearSyncReplicationStrategy)(nil),
		(*VolumeSpecUpdate_PureNfsEndpoint)(nil),
	}
}

func _VolumeSpecUpdate_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*VolumeSpecUpdate)
	// size_opt
	switch x := m.SizeOpt.(type) {
	case *VolumeSpecUpdate_Size:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Size))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.SizeOpt has unexpected type %T", x)
	}
	// ha_level_opt
	switch x := m.HaLevelOpt.(type) {
	case *VolumeSpecUpdate_HaLevel:
		b.EncodeVarint(5<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.HaLevel))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.HaLevelOpt has unexpected type %T", x)
	}
	// cos_opt
	switch x := m.CosOpt.(type) {
	case *VolumeSpecUpdate_Cos:
		b.EncodeVarint(6<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Cos))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.CosOpt has unexpected type %T", x)
	}
	// io_profile_opt
	switch x := m.IoProfileOpt.(type) {
	case *VolumeSpecUpdate_IoProfile:
		b.EncodeVarint(7<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.IoProfile))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.IoProfileOpt has unexpected type %T", x)
	}
	// dedupe_opt
	switch x := m.DedupeOpt.(type) {
	case *VolumeSpecUpdate_Dedupe:
		t := uint64(0)
		if x.Dedupe {
			t = 1
		}
		b.EncodeVarint(8<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.DedupeOpt has unexpected type %T", x)
	}
	// snapshot_interval_opt
	switch x := m.SnapshotIntervalOpt.(type) {
	case *VolumeSpecUpdate_SnapshotInterval:
		b.EncodeVarint(9<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.SnapshotInterval))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.SnapshotIntervalOpt has unexpected type %T", x)
	}
	// shared_opt
	switch x := m.SharedOpt.(type) {
	case *VolumeSpecUpdate_Shared:
		t := uint64(0)
		if x.Shared {
			t = 1
		}
		b.EncodeVarint(11<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.SharedOpt has unexpected type %T", x)
	}
	// passphrase_opt
	switch x := m.PassphraseOpt.(type) {
	case *VolumeSpecUpdate_Passphrase:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Passphrase)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.PassphraseOpt has unexpected type %T", x)
	}
	// snapshot_schedule_opt
	switch x := m.SnapshotScheduleOpt.(type) {
	case *VolumeSpecUpdate_SnapshotSchedule:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.SnapshotSchedule)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.SnapshotScheduleOpt has unexpected type %T", x)
	}
	// scale_opt
	switch x := m.ScaleOpt.(type) {
	case *VolumeSpecUpdate_Scale:
		b.EncodeVarint(17<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Scale))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.ScaleOpt has unexpected type %T", x)
	}
	// sticky_opt
	switch x := m.StickyOpt.(type) {
	case *VolumeSpecUpdate_Sticky:
		t := uint64(0)
		if x.Sticky {
			t = 1
		}
		b.EncodeVarint(18<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.StickyOpt has unexpected type %T", x)
	}
	// group_opt
	switch x := m.GroupOpt.(type) {
	case *VolumeSpecUpdate_Group:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Group); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.GroupOpt has unexpected type %T", x)
	}
	// journal_opt
	switch x := m.JournalOpt.(type) {
	case *VolumeSpecUpdate_Journal:
		t := uint64(0)
		if x.Journal {
			t = 1
		}
		b.EncodeVarint(23<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.JournalOpt has unexpected type %T", x)
	}
	// sharedv4_opt
	switch x := m.Sharedv4Opt.(type) {
	case *VolumeSpecUpdate_Sharedv4:
		t := uint64(0)
		if x.Sharedv4 {
			t = 1
		}
		b.EncodeVarint(24<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.Sharedv4Opt has unexpected type %T", x)
	}
	// queue_depth_opt
	switch x := m.QueueDepthOpt.(type) {
	case *VolumeSpecUpdate_QueueDepth:
		b.EncodeVarint(25<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.QueueDepth))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.QueueDepthOpt has unexpected type %T", x)
	}
	// nodiscard_opt
	switch x := m.NodiscardOpt.(type) {
	case *VolumeSpecUpdate_Nodiscard:
		t := uint64(0)
		if x.Nodiscard {
			t = 1
		}
		b.EncodeVarint(27<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.NodiscardOpt has unexpected type %T", x)
	}
	// export_spec_opt
	switch x := m.ExportSpecOpt.(type) {
	case *VolumeSpecUpdate_ExportSpec:
		b.EncodeVarint(29<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ExportSpec); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.ExportSpecOpt has unexpected type %T", x)
	}
	// fastpath_opt
	switch x := m.FastpathOpt.(type) {
	case *VolumeSpecUpdate_Fastpath:
		t := uint64(0)
		if x.Fastpath {
			t = 1
		}
		b.EncodeVarint(30<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.FastpathOpt has unexpected type %T", x)
	}
	// xattr_opt
	switch x := m.XattrOpt.(type) {
	case *VolumeSpecUpdate_Xattr:
		b.EncodeVarint(31<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Xattr))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.XattrOpt has unexpected type %T", x)
	}
	// scan_policy_opt
	switch x := m.ScanPolicyOpt.(type) {
	case *VolumeSpecUpdate_ScanPolicy:
		b.EncodeVarint(32<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ScanPolicy); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.ScanPolicyOpt has unexpected type %T", x)
	}
	// mount_opt
	switch x := m.MountOpt.(type) {
	case *VolumeSpecUpdate_MountOptSpec:
		b.EncodeVarint(33<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MountOptSpec); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.MountOpt has unexpected type %T", x)
	}
	// sharedv4_mount_opt
	switch x := m.Sharedv4MountOpt.(type) {
	case *VolumeSpecUpdate_Sharedv4MountOptSpec:
		b.EncodeVarint(34<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Sharedv4MountOptSpec); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.Sharedv4MountOpt has unexpected type %T", x)
	}
	// proxy_write_opt
	switch x := m.ProxyWriteOpt.(type) {
	case *VolumeSpecUpdate_ProxyWrite:
		t := uint64(0)
		if x.ProxyWrite {
			t = 1
		}
		b.EncodeVarint(35<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.ProxyWriteOpt has unexpected type %T", x)
	}
	// proxy_spec_opt
	switch x := m.ProxySpecOpt.(type) {
	case *VolumeSpecUpdate_ProxySpec:
		b.EncodeVarint(36<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ProxySpec); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.ProxySpecOpt has unexpected type %T", x)
	}
	// sharedv4_service_spec_opt
	switch x := m.Sharedv4ServiceSpecOpt.(type) {
	case *VolumeSpecUpdate_Sharedv4ServiceSpec:
		b.EncodeVarint(37<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Sharedv4ServiceSpec); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.Sharedv4ServiceSpecOpt has unexpected type %T", x)
	}
	// sharedv4_spec_opt
	switch x := m.Sharedv4SpecOpt.(type) {
	case *VolumeSpecUpdate_Sharedv4Spec:
		b.EncodeVarint(38<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Sharedv4Spec); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.Sharedv4SpecOpt has unexpected type %T", x)
	}
	// auto_fstrim_opt
	switch x := m.AutoFstrimOpt.(type) {
	case *VolumeSpecUpdate_AutoFstrim:
		t := uint64(0)
		if x.AutoFstrim {
			t = 1
		}
		b.EncodeVarint(39<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.AutoFstrimOpt has unexpected type %T", x)
	}
	// io_throttle_opt
	switch x := m.IoThrottleOpt.(type) {
	case *VolumeSpecUpdate_IoThrottle:
		b.EncodeVarint(40<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IoThrottle); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.IoThrottleOpt has unexpected type %T", x)
	}
	// near_sync_replication_strategy_opt
	switch x := m.NearSyncReplicationStrategyOpt.(type) {
	case *VolumeSpecUpdate_NearSyncReplicationStrategy:
		b.EncodeVarint(41<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.NearSyncReplicationStrategy))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.NearSyncReplicationStrategyOpt has unexpected type %T", x)
	}
	// pure_nfs_endpoint_opt
	switch x := m.PureNfsEndpointOpt.(type) {
	case *VolumeSpecUpdate_PureNfsEndpoint:
		b.EncodeVarint(42<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.PureNfsEndpoint)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecUpdate.PureNfsEndpointOpt has unexpected type %T", x)
	}
	return nil
}

func _VolumeSpecUpdate_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*VolumeSpecUpdate)
	switch tag {
	case 2: // size_opt.size
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.SizeOpt = &VolumeSpecUpdate_Size{x}
		return true, err
	case 5: // ha_level_opt.ha_level
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.HaLevelOpt = &VolumeSpecUpdate_HaLevel{int64(x)}
		return true, err
	case 6: // cos_opt.cos
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.CosOpt = &VolumeSpecUpdate_Cos{CosType(x)}
		return true, err
	case 7: // io_profile_opt.io_profile
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.IoProfileOpt = &VolumeSpecUpdate_IoProfile{IoProfile(x)}
		return true, err
	case 8: // dedupe_opt.dedupe
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.DedupeOpt = &VolumeSpecUpdate_Dedupe{x != 0}
		return true, err
	case 9: // snapshot_interval_opt.snapshot_interval
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.SnapshotIntervalOpt = &VolumeSpecUpdate_SnapshotInterval{uint32(x)}
		return true, err
	case 11: // shared_opt.shared
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.SharedOpt = &VolumeSpecUpdate_Shared{x != 0}
		return true, err
	case 15: // passphrase_opt.passphrase
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.PassphraseOpt = &VolumeSpecUpdate_Passphrase{x}
		return true, err
	case 16: // snapshot_schedule_opt.snapshot_schedule
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.SnapshotScheduleOpt = &VolumeSpecUpdate_SnapshotSchedule{x}
		return true, err
	case 17: // scale_opt.scale
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ScaleOpt = &VolumeSpecUpdate_Scale{uint32(x)}
		return true, err
	case 18: // sticky_opt.sticky
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.StickyOpt = &VolumeSpecUpdate_Sticky{x != 0}
		return true, err
	case 19: // group_opt.group
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Group)
		err := b.DecodeMessage(msg)
		m.GroupOpt = &VolumeSpecUpdate_Group{msg}
		return true, err
	case 23: // journal_opt.journal
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.JournalOpt = &VolumeSpecUpdate_Journal{x != 0}
		return true, err
	case 24: // sharedv4_opt.sharedv4
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Sharedv4Opt = &VolumeSpecUpdate_Sharedv4{x != 0}
		return true, err
	case 25: // queue_depth_opt.queue_depth
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.QueueDepthOpt = &VolumeSpecUpdate_QueueDepth{uint32(x)}
		return true, err
	case 27: // nodiscard_opt.nodiscard
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.NodiscardOpt = &VolumeSpecUpdate_Nodiscard{x != 0}
		return true, err
	case 29: // export_spec_opt.export_spec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ExportSpec)
		err := b.DecodeMessage(msg)
		m.ExportSpecOpt = &VolumeSpecUpdate_ExportSpec{msg}
		return true, err
	case 30: // fastpath_opt.fastpath
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.FastpathOpt = &VolumeSpecUpdate_Fastpath{x != 0}
		return true, err
	case 31: // xattr_opt.xattr
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.XattrOpt = &VolumeSpecUpdate_Xattr{Xattr_Value(x)}
		return true, err
	case 32: // scan_policy_opt.scan_policy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ScanPolicy)
		err := b.DecodeMessage(msg)
		m.ScanPolicyOpt = &VolumeSpecUpdate_ScanPolicy{msg}
		return true, err
	case 33: // mount_opt.mount_opt_spec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MountOptions)
		err := b.DecodeMessage(msg)
		m.MountOpt = &VolumeSpecUpdate_MountOptSpec{msg}
		return true, err
	case 34: // sharedv4_mount_opt.sharedv4_mount_opt_spec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MountOptions)
		err := b.DecodeMessage(msg)
		m.Sharedv4MountOpt = &VolumeSpecUpdate_Sharedv4MountOptSpec{msg}
		return true, err
	case 35: // proxy_write_opt.proxy_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ProxyWriteOpt = &VolumeSpecUpdate_ProxyWrite{x != 0}
		return true, err
	case 36: // proxy_spec_opt.proxy_spec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ProxySpec)
		err := b.DecodeMessage(msg)
		m.ProxySpecOpt = &VolumeSpecUpdate_ProxySpec{msg}
		return true, err
	case 37: // sharedv4_service_spec_opt.sharedv4_service_spec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Sharedv4ServiceSpec)
		err := b.DecodeMessage(msg)
		m.Sharedv4ServiceSpecOpt = &VolumeSpecUpdate_Sharedv4ServiceSpec{msg}
		return true, err
	case 38: // sharedv4_spec_opt.sharedv4_spec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Sharedv4Spec)
		err := b.DecodeMessage(msg)
		m.Sharedv4SpecOpt = &VolumeSpecUpdate_Sharedv4Spec{msg}
		return true, err
	case 39: // auto_fstrim_opt.auto_fstrim
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.AutoFstrimOpt = &VolumeSpecUpdate_AutoFstrim{x != 0}
		return true, err
	case 40: // io_throttle_opt.io_throttle
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(IoThrottle)
		err := b.DecodeMessage(msg)
		m.IoThrottleOpt = &VolumeSpecUpdate_IoThrottle{msg}
		return true, err
	case 41: // near_sync_replication_strategy_opt.near_sync_replication_strategy
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.NearSyncReplicationStrategyOpt = &VolumeSpecUpdate_NearSyncReplicationStrategy{NearSyncReplicationStrategy(x)}
		return true, err
	case 42: // pure_nfs_endpoint_opt.pure_nfs_endpoint
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.PureNfsEndpointOpt = &VolumeSpecUpdate_PureNfsEndpoint{x}
		return true, err
	default:
		return false, nil
	}
}

func _VolumeSpecUpdate_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*VolumeSpecUpdate)
	// size_opt
	switch x := m.SizeOpt.(type) {
	case *VolumeSpecUpdate_Size:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Size))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// ha_level_opt
	switch x := m.HaLevelOpt.(type) {
	case *VolumeSpecUpdate_HaLevel:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.HaLevel))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// cos_opt
	switch x := m.CosOpt.(type) {
	case *VolumeSpecUpdate_Cos:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Cos))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// io_profile_opt
	switch x := m.IoProfileOpt.(type) {
	case *VolumeSpecUpdate_IoProfile:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.IoProfile))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// dedupe_opt
	switch x := m.DedupeOpt.(type) {
	case *VolumeSpecUpdate_Dedupe:
		n += 1 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// snapshot_interval_opt
	switch x := m.SnapshotIntervalOpt.(type) {
	case *VolumeSpecUpdate_SnapshotInterval:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.SnapshotInterval))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// shared_opt
	switch x := m.SharedOpt.(type) {
	case *VolumeSpecUpdate_Shared:
		n += 1 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// passphrase_opt
	switch x := m.PassphraseOpt.(type) {
	case *VolumeSpecUpdate_Passphrase:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Passphrase)))
		n += len(x.Passphrase)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// snapshot_schedule_opt
	switch x := m.SnapshotScheduleOpt.(type) {
	case *VolumeSpecUpdate_SnapshotSchedule:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.SnapshotSchedule)))
		n += len(x.SnapshotSchedule)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// scale_opt
	switch x := m.ScaleOpt.(type) {
	case *VolumeSpecUpdate_Scale:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.Scale))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// sticky_opt
	switch x := m.StickyOpt.(type) {
	case *VolumeSpecUpdate_Sticky:
		n += 2 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// group_opt
	switch x := m.GroupOpt.(type) {
	case *VolumeSpecUpdate_Group:
		s := proto.Size(x.Group)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// journal_opt
	switch x := m.JournalOpt.(type) {
	case *VolumeSpecUpdate_Journal:
		n += 2 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// sharedv4_opt
	switch x := m.Sharedv4Opt.(type) {
	case *VolumeSpecUpdate_Sharedv4:
		n += 2 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// queue_depth_opt
	switch x := m.QueueDepthOpt.(type) {
	case *VolumeSpecUpdate_QueueDepth:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.QueueDepth))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// nodiscard_opt
	switch x := m.NodiscardOpt.(type) {
	case *VolumeSpecUpdate_Nodiscard:
		n += 2 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// export_spec_opt
	switch x := m.ExportSpecOpt.(type) {
	case *VolumeSpecUpdate_ExportSpec:
		s := proto.Size(x.ExportSpec)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// fastpath_opt
	switch x := m.FastpathOpt.(type) {
	case *VolumeSpecUpdate_Fastpath:
		n += 2 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// xattr_opt
	switch x := m.XattrOpt.(type) {
	case *VolumeSpecUpdate_Xattr:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.Xattr))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// scan_policy_opt
	switch x := m.ScanPolicyOpt.(type) {
	case *VolumeSpecUpdate_ScanPolicy:
		s := proto.Size(x.ScanPolicy)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// mount_opt
	switch x := m.MountOpt.(type) {
	case *VolumeSpecUpdate_MountOptSpec:
		s := proto.Size(x.MountOptSpec)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// sharedv4_mount_opt
	switch x := m.Sharedv4MountOpt.(type) {
	case *VolumeSpecUpdate_Sharedv4MountOptSpec:
		s := proto.Size(x.Sharedv4MountOptSpec)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// proxy_write_opt
	switch x := m.ProxyWriteOpt.(type) {
	case *VolumeSpecUpdate_ProxyWrite:
		n += 2 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// proxy_spec_opt
	switch x := m.ProxySpecOpt.(type) {
	case *VolumeSpecUpdate_ProxySpec:
		s := proto.Size(x.ProxySpec)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// sharedv4_service_spec_opt
	switch x := m.Sharedv4ServiceSpecOpt.(type) {
	case *VolumeSpecUpdate_Sharedv4ServiceSpec:
		s := proto.Size(x.Sharedv4ServiceSpec)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// sharedv4_spec_opt
	switch x := m.Sharedv4SpecOpt.(type) {
	case *VolumeSpecUpdate_Sharedv4Spec:
		s := proto.Size(x.Sharedv4Spec)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// auto_fstrim_opt
	switch x := m.AutoFstrimOpt.(type) {
	case *VolumeSpecUpdate_AutoFstrim:
		n += 2 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// io_throttle_opt
	switch x := m.IoThrottleOpt.(type) {
	case *VolumeSpecUpdate_IoThrottle:
		s := proto.Size(x.IoThrottle)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// near_sync_replication_strategy_opt
	switch x := m.NearSyncReplicationStrategyOpt.(type) {
	case *VolumeSpecUpdate_NearSyncReplicationStrategy:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.NearSyncReplicationStrategy))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// pure_nfs_endpoint_opt
	switch x := m.PureNfsEndpointOpt.(type) {
	case *VolumeSpecUpdate_PureNfsEndpoint:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.PureNfsEndpoint)))
		n += len(x.PureNfsEndpoint)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// VolumeSpecPolicy provides a method to set volume storage policy
type VolumeSpecPolicy struct {
	// Size specifies the thin provisioned volume size in bytes.
	// Use `size_operator` to show if this value is the min, max, or set.
	//
	// Types that are valid to be assigned to SizeOpt:
	//	*VolumeSpecPolicy_Size
	SizeOpt isVolumeSpecPolicy_SizeOpt `protobuf_oneof:"size_opt"`
	// HaLevel specifies the number of copies of data.
	// Use `ha_level_operator` to show if this value is the min, max, or set.
	//
	// Types that are valid to be assigned to HaLevelOpt:
	//	*VolumeSpecPolicy_HaLevel
	HaLevelOpt isVolumeSpecPolicy_HaLevelOpt `protobuf_oneof:"ha_level_opt"`
	// Cos specifies the relative class of service.
	//
	// Types that are valid to be assigned to CosOpt:
	//	*VolumeSpecPolicy_Cos
	CosOpt isVolumeSpecPolicy_CosOpt `protobuf_oneof:"cos_opt"`
	// IoProfile provides a hint about application using this volume.
	//
	// Types that are valid to be assigned to IoProfileOpt:
	//	*VolumeSpecPolicy_IoProfile
	IoProfileOpt isVolumeSpecPolicy_IoProfileOpt `protobuf_oneof:"io_profile_opt"`
	// Dedupe specifies if the volume data is to be de-duplicated.
	//
	// Types that are valid to be assigned to DedupeOpt:
	//	*VolumeSpecPolicy_Dedupe
	DedupeOpt isVolumeSpecPolicy_DedupeOpt `protobuf_oneof:"dedupe_opt"`
	// SnapshotInterval in minutes, set to 0 to disable snapshots
	//
	// Types that are valid to be assigned to SnapshotIntervalOpt:
	//	*VolumeSpecPolicy_SnapshotInterval
	SnapshotIntervalOpt isVolumeSpecPolicy_SnapshotIntervalOpt `protobuf_oneof:"snapshot_interval_opt"`
	// VolumeLabels configuration labels
	VolumeLabels map[string]string `protobuf:"bytes,7,rep,name=volume_labels,json=volumeLabels" json:"volume_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Shared is true if this volume can be remotely accessed.
	//
	// Types that are valid to be assigned to SharedOpt:
	//	*VolumeSpecPolicy_Shared
	SharedOpt isVolumeSpecPolicy_SharedOpt `protobuf_oneof:"shared_opt"`
	// ReplicaSet is the desired set of nodes for the volume data.
	ReplicaSet *ReplicaSet `protobuf:"bytes,9,opt,name=replica_set,json=replicaSet" json:"replica_set,omitempty"`
	// Passphrase for an encrypted volume
	//
	// Types that are valid to be assigned to PassphraseOpt:
	//	*VolumeSpecPolicy_Passphrase
	PassphraseOpt isVolumeSpecPolicy_PassphraseOpt `protobuf_oneof:"passphrase_opt"`
	// SnapshotSchedule a well known string that specifies when snapshots should be taken.
	//
	// Types that are valid to be assigned to SnapshotScheduleOpt:
	//	*VolumeSpecPolicy_SnapshotSchedule
	SnapshotScheduleOpt isVolumeSpecPolicy_SnapshotScheduleOpt `protobuf_oneof:"snapshot_schedule_opt"`
	// Scale allows autocreation of volumes.
	//
	// Types that are valid to be assigned to ScaleOpt:
	//	*VolumeSpecPolicy_Scale
	ScaleOpt isVolumeSpecPolicy_ScaleOpt `protobuf_oneof:"scale_opt"`
	// Sticky volumes cannot be deleted until the flag is removed.
	//
	// Types that are valid to be assigned to StickyOpt:
	//	*VolumeSpecPolicy_Sticky
	StickyOpt isVolumeSpecPolicy_StickyOpt `protobuf_oneof:"sticky_opt"`
	// Group identifies a consistency group
	//
	// Types that are valid to be assigned to GroupOpt:
	//	*VolumeSpecPolicy_Group
	GroupOpt isVolumeSpecPolicy_GroupOpt `protobuf_oneof:"group_opt"`
	// Journal is true if data for the volume goes into the journal.
	//
	// Types that are valid to be assigned to JournalOpt:
	//	*VolumeSpecPolicy_Journal
	JournalOpt isVolumeSpecPolicy_JournalOpt `protobuf_oneof:"journal_opt"`
	// Sharedv4 is true if this volume can be accessed via sharedv4.
	//
	// Types that are valid to be assigned to Sharedv4Opt:
	//	*VolumeSpecPolicy_Sharedv4
	Sharedv4Opt isVolumeSpecPolicy_Sharedv4Opt `protobuf_oneof:"sharedv4_opt"`
	// QueueDepth defines the desired block device queue depth
	//
	// Types that are valid to be assigned to QueueDepthOpt:
	//	*VolumeSpecPolicy_QueueDepth
	QueueDepthOpt isVolumeSpecPolicy_QueueDepthOpt `protobuf_oneof:"queue_depth_opt"`
	// Encrypted is true if this volume will be cryptographically secured.
	//
	// Types that are valid to be assigned to EncryptedOpt:
	//	*VolumeSpecPolicy_Encrypted
	EncryptedOpt isVolumeSpecPolicy_EncryptedOpt `protobuf_oneof:"encrypted_opt"`
	// Aggregation level Specifies the number of parts the volume can be aggregated from.
	//
	// Types that are valid to be assigned to AggregationLevelOpt:
	//	*VolumeSpecPolicy_AggregationLevel
	AggregationLevelOpt isVolumeSpecPolicy_AggregationLevelOpt `protobuf_oneof:"aggregation_level_opt"`
	// Operator to check size
	SizeOperator VolumeSpecPolicy_PolicyOp `protobuf:"varint,50,opt,name=size_operator,json=sizeOperator,enum=openstorage.api.VolumeSpecPolicy_PolicyOp" json:"size_operator,omitempty"`
	// Operator to check ha_level
	HaLevelOperator VolumeSpecPolicy_PolicyOp `protobuf:"varint,51,opt,name=ha_level_operator,json=haLevelOperator,enum=openstorage.api.VolumeSpecPolicy_PolicyOp" json:"ha_level_operator,omitempty"`
	// Operator to check scale
	ScaleOperator VolumeSpecPolicy_PolicyOp `protobuf:"varint,52,opt,name=scale_operator,json=scaleOperator,enum=openstorage.api.VolumeSpecPolicy_PolicyOp" json:"scale_operator,omitempty"`
	// Operator to check snapshot_interval
	SnapshotIntervalOperator VolumeSpecPolicy_PolicyOp `protobuf:"varint,53,opt,name=snapshot_interval_operator,json=snapshotIntervalOperator,enum=openstorage.api.VolumeSpecPolicy_PolicyOp" json:"snapshot_interval_operator,omitempty"`
	// Nodiscard specifies if the volume will be mounted with discard support disabled.
	// i.e. FS will not release allocated blocks back to the backing storage pool.
	//
	// Types that are valid to be assigned to NodiscardOpt:
	//	*VolumeSpecPolicy_Nodiscard
	NodiscardOpt isVolumeSpecPolicy_NodiscardOpt `protobuf_oneof:"nodiscard_opt"`
	// IoStrategy preferred strategy for I/O.
	IoStrategy *IoStrategy `protobuf:"bytes,55,opt,name=io_strategy,json=ioStrategy" json:"io_strategy,omitempty"`
	// ExportSpec preferred volume export options.
	//
	// Types that are valid to be assigned to ExportSpecOpt:
	//	*VolumeSpecPolicy_ExportSpec
	ExportSpecOpt isVolumeSpecPolicy_ExportSpecOpt `protobuf_oneof:"export_spec_opt"`
	// scan_policy_opt defines the filesystem check policy for the volume
	//
	// Types that are valid to be assigned to ScanPolicyOpt:
	//	*VolumeSpecPolicy_ScanPolicy
	ScanPolicyOpt isVolumeSpecPolicy_ScanPolicyOpt `protobuf_oneof:"scan_policy_opt"`
	// mount_opt provides the mount time options for a volume
	//
	// Types that are valid to be assigned to MountOpt:
	//	*VolumeSpecPolicy_MountOptSpec
	MountOpt isVolumeSpecPolicy_MountOpt `protobuf_oneof:"mount_opt"`
	// sharedv4_mount_opt provides the client side mount time options for a sharedv4 volume
	//
	// Types that are valid to be assigned to Sharedv4MountOpt:
	//	*VolumeSpecPolicy_Sharedv4MountOptSpec
	Sharedv4MountOpt isVolumeSpecPolicy_Sharedv4MountOpt `protobuf_oneof:"sharedv4_mount_opt"`
	// Proxy_write is true if proxy write replication is enabled for the volume
	//
	// Types that are valid to be assigned to ProxyWriteOpt:
	//	*VolumeSpecPolicy_ProxyWrite
	ProxyWriteOpt isVolumeSpecPolicy_ProxyWriteOpt `protobuf_oneof:"proxy_write_opt"`
	// proxy_spec_opt provides the spec for a proxy volume.
	//
	// Types that are valid to be assigned to ProxySpecOpt:
	//	*VolumeSpecPolicy_ProxySpec
	ProxySpecOpt isVolumeSpecPolicy_ProxySpecOpt `protobuf_oneof:"proxy_spec_opt"`
	// fastpath preference
	//
	// Types that are valid to be assigned to FastpathOpt:
	//	*VolumeSpecPolicy_Fastpath
	FastpathOpt isVolumeSpecPolicy_FastpathOpt `protobuf_oneof:"fastpath_opt"`
	// sharedv4_service_spec_opt provides the spec for sharedv4 volume service
	//
	// Types that are valid to be assigned to Sharedv4ServiceSpecOpt:
	//	*VolumeSpecPolicy_Sharedv4ServiceSpec
	Sharedv4ServiceSpecOpt isVolumeSpecPolicy_Sharedv4ServiceSpecOpt `protobuf_oneof:"sharedv4_service_spec_opt"`
	// Sharedv4Spec specifies common properties of sharedv4 and sharedv4 service volumes
	//
	// Types that are valid to be assigned to Sharedv4SpecOpt:
	//	*VolumeSpecPolicy_Sharedv4Spec
	Sharedv4SpecOpt isVolumeSpecPolicy_Sharedv4SpecOpt `protobuf_oneof:"sharedv4_spec_opt"`
	// Autofstrim is set to true, to enable automatic fstrim on this volume
	//
	// Types that are valid to be assigned to AutoFstrimOpt:
	//	*VolumeSpecPolicy_AutoFstrim
	AutoFstrimOpt isVolumeSpecPolicy_AutoFstrimOpt `protobuf_oneof:"auto_fstrim_opt"`
	// io_throttle_opt defines the io throttle limits for the volume
	//
	// Types that are valid to be assigned to IoThrottleOpt:
	//	*VolumeSpecPolicy_IoThrottle
	IoThrottleOpt        isVolumeSpecPolicy_IoThrottleOpt `protobuf_oneof:"io_throttle_opt"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *VolumeSpecPolicy) Reset()         { *m = VolumeSpecPolicy{} }
func (m *VolumeSpecPolicy) String() string { return proto.CompactTextString(m) }
func (*VolumeSpecPolicy) ProtoMessage()    {}
func (*VolumeSpecPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{28}
}
func (m *VolumeSpecPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSpecPolicy.Unmarshal(m, b)
}
func (m *VolumeSpecPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSpecPolicy.Marshal(b, m, deterministic)
}
func (dst *VolumeSpecPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSpecPolicy.Merge(dst, src)
}
func (m *VolumeSpecPolicy) XXX_Size() int {
	return xxx_messageInfo_VolumeSpecPolicy.Size(m)
}
func (m *VolumeSpecPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSpecPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSpecPolicy proto.InternalMessageInfo

type isVolumeSpecPolicy_SizeOpt interface {
	isVolumeSpecPolicy_SizeOpt()
}
type isVolumeSpecPolicy_HaLevelOpt interface {
	isVolumeSpecPolicy_HaLevelOpt()
}
type isVolumeSpecPolicy_CosOpt interface {
	isVolumeSpecPolicy_CosOpt()
}
type isVolumeSpecPolicy_IoProfileOpt interface {
	isVolumeSpecPolicy_IoProfileOpt()
}
type isVolumeSpecPolicy_DedupeOpt interface {
	isVolumeSpecPolicy_DedupeOpt()
}
type isVolumeSpecPolicy_SnapshotIntervalOpt interface {
	isVolumeSpecPolicy_SnapshotIntervalOpt()
}
type isVolumeSpecPolicy_SharedOpt interface {
	isVolumeSpecPolicy_SharedOpt()
}
type isVolumeSpecPolicy_PassphraseOpt interface {
	isVolumeSpecPolicy_PassphraseOpt()
}
type isVolumeSpecPolicy_SnapshotScheduleOpt interface {
	isVolumeSpecPolicy_SnapshotScheduleOpt()
}
type isVolumeSpecPolicy_ScaleOpt interface {
	isVolumeSpecPolicy_ScaleOpt()
}
type isVolumeSpecPolicy_StickyOpt interface {
	isVolumeSpecPolicy_StickyOpt()
}
type isVolumeSpecPolicy_GroupOpt interface {
	isVolumeSpecPolicy_GroupOpt()
}
type isVolumeSpecPolicy_JournalOpt interface {
	isVolumeSpecPolicy_JournalOpt()
}
type isVolumeSpecPolicy_Sharedv4Opt interface {
	isVolumeSpecPolicy_Sharedv4Opt()
}
type isVolumeSpecPolicy_QueueDepthOpt interface {
	isVolumeSpecPolicy_QueueDepthOpt()
}
type isVolumeSpecPolicy_EncryptedOpt interface {
	isVolumeSpecPolicy_EncryptedOpt()
}
type isVolumeSpecPolicy_AggregationLevelOpt interface {
	isVolumeSpecPolicy_AggregationLevelOpt()
}
type isVolumeSpecPolicy_NodiscardOpt interface {
	isVolumeSpecPolicy_NodiscardOpt()
}
type isVolumeSpecPolicy_ExportSpecOpt interface {
	isVolumeSpecPolicy_ExportSpecOpt()
}
type isVolumeSpecPolicy_ScanPolicyOpt interface {
	isVolumeSpecPolicy_ScanPolicyOpt()
}
type isVolumeSpecPolicy_MountOpt interface {
	isVolumeSpecPolicy_MountOpt()
}
type isVolumeSpecPolicy_Sharedv4MountOpt interface {
	isVolumeSpecPolicy_Sharedv4MountOpt()
}
type isVolumeSpecPolicy_ProxyWriteOpt interface {
	isVolumeSpecPolicy_ProxyWriteOpt()
}
type isVolumeSpecPolicy_ProxySpecOpt interface {
	isVolumeSpecPolicy_ProxySpecOpt()
}
type isVolumeSpecPolicy_FastpathOpt interface {
	isVolumeSpecPolicy_FastpathOpt()
}
type isVolumeSpecPolicy_Sharedv4ServiceSpecOpt interface {
	isVolumeSpecPolicy_Sharedv4ServiceSpecOpt()
}
type isVolumeSpecPolicy_Sharedv4SpecOpt interface {
	isVolumeSpecPolicy_Sharedv4SpecOpt()
}
type isVolumeSpecPolicy_AutoFstrimOpt interface {
	isVolumeSpecPolicy_AutoFstrimOpt()
}
type isVolumeSpecPolicy_IoThrottleOpt interface {
	isVolumeSpecPolicy_IoThrottleOpt()
}

type VolumeSpecPolicy_Size struct {
	Size uint64 `protobuf:"varint,1,opt,name=size,oneof"`
}
type VolumeSpecPolicy_HaLevel struct {
	HaLevel int64 `protobuf:"varint,2,opt,name=ha_level,json=haLevel,oneof"`
}
type VolumeSpecPolicy_Cos struct {
	Cos CosType `protobuf:"varint,3,opt,name=cos,enum=openstorage.api.CosType,oneof"`
}
type VolumeSpecPolicy_IoProfile struct {
	IoProfile IoProfile `protobuf:"varint,4,opt,name=io_profile,json=ioProfile,enum=openstorage.api.IoProfile,oneof"`
}
type VolumeSpecPolicy_Dedupe struct {
	Dedupe bool `protobuf:"varint,5,opt,name=dedupe,oneof"`
}
type VolumeSpecPolicy_SnapshotInterval struct {
	SnapshotInterval uint32 `protobuf:"varint,6,opt,name=snapshot_interval,json=snapshotInterval,oneof"`
}
type VolumeSpecPolicy_Shared struct {
	Shared bool `protobuf:"varint,8,opt,name=shared,oneof"`
}
type VolumeSpecPolicy_Passphrase struct {
	Passphrase string `protobuf:"bytes,10,opt,name=passphrase,oneof"`
}
type VolumeSpecPolicy_SnapshotSchedule struct {
	SnapshotSchedule string `protobuf:"bytes,11,opt,name=snapshot_schedule,json=snapshotSchedule,oneof"`
}
type VolumeSpecPolicy_Scale struct {
	Scale uint32 `protobuf:"varint,12,opt,name=scale,oneof"`
}
type VolumeSpecPolicy_Sticky struct {
	Sticky bool `protobuf:"varint,13,opt,name=sticky,oneof"`
}
type VolumeSpecPolicy_Group struct {
	Group *Group `protobuf:"bytes,14,opt,name=group,oneof"`
}
type VolumeSpecPolicy_Journal struct {
	Journal bool `protobuf:"varint,15,opt,name=journal,oneof"`
}
type VolumeSpecPolicy_Sharedv4 struct {
	Sharedv4 bool `protobuf:"varint,16,opt,name=sharedv4,oneof"`
}
type VolumeSpecPolicy_QueueDepth struct {
	QueueDepth uint32 `protobuf:"varint,17,opt,name=queue_depth,json=queueDepth,oneof"`
}
type VolumeSpecPolicy_Encrypted struct {
	Encrypted bool `protobuf:"varint,18,opt,name=encrypted,oneof"`
}
type VolumeSpecPolicy_AggregationLevel struct {
	AggregationLevel uint32 `protobuf:"varint,19,opt,name=aggregation_level,json=aggregationLevel,oneof"`
}
type VolumeSpecPolicy_Nodiscard struct {
	Nodiscard bool `protobuf:"varint,54,opt,name=nodiscard,oneof"`
}
type VolumeSpecPolicy_ExportSpec struct {
	ExportSpec *ExportSpec `protobuf:"bytes,56,opt,name=export_spec,json=exportSpec,oneof"`
}
type VolumeSpecPolicy_ScanPolicy struct {
	ScanPolicy *ScanPolicy `protobuf:"bytes,57,opt,name=scan_policy,json=scanPolicy,oneof"`
}
type VolumeSpecPolicy_MountOptSpec struct {
	MountOptSpec *MountOptions `protobuf:"bytes,58,opt,name=mount_opt_spec,json=mountOptSpec,oneof"`
}
type VolumeSpecPolicy_Sharedv4MountOptSpec struct {
	Sharedv4MountOptSpec *MountOptions `protobuf:"bytes,59,opt,name=sharedv4_mount_opt_spec,json=sharedv4MountOptSpec,oneof"`
}
type VolumeSpecPolicy_ProxyWrite struct {
	ProxyWrite bool `protobuf:"varint,60,opt,name=proxy_write,json=proxyWrite,oneof"`
}
type VolumeSpecPolicy_ProxySpec struct {
	ProxySpec *ProxySpec `protobuf:"bytes,61,opt,name=proxy_spec,json=proxySpec,oneof"`
}
type VolumeSpecPolicy_Fastpath struct {
	Fastpath bool `protobuf:"varint,62,opt,name=fastpath,oneof"`
}
type VolumeSpecPolicy_Sharedv4ServiceSpec struct {
	Sharedv4ServiceSpec *Sharedv4ServiceSpec `protobuf:"bytes,63,opt,name=sharedv4_service_spec,json=sharedv4ServiceSpec,oneof"`
}
type VolumeSpecPolicy_Sharedv4Spec struct {
	Sharedv4Spec *Sharedv4Spec `protobuf:"bytes,64,opt,name=sharedv4_spec,json=sharedv4Spec,oneof"`
}
type VolumeSpecPolicy_AutoFstrim struct {
	AutoFstrim bool `protobuf:"varint,65,opt,name=auto_fstrim,json=autoFstrim,oneof"`
}
type VolumeSpecPolicy_IoThrottle struct {
	IoThrottle *IoThrottle `protobuf:"bytes,66,opt,name=io_throttle,json=ioThrottle,oneof"`
}

func (*VolumeSpecPolicy_Size) isVolumeSpecPolicy_SizeOpt()                               {}
func (*VolumeSpecPolicy_HaLevel) isVolumeSpecPolicy_HaLevelOpt()                         {}
func (*VolumeSpecPolicy_Cos) isVolumeSpecPolicy_CosOpt()                                 {}
func (*VolumeSpecPolicy_IoProfile) isVolumeSpecPolicy_IoProfileOpt()                     {}
func (*VolumeSpecPolicy_Dedupe) isVolumeSpecPolicy_DedupeOpt()                           {}
func (*VolumeSpecPolicy_SnapshotInterval) isVolumeSpecPolicy_SnapshotIntervalOpt()       {}
func (*VolumeSpecPolicy_Shared) isVolumeSpecPolicy_SharedOpt()                           {}
func (*VolumeSpecPolicy_Passphrase) isVolumeSpecPolicy_PassphraseOpt()                   {}
func (*VolumeSpecPolicy_SnapshotSchedule) isVolumeSpecPolicy_SnapshotScheduleOpt()       {}
func (*VolumeSpecPolicy_Scale) isVolumeSpecPolicy_ScaleOpt()                             {}
func (*VolumeSpecPolicy_Sticky) isVolumeSpecPolicy_StickyOpt()                           {}
func (*VolumeSpecPolicy_Group) isVolumeSpecPolicy_GroupOpt()                             {}
func (*VolumeSpecPolicy_Journal) isVolumeSpecPolicy_JournalOpt()                         {}
func (*VolumeSpecPolicy_Sharedv4) isVolumeSpecPolicy_Sharedv4Opt()                       {}
func (*VolumeSpecPolicy_QueueDepth) isVolumeSpecPolicy_QueueDepthOpt()                   {}
func (*VolumeSpecPolicy_Encrypted) isVolumeSpecPolicy_EncryptedOpt()                     {}
func (*VolumeSpecPolicy_AggregationLevel) isVolumeSpecPolicy_AggregationLevelOpt()       {}
func (*VolumeSpecPolicy_Nodiscard) isVolumeSpecPolicy_NodiscardOpt()                     {}
func (*VolumeSpecPolicy_ExportSpec) isVolumeSpecPolicy_ExportSpecOpt()                   {}
func (*VolumeSpecPolicy_ScanPolicy) isVolumeSpecPolicy_ScanPolicyOpt()                   {}
func (*VolumeSpecPolicy_MountOptSpec) isVolumeSpecPolicy_MountOpt()                      {}
func (*VolumeSpecPolicy_Sharedv4MountOptSpec) isVolumeSpecPolicy_Sharedv4MountOpt()      {}
func (*VolumeSpecPolicy_ProxyWrite) isVolumeSpecPolicy_ProxyWriteOpt()                   {}
func (*VolumeSpecPolicy_ProxySpec) isVolumeSpecPolicy_ProxySpecOpt()                     {}
func (*VolumeSpecPolicy_Fastpath) isVolumeSpecPolicy_FastpathOpt()                       {}
func (*VolumeSpecPolicy_Sharedv4ServiceSpec) isVolumeSpecPolicy_Sharedv4ServiceSpecOpt() {}
func (*VolumeSpecPolicy_Sharedv4Spec) isVolumeSpecPolicy_Sharedv4SpecOpt()               {}
func (*VolumeSpecPolicy_AutoFstrim) isVolumeSpecPolicy_AutoFstrimOpt()                   {}
func (*VolumeSpecPolicy_IoThrottle) isVolumeSpecPolicy_IoThrottleOpt()                   {}

func (m *VolumeSpecPolicy) GetSizeOpt() isVolumeSpecPolicy_SizeOpt {
	if m != nil {
		return m.SizeOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetHaLevelOpt() isVolumeSpecPolicy_HaLevelOpt {
	if m != nil {
		return m.HaLevelOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetCosOpt() isVolumeSpecPolicy_CosOpt {
	if m != nil {
		return m.CosOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetIoProfileOpt() isVolumeSpecPolicy_IoProfileOpt {
	if m != nil {
		return m.IoProfileOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetDedupeOpt() isVolumeSpecPolicy_DedupeOpt {
	if m != nil {
		return m.DedupeOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetSnapshotIntervalOpt() isVolumeSpecPolicy_SnapshotIntervalOpt {
	if m != nil {
		return m.SnapshotIntervalOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetSharedOpt() isVolumeSpecPolicy_SharedOpt {
	if m != nil {
		return m.SharedOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetPassphraseOpt() isVolumeSpecPolicy_PassphraseOpt {
	if m != nil {
		return m.PassphraseOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetSnapshotScheduleOpt() isVolumeSpecPolicy_SnapshotScheduleOpt {
	if m != nil {
		return m.SnapshotScheduleOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetScaleOpt() isVolumeSpecPolicy_ScaleOpt {
	if m != nil {
		return m.ScaleOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetStickyOpt() isVolumeSpecPolicy_StickyOpt {
	if m != nil {
		return m.StickyOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetGroupOpt() isVolumeSpecPolicy_GroupOpt {
	if m != nil {
		return m.GroupOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetJournalOpt() isVolumeSpecPolicy_JournalOpt {
	if m != nil {
		return m.JournalOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetSharedv4Opt() isVolumeSpecPolicy_Sharedv4Opt {
	if m != nil {
		return m.Sharedv4Opt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetQueueDepthOpt() isVolumeSpecPolicy_QueueDepthOpt {
	if m != nil {
		return m.QueueDepthOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetEncryptedOpt() isVolumeSpecPolicy_EncryptedOpt {
	if m != nil {
		return m.EncryptedOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetAggregationLevelOpt() isVolumeSpecPolicy_AggregationLevelOpt {
	if m != nil {
		return m.AggregationLevelOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetNodiscardOpt() isVolumeSpecPolicy_NodiscardOpt {
	if m != nil {
		return m.NodiscardOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetExportSpecOpt() isVolumeSpecPolicy_ExportSpecOpt {
	if m != nil {
		return m.ExportSpecOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetScanPolicyOpt() isVolumeSpecPolicy_ScanPolicyOpt {
	if m != nil {
		return m.ScanPolicyOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetMountOpt() isVolumeSpecPolicy_MountOpt {
	if m != nil {
		return m.MountOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetSharedv4MountOpt() isVolumeSpecPolicy_Sharedv4MountOpt {
	if m != nil {
		return m.Sharedv4MountOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetProxyWriteOpt() isVolumeSpecPolicy_ProxyWriteOpt {
	if m != nil {
		return m.ProxyWriteOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetProxySpecOpt() isVolumeSpecPolicy_ProxySpecOpt {
	if m != nil {
		return m.ProxySpecOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetFastpathOpt() isVolumeSpecPolicy_FastpathOpt {
	if m != nil {
		return m.FastpathOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetSharedv4ServiceSpecOpt() isVolumeSpecPolicy_Sharedv4ServiceSpecOpt {
	if m != nil {
		return m.Sharedv4ServiceSpecOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetSharedv4SpecOpt() isVolumeSpecPolicy_Sharedv4SpecOpt {
	if m != nil {
		return m.Sharedv4SpecOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetAutoFstrimOpt() isVolumeSpecPolicy_AutoFstrimOpt {
	if m != nil {
		return m.AutoFstrimOpt
	}
	return nil
}
func (m *VolumeSpecPolicy) GetIoThrottleOpt() isVolumeSpecPolicy_IoThrottleOpt {
	if m != nil {
		return m.IoThrottleOpt
	}
	return nil
}

func (m *VolumeSpecPolicy) GetSize() uint64 {
	if x, ok := m.GetSizeOpt().(*VolumeSpecPolicy_Size); ok {
		return x.Size
	}
	return 0
}

func (m *VolumeSpecPolicy) GetHaLevel() int64 {
	if x, ok := m.GetHaLevelOpt().(*VolumeSpecPolicy_HaLevel); ok {
		return x.HaLevel
	}
	return 0
}

func (m *VolumeSpecPolicy) GetCos() CosType {
	if x, ok := m.GetCosOpt().(*VolumeSpecPolicy_Cos); ok {
		return x.Cos
	}
	return CosType_NONE
}

func (m *VolumeSpecPolicy) GetIoProfile() IoProfile {
	if x, ok := m.GetIoProfileOpt().(*VolumeSpecPolicy_IoProfile); ok {
		return x.IoProfile
	}
	return IoProfile_IO_PROFILE_SEQUENTIAL
}

func (m *VolumeSpecPolicy) GetDedupe() bool {
	if x, ok := m.GetDedupeOpt().(*VolumeSpecPolicy_Dedupe); ok {
		return x.Dedupe
	}
	return false
}

func (m *VolumeSpecPolicy) GetSnapshotInterval() uint32 {
	if x, ok := m.GetSnapshotIntervalOpt().(*VolumeSpecPolicy_SnapshotInterval); ok {
		return x.SnapshotInterval
	}
	return 0
}

func (m *VolumeSpecPolicy) GetVolumeLabels() map[string]string {
	if m != nil {
		return m.VolumeLabels
	}
	return nil
}

func (m *VolumeSpecPolicy) GetShared() bool {
	if x, ok := m.GetSharedOpt().(*VolumeSpecPolicy_Shared); ok {
		return x.Shared
	}
	return false
}

func (m *VolumeSpecPolicy) GetReplicaSet() *ReplicaSet {
	if m != nil {
		return m.ReplicaSet
	}
	return nil
}

func (m *VolumeSpecPolicy) GetPassphrase() string {
	if x, ok := m.GetPassphraseOpt().(*VolumeSpecPolicy_Passphrase); ok {
		return x.Passphrase
	}
	return ""
}

func (m *VolumeSpecPolicy) GetSnapshotSchedule() string {
	if x, ok := m.GetSnapshotScheduleOpt().(*VolumeSpecPolicy_SnapshotSchedule); ok {
		return x.SnapshotSchedule
	}
	return ""
}

func (m *VolumeSpecPolicy) GetScale() uint32 {
	if x, ok := m.GetScaleOpt().(*VolumeSpecPolicy_Scale); ok {
		return x.Scale
	}
	return 0
}

func (m *VolumeSpecPolicy) GetSticky() bool {
	if x, ok := m.GetStickyOpt().(*VolumeSpecPolicy_Sticky); ok {
		return x.Sticky
	}
	return false
}

func (m *VolumeSpecPolicy) GetGroup() *Group {
	if x, ok := m.GetGroupOpt().(*VolumeSpecPolicy_Group); ok {
		return x.Group
	}
	return nil
}

func (m *VolumeSpecPolicy) GetJournal() bool {
	if x, ok := m.GetJournalOpt().(*VolumeSpecPolicy_Journal); ok {
		return x.Journal
	}
	return false
}

func (m *VolumeSpecPolicy) GetSharedv4() bool {
	if x, ok := m.GetSharedv4Opt().(*VolumeSpecPolicy_Sharedv4); ok {
		return x.Sharedv4
	}
	return false
}

func (m *VolumeSpecPolicy) GetQueueDepth() uint32 {
	if x, ok := m.GetQueueDepthOpt().(*VolumeSpecPolicy_QueueDepth); ok {
		return x.QueueDepth
	}
	return 0
}

func (m *VolumeSpecPolicy) GetEncrypted() bool {
	if x, ok := m.GetEncryptedOpt().(*VolumeSpecPolicy_Encrypted); ok {
		return x.Encrypted
	}
	return false
}

func (m *VolumeSpecPolicy) GetAggregationLevel() uint32 {
	if x, ok := m.GetAggregationLevelOpt().(*VolumeSpecPolicy_AggregationLevel); ok {
		return x.AggregationLevel
	}
	return 0
}

func (m *VolumeSpecPolicy) GetSizeOperator() VolumeSpecPolicy_PolicyOp {
	if m != nil {
		return m.SizeOperator
	}
	return VolumeSpecPolicy_Equal
}

func (m *VolumeSpecPolicy) GetHaLevelOperator() VolumeSpecPolicy_PolicyOp {
	if m != nil {
		return m.HaLevelOperator
	}
	return VolumeSpecPolicy_Equal
}

func (m *VolumeSpecPolicy) GetScaleOperator() VolumeSpecPolicy_PolicyOp {
	if m != nil {
		return m.ScaleOperator
	}
	return VolumeSpecPolicy_Equal
}

func (m *VolumeSpecPolicy) GetSnapshotIntervalOperator() VolumeSpecPolicy_PolicyOp {
	if m != nil {
		return m.SnapshotIntervalOperator
	}
	return VolumeSpecPolicy_Equal
}

func (m *VolumeSpecPolicy) GetNodiscard() bool {
	if x, ok := m.GetNodiscardOpt().(*VolumeSpecPolicy_Nodiscard); ok {
		return x.Nodiscard
	}
	return false
}

func (m *VolumeSpecPolicy) GetIoStrategy() *IoStrategy {
	if m != nil {
		return m.IoStrategy
	}
	return nil
}

func (m *VolumeSpecPolicy) GetExportSpec() *ExportSpec {
	if x, ok := m.GetExportSpecOpt().(*VolumeSpecPolicy_ExportSpec); ok {
		return x.ExportSpec
	}
	return nil
}

func (m *VolumeSpecPolicy) GetScanPolicy() *ScanPolicy {
	if x, ok := m.GetScanPolicyOpt().(*VolumeSpecPolicy_ScanPolicy); ok {
		return x.ScanPolicy
	}
	return nil
}

func (m *VolumeSpecPolicy) GetMountOptSpec() *MountOptions {
	if x, ok := m.GetMountOpt().(*VolumeSpecPolicy_MountOptSpec); ok {
		return x.MountOptSpec
	}
	return nil
}

func (m *VolumeSpecPolicy) GetSharedv4MountOptSpec() *MountOptions {
	if x, ok := m.GetSharedv4MountOpt().(*VolumeSpecPolicy_Sharedv4MountOptSpec); ok {
		return x.Sharedv4MountOptSpec
	}
	return nil
}

func (m *VolumeSpecPolicy) GetProxyWrite() bool {
	if x, ok := m.GetProxyWriteOpt().(*VolumeSpecPolicy_ProxyWrite); ok {
		return x.ProxyWrite
	}
	return false
}

func (m *VolumeSpecPolicy) GetProxySpec() *ProxySpec {
	if x, ok := m.GetProxySpecOpt().(*VolumeSpecPolicy_ProxySpec); ok {
		return x.ProxySpec
	}
	return nil
}

func (m *VolumeSpecPolicy) GetFastpath() bool {
	if x, ok := m.GetFastpathOpt().(*VolumeSpecPolicy_Fastpath); ok {
		return x.Fastpath
	}
	return false
}

func (m *VolumeSpecPolicy) GetSharedv4ServiceSpec() *Sharedv4ServiceSpec {
	if x, ok := m.GetSharedv4ServiceSpecOpt().(*VolumeSpecPolicy_Sharedv4ServiceSpec); ok {
		return x.Sharedv4ServiceSpec
	}
	return nil
}

func (m *VolumeSpecPolicy) GetSharedv4Spec() *Sharedv4Spec {
	if x, ok := m.GetSharedv4SpecOpt().(*VolumeSpecPolicy_Sharedv4Spec); ok {
		return x.Sharedv4Spec
	}
	return nil
}

func (m *VolumeSpecPolicy) GetAutoFstrim() bool {
	if x, ok := m.GetAutoFstrimOpt().(*VolumeSpecPolicy_AutoFstrim); ok {
		return x.AutoFstrim
	}
	return false
}

func (m *VolumeSpecPolicy) GetIoThrottle() *IoThrottle {
	if x, ok := m.GetIoThrottleOpt().(*VolumeSpecPolicy_IoThrottle); ok {
		return x.IoThrottle
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*VolumeSpecPolicy) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _VolumeSpecPolicy_OneofMarshaler, _VolumeSpecPolicy_OneofUnmarshaler, _VolumeSpecPolicy_OneofSizer, []interface{}{
		(*VolumeSpecPolicy_Size)(nil),
		(*VolumeSpecPolicy_HaLevel)(nil),
		(*VolumeSpecPolicy_Cos)(nil),
		(*VolumeSpecPolicy_IoProfile)(nil),
		(*VolumeSpecPolicy_Dedupe)(nil),
		(*VolumeSpecPolicy_SnapshotInterval)(nil),
		(*VolumeSpecPolicy_Shared)(nil),
		(*VolumeSpecPolicy_Passphrase)(nil),
		(*VolumeSpecPolicy_SnapshotSchedule)(nil),
		(*VolumeSpecPolicy_Scale)(nil),
		(*VolumeSpecPolicy_Sticky)(nil),
		(*VolumeSpecPolicy_Group)(nil),
		(*VolumeSpecPolicy_Journal)(nil),
		(*VolumeSpecPolicy_Sharedv4)(nil),
		(*VolumeSpecPolicy_QueueDepth)(nil),
		(*VolumeSpecPolicy_Encrypted)(nil),
		(*VolumeSpecPolicy_AggregationLevel)(nil),
		(*VolumeSpecPolicy_Nodiscard)(nil),
		(*VolumeSpecPolicy_ExportSpec)(nil),
		(*VolumeSpecPolicy_ScanPolicy)(nil),
		(*VolumeSpecPolicy_MountOptSpec)(nil),
		(*VolumeSpecPolicy_Sharedv4MountOptSpec)(nil),
		(*VolumeSpecPolicy_ProxyWrite)(nil),
		(*VolumeSpecPolicy_ProxySpec)(nil),
		(*VolumeSpecPolicy_Fastpath)(nil),
		(*VolumeSpecPolicy_Sharedv4ServiceSpec)(nil),
		(*VolumeSpecPolicy_Sharedv4Spec)(nil),
		(*VolumeSpecPolicy_AutoFstrim)(nil),
		(*VolumeSpecPolicy_IoThrottle)(nil),
	}
}

func _VolumeSpecPolicy_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*VolumeSpecPolicy)
	// size_opt
	switch x := m.SizeOpt.(type) {
	case *VolumeSpecPolicy_Size:
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Size))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.SizeOpt has unexpected type %T", x)
	}
	// ha_level_opt
	switch x := m.HaLevelOpt.(type) {
	case *VolumeSpecPolicy_HaLevel:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.HaLevel))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.HaLevelOpt has unexpected type %T", x)
	}
	// cos_opt
	switch x := m.CosOpt.(type) {
	case *VolumeSpecPolicy_Cos:
		b.EncodeVarint(3<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Cos))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.CosOpt has unexpected type %T", x)
	}
	// io_profile_opt
	switch x := m.IoProfileOpt.(type) {
	case *VolumeSpecPolicy_IoProfile:
		b.EncodeVarint(4<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.IoProfile))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.IoProfileOpt has unexpected type %T", x)
	}
	// dedupe_opt
	switch x := m.DedupeOpt.(type) {
	case *VolumeSpecPolicy_Dedupe:
		t := uint64(0)
		if x.Dedupe {
			t = 1
		}
		b.EncodeVarint(5<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.DedupeOpt has unexpected type %T", x)
	}
	// snapshot_interval_opt
	switch x := m.SnapshotIntervalOpt.(type) {
	case *VolumeSpecPolicy_SnapshotInterval:
		b.EncodeVarint(6<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.SnapshotInterval))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.SnapshotIntervalOpt has unexpected type %T", x)
	}
	// shared_opt
	switch x := m.SharedOpt.(type) {
	case *VolumeSpecPolicy_Shared:
		t := uint64(0)
		if x.Shared {
			t = 1
		}
		b.EncodeVarint(8<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.SharedOpt has unexpected type %T", x)
	}
	// passphrase_opt
	switch x := m.PassphraseOpt.(type) {
	case *VolumeSpecPolicy_Passphrase:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Passphrase)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.PassphraseOpt has unexpected type %T", x)
	}
	// snapshot_schedule_opt
	switch x := m.SnapshotScheduleOpt.(type) {
	case *VolumeSpecPolicy_SnapshotSchedule:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.SnapshotSchedule)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.SnapshotScheduleOpt has unexpected type %T", x)
	}
	// scale_opt
	switch x := m.ScaleOpt.(type) {
	case *VolumeSpecPolicy_Scale:
		b.EncodeVarint(12<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Scale))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.ScaleOpt has unexpected type %T", x)
	}
	// sticky_opt
	switch x := m.StickyOpt.(type) {
	case *VolumeSpecPolicy_Sticky:
		t := uint64(0)
		if x.Sticky {
			t = 1
		}
		b.EncodeVarint(13<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.StickyOpt has unexpected type %T", x)
	}
	// group_opt
	switch x := m.GroupOpt.(type) {
	case *VolumeSpecPolicy_Group:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Group); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.GroupOpt has unexpected type %T", x)
	}
	// journal_opt
	switch x := m.JournalOpt.(type) {
	case *VolumeSpecPolicy_Journal:
		t := uint64(0)
		if x.Journal {
			t = 1
		}
		b.EncodeVarint(15<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.JournalOpt has unexpected type %T", x)
	}
	// sharedv4_opt
	switch x := m.Sharedv4Opt.(type) {
	case *VolumeSpecPolicy_Sharedv4:
		t := uint64(0)
		if x.Sharedv4 {
			t = 1
		}
		b.EncodeVarint(16<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.Sharedv4Opt has unexpected type %T", x)
	}
	// queue_depth_opt
	switch x := m.QueueDepthOpt.(type) {
	case *VolumeSpecPolicy_QueueDepth:
		b.EncodeVarint(17<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.QueueDepth))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.QueueDepthOpt has unexpected type %T", x)
	}
	// encrypted_opt
	switch x := m.EncryptedOpt.(type) {
	case *VolumeSpecPolicy_Encrypted:
		t := uint64(0)
		if x.Encrypted {
			t = 1
		}
		b.EncodeVarint(18<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.EncryptedOpt has unexpected type %T", x)
	}
	// aggregation_level_opt
	switch x := m.AggregationLevelOpt.(type) {
	case *VolumeSpecPolicy_AggregationLevel:
		b.EncodeVarint(19<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.AggregationLevel))
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.AggregationLevelOpt has unexpected type %T", x)
	}
	// nodiscard_opt
	switch x := m.NodiscardOpt.(type) {
	case *VolumeSpecPolicy_Nodiscard:
		t := uint64(0)
		if x.Nodiscard {
			t = 1
		}
		b.EncodeVarint(54<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.NodiscardOpt has unexpected type %T", x)
	}
	// export_spec_opt
	switch x := m.ExportSpecOpt.(type) {
	case *VolumeSpecPolicy_ExportSpec:
		b.EncodeVarint(56<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ExportSpec); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.ExportSpecOpt has unexpected type %T", x)
	}
	// scan_policy_opt
	switch x := m.ScanPolicyOpt.(type) {
	case *VolumeSpecPolicy_ScanPolicy:
		b.EncodeVarint(57<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ScanPolicy); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.ScanPolicyOpt has unexpected type %T", x)
	}
	// mount_opt
	switch x := m.MountOpt.(type) {
	case *VolumeSpecPolicy_MountOptSpec:
		b.EncodeVarint(58<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MountOptSpec); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.MountOpt has unexpected type %T", x)
	}
	// sharedv4_mount_opt
	switch x := m.Sharedv4MountOpt.(type) {
	case *VolumeSpecPolicy_Sharedv4MountOptSpec:
		b.EncodeVarint(59<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Sharedv4MountOptSpec); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.Sharedv4MountOpt has unexpected type %T", x)
	}
	// proxy_write_opt
	switch x := m.ProxyWriteOpt.(type) {
	case *VolumeSpecPolicy_ProxyWrite:
		t := uint64(0)
		if x.ProxyWrite {
			t = 1
		}
		b.EncodeVarint(60<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.ProxyWriteOpt has unexpected type %T", x)
	}
	// proxy_spec_opt
	switch x := m.ProxySpecOpt.(type) {
	case *VolumeSpecPolicy_ProxySpec:
		b.EncodeVarint(61<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ProxySpec); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.ProxySpecOpt has unexpected type %T", x)
	}
	// fastpath_opt
	switch x := m.FastpathOpt.(type) {
	case *VolumeSpecPolicy_Fastpath:
		t := uint64(0)
		if x.Fastpath {
			t = 1
		}
		b.EncodeVarint(62<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.FastpathOpt has unexpected type %T", x)
	}
	// sharedv4_service_spec_opt
	switch x := m.Sharedv4ServiceSpecOpt.(type) {
	case *VolumeSpecPolicy_Sharedv4ServiceSpec:
		b.EncodeVarint(63<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Sharedv4ServiceSpec); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.Sharedv4ServiceSpecOpt has unexpected type %T", x)
	}
	// sharedv4_spec_opt
	switch x := m.Sharedv4SpecOpt.(type) {
	case *VolumeSpecPolicy_Sharedv4Spec:
		b.EncodeVarint(64<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Sharedv4Spec); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.Sharedv4SpecOpt has unexpected type %T", x)
	}
	// auto_fstrim_opt
	switch x := m.AutoFstrimOpt.(type) {
	case *VolumeSpecPolicy_AutoFstrim:
		t := uint64(0)
		if x.AutoFstrim {
			t = 1
		}
		b.EncodeVarint(65<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.AutoFstrimOpt has unexpected type %T", x)
	}
	// io_throttle_opt
	switch x := m.IoThrottleOpt.(type) {
	case *VolumeSpecPolicy_IoThrottle:
		b.EncodeVarint(66<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IoThrottle); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("VolumeSpecPolicy.IoThrottleOpt has unexpected type %T", x)
	}
	return nil
}

func _VolumeSpecPolicy_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*VolumeSpecPolicy)
	switch tag {
	case 1: // size_opt.size
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.SizeOpt = &VolumeSpecPolicy_Size{x}
		return true, err
	case 2: // ha_level_opt.ha_level
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.HaLevelOpt = &VolumeSpecPolicy_HaLevel{int64(x)}
		return true, err
	case 3: // cos_opt.cos
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.CosOpt = &VolumeSpecPolicy_Cos{CosType(x)}
		return true, err
	case 4: // io_profile_opt.io_profile
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.IoProfileOpt = &VolumeSpecPolicy_IoProfile{IoProfile(x)}
		return true, err
	case 5: // dedupe_opt.dedupe
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.DedupeOpt = &VolumeSpecPolicy_Dedupe{x != 0}
		return true, err
	case 6: // snapshot_interval_opt.snapshot_interval
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.SnapshotIntervalOpt = &VolumeSpecPolicy_SnapshotInterval{uint32(x)}
		return true, err
	case 8: // shared_opt.shared
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.SharedOpt = &VolumeSpecPolicy_Shared{x != 0}
		return true, err
	case 10: // passphrase_opt.passphrase
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.PassphraseOpt = &VolumeSpecPolicy_Passphrase{x}
		return true, err
	case 11: // snapshot_schedule_opt.snapshot_schedule
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.SnapshotScheduleOpt = &VolumeSpecPolicy_SnapshotSchedule{x}
		return true, err
	case 12: // scale_opt.scale
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ScaleOpt = &VolumeSpecPolicy_Scale{uint32(x)}
		return true, err
	case 13: // sticky_opt.sticky
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.StickyOpt = &VolumeSpecPolicy_Sticky{x != 0}
		return true, err
	case 14: // group_opt.group
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Group)
		err := b.DecodeMessage(msg)
		m.GroupOpt = &VolumeSpecPolicy_Group{msg}
		return true, err
	case 15: // journal_opt.journal
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.JournalOpt = &VolumeSpecPolicy_Journal{x != 0}
		return true, err
	case 16: // sharedv4_opt.sharedv4
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Sharedv4Opt = &VolumeSpecPolicy_Sharedv4{x != 0}
		return true, err
	case 17: // queue_depth_opt.queue_depth
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.QueueDepthOpt = &VolumeSpecPolicy_QueueDepth{uint32(x)}
		return true, err
	case 18: // encrypted_opt.encrypted
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.EncryptedOpt = &VolumeSpecPolicy_Encrypted{x != 0}
		return true, err
	case 19: // aggregation_level_opt.aggregation_level
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.AggregationLevelOpt = &VolumeSpecPolicy_AggregationLevel{uint32(x)}
		return true, err
	case 54: // nodiscard_opt.nodiscard
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.NodiscardOpt = &VolumeSpecPolicy_Nodiscard{x != 0}
		return true, err
	case 56: // export_spec_opt.export_spec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ExportSpec)
		err := b.DecodeMessage(msg)
		m.ExportSpecOpt = &VolumeSpecPolicy_ExportSpec{msg}
		return true, err
	case 57: // scan_policy_opt.scan_policy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ScanPolicy)
		err := b.DecodeMessage(msg)
		m.ScanPolicyOpt = &VolumeSpecPolicy_ScanPolicy{msg}
		return true, err
	case 58: // mount_opt.mount_opt_spec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MountOptions)
		err := b.DecodeMessage(msg)
		m.MountOpt = &VolumeSpecPolicy_MountOptSpec{msg}
		return true, err
	case 59: // sharedv4_mount_opt.sharedv4_mount_opt_spec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MountOptions)
		err := b.DecodeMessage(msg)
		m.Sharedv4MountOpt = &VolumeSpecPolicy_Sharedv4MountOptSpec{msg}
		return true, err
	case 60: // proxy_write_opt.proxy_write
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ProxyWriteOpt = &VolumeSpecPolicy_ProxyWrite{x != 0}
		return true, err
	case 61: // proxy_spec_opt.proxy_spec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ProxySpec)
		err := b.DecodeMessage(msg)
		m.ProxySpecOpt = &VolumeSpecPolicy_ProxySpec{msg}
		return true, err
	case 62: // fastpath_opt.fastpath
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.FastpathOpt = &VolumeSpecPolicy_Fastpath{x != 0}
		return true, err
	case 63: // sharedv4_service_spec_opt.sharedv4_service_spec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Sharedv4ServiceSpec)
		err := b.DecodeMessage(msg)
		m.Sharedv4ServiceSpecOpt = &VolumeSpecPolicy_Sharedv4ServiceSpec{msg}
		return true, err
	case 64: // sharedv4_spec_opt.sharedv4_spec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Sharedv4Spec)
		err := b.DecodeMessage(msg)
		m.Sharedv4SpecOpt = &VolumeSpecPolicy_Sharedv4Spec{msg}
		return true, err
	case 65: // auto_fstrim_opt.auto_fstrim
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.AutoFstrimOpt = &VolumeSpecPolicy_AutoFstrim{x != 0}
		return true, err
	case 66: // io_throttle_opt.io_throttle
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(IoThrottle)
		err := b.DecodeMessage(msg)
		m.IoThrottleOpt = &VolumeSpecPolicy_IoThrottle{msg}
		return true, err
	default:
		return false, nil
	}
}

func _VolumeSpecPolicy_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*VolumeSpecPolicy)
	// size_opt
	switch x := m.SizeOpt.(type) {
	case *VolumeSpecPolicy_Size:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Size))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// ha_level_opt
	switch x := m.HaLevelOpt.(type) {
	case *VolumeSpecPolicy_HaLevel:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.HaLevel))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// cos_opt
	switch x := m.CosOpt.(type) {
	case *VolumeSpecPolicy_Cos:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Cos))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// io_profile_opt
	switch x := m.IoProfileOpt.(type) {
	case *VolumeSpecPolicy_IoProfile:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.IoProfile))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// dedupe_opt
	switch x := m.DedupeOpt.(type) {
	case *VolumeSpecPolicy_Dedupe:
		n += 1 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// snapshot_interval_opt
	switch x := m.SnapshotIntervalOpt.(type) {
	case *VolumeSpecPolicy_SnapshotInterval:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.SnapshotInterval))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// shared_opt
	switch x := m.SharedOpt.(type) {
	case *VolumeSpecPolicy_Shared:
		n += 1 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// passphrase_opt
	switch x := m.PassphraseOpt.(type) {
	case *VolumeSpecPolicy_Passphrase:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Passphrase)))
		n += len(x.Passphrase)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// snapshot_schedule_opt
	switch x := m.SnapshotScheduleOpt.(type) {
	case *VolumeSpecPolicy_SnapshotSchedule:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.SnapshotSchedule)))
		n += len(x.SnapshotSchedule)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// scale_opt
	switch x := m.ScaleOpt.(type) {
	case *VolumeSpecPolicy_Scale:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Scale))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// sticky_opt
	switch x := m.StickyOpt.(type) {
	case *VolumeSpecPolicy_Sticky:
		n += 1 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// group_opt
	switch x := m.GroupOpt.(type) {
	case *VolumeSpecPolicy_Group:
		s := proto.Size(x.Group)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// journal_opt
	switch x := m.JournalOpt.(type) {
	case *VolumeSpecPolicy_Journal:
		n += 1 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// sharedv4_opt
	switch x := m.Sharedv4Opt.(type) {
	case *VolumeSpecPolicy_Sharedv4:
		n += 2 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// queue_depth_opt
	switch x := m.QueueDepthOpt.(type) {
	case *VolumeSpecPolicy_QueueDepth:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.QueueDepth))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// encrypted_opt
	switch x := m.EncryptedOpt.(type) {
	case *VolumeSpecPolicy_Encrypted:
		n += 2 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// aggregation_level_opt
	switch x := m.AggregationLevelOpt.(type) {
	case *VolumeSpecPolicy_AggregationLevel:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.AggregationLevel))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// nodiscard_opt
	switch x := m.NodiscardOpt.(type) {
	case *VolumeSpecPolicy_Nodiscard:
		n += 2 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// export_spec_opt
	switch x := m.ExportSpecOpt.(type) {
	case *VolumeSpecPolicy_ExportSpec:
		s := proto.Size(x.ExportSpec)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// scan_policy_opt
	switch x := m.ScanPolicyOpt.(type) {
	case *VolumeSpecPolicy_ScanPolicy:
		s := proto.Size(x.ScanPolicy)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// mount_opt
	switch x := m.MountOpt.(type) {
	case *VolumeSpecPolicy_MountOptSpec:
		s := proto.Size(x.MountOptSpec)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// sharedv4_mount_opt
	switch x := m.Sharedv4MountOpt.(type) {
	case *VolumeSpecPolicy_Sharedv4MountOptSpec:
		s := proto.Size(x.Sharedv4MountOptSpec)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// proxy_write_opt
	switch x := m.ProxyWriteOpt.(type) {
	case *VolumeSpecPolicy_ProxyWrite:
		n += 2 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// proxy_spec_opt
	switch x := m.ProxySpecOpt.(type) {
	case *VolumeSpecPolicy_ProxySpec:
		s := proto.Size(x.ProxySpec)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// fastpath_opt
	switch x := m.FastpathOpt.(type) {
	case *VolumeSpecPolicy_Fastpath:
		n += 2 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// sharedv4_service_spec_opt
	switch x := m.Sharedv4ServiceSpecOpt.(type) {
	case *VolumeSpecPolicy_Sharedv4ServiceSpec:
		s := proto.Size(x.Sharedv4ServiceSpec)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// sharedv4_spec_opt
	switch x := m.Sharedv4SpecOpt.(type) {
	case *VolumeSpecPolicy_Sharedv4Spec:
		s := proto.Size(x.Sharedv4Spec)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// auto_fstrim_opt
	switch x := m.AutoFstrimOpt.(type) {
	case *VolumeSpecPolicy_AutoFstrim:
		n += 2 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// io_throttle_opt
	switch x := m.IoThrottleOpt.(type) {
	case *VolumeSpecPolicy_IoThrottle:
		s := proto.Size(x.IoThrottle)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// ReplicaSet set of machine IDs (nodes) to which part of this volume is erasure
// coded - for clustered storage arrays
type ReplicaSet struct {
	Nodes []string `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
	// Unique IDs of the storage pools for this replica set
	PoolUuids            []string `protobuf:"bytes,2,rep,name=pool_uuids,json=poolUuids" json:"pool_uuids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaSet) Reset()         { *m = ReplicaSet{} }
func (m *ReplicaSet) String() string { return proto.CompactTextString(m) }
func (*ReplicaSet) ProtoMessage()    {}
func (*ReplicaSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{29}
}
func (m *ReplicaSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaSet.Unmarshal(m, b)
}
func (m *ReplicaSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaSet.Marshal(b, m, deterministic)
}
func (dst *ReplicaSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaSet.Merge(dst, src)
}
func (m *ReplicaSet) XXX_Size() int {
	return xxx_messageInfo_ReplicaSet.Size(m)
}
func (m *ReplicaSet) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaSet.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaSet proto.InternalMessageInfo

func (m *ReplicaSet) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *ReplicaSet) GetPoolUuids() []string {
	if m != nil {
		return m.PoolUuids
	}
	return nil
}

// RuntimeStateMap is a list of name value mapping of driver specific runtime
// information.
type RuntimeStateMap struct {
	RuntimeState         map[string]string `protobuf:"bytes,1,rep,name=runtime_state,json=runtimeState" json:"runtime_state,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RuntimeStateMap) Reset()         { *m = RuntimeStateMap{} }
func (m *RuntimeStateMap) String() string { return proto.CompactTextString(m) }
func (*RuntimeStateMap) ProtoMessage()    {}
func (*RuntimeStateMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{30}
}
func (m *RuntimeStateMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuntimeStateMap.Unmarshal(m, b)
}
func (m *RuntimeStateMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuntimeStateMap.Marshal(b, m, deterministic)
}
func (dst *RuntimeStateMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeStateMap.Merge(dst, src)
}
func (m *RuntimeStateMap) XXX_Size() int {
	return xxx_messageInfo_RuntimeStateMap.Size(m)
}
func (m *RuntimeStateMap) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeStateMap.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeStateMap proto.InternalMessageInfo

func (m *RuntimeStateMap) GetRuntimeState() map[string]string {
	if m != nil {
		return m.RuntimeState
	}
	return nil
}

// Ownership information for resource.
// Administrators are users who belong to the group `*`, meaning, every group.
type Ownership struct {
	// Username of owner.
	//
	// The storage system uses the username taken from the security authorization
	// token and is saved on this field. Only users with system administration
	// can edit this value.
	Owner string `protobuf:"bytes,1,opt,name=owner" json:"owner,omitempty"`
	// Permissions to share resource which can be set by the owner.
	//
	// NOTE: To create an "admin" user which has access to any resource set the group value
	// in the token of the user to `*`.
	Acls                 *Ownership_AccessControl `protobuf:"bytes,2,opt,name=acls" json:"acls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Ownership) Reset()         { *m = Ownership{} }
func (m *Ownership) String() string { return proto.CompactTextString(m) }
func (*Ownership) ProtoMessage()    {}
func (*Ownership) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{31}
}
func (m *Ownership) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ownership.Unmarshal(m, b)
}
func (m *Ownership) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ownership.Marshal(b, m, deterministic)
}
func (dst *Ownership) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ownership.Merge(dst, src)
}
func (m *Ownership) XXX_Size() int {
	return xxx_messageInfo_Ownership.Size(m)
}
func (m *Ownership) XXX_DiscardUnknown() {
	xxx_messageInfo_Ownership.DiscardUnknown(m)
}

var xxx_messageInfo_Ownership proto.InternalMessageInfo

func (m *Ownership) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Ownership) GetAcls() *Ownership_AccessControl {
	if m != nil {
		return m.Acls
	}
	return nil
}

// PublicAccessControl allows assigning public ownership
type Ownership_PublicAccessControl struct {
	// AccessType declares which level of public access is allowed
	Type                 Ownership_AccessType `protobuf:"varint,1,opt,name=type,enum=openstorage.api.Ownership_AccessType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Ownership_PublicAccessControl) Reset()         { *m = Ownership_PublicAccessControl{} }
func (m *Ownership_PublicAccessControl) String() string { return proto.CompactTextString(m) }
func (*Ownership_PublicAccessControl) ProtoMessage()    {}
func (*Ownership_PublicAccessControl) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{31, 0}
}
func (m *Ownership_PublicAccessControl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ownership_PublicAccessControl.Unmarshal(m, b)
}
func (m *Ownership_PublicAccessControl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ownership_PublicAccessControl.Marshal(b, m, deterministic)
}
func (dst *Ownership_PublicAccessControl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ownership_PublicAccessControl.Merge(dst, src)
}
func (m *Ownership_PublicAccessControl) XXX_Size() int {
	return xxx_messageInfo_Ownership_PublicAccessControl.Size(m)
}
func (m *Ownership_PublicAccessControl) XXX_DiscardUnknown() {
	xxx_messageInfo_Ownership_PublicAccessControl.DiscardUnknown(m)
}

var xxx_messageInfo_Ownership_PublicAccessControl proto.InternalMessageInfo

func (m *Ownership_PublicAccessControl) GetType() Ownership_AccessType {
	if m != nil {
		return m.Type
	}
	return Ownership_Read
}

type Ownership_AccessControl struct {
	// Group access to resource which must match the group set in the
	// authorization token.
	// Can be set by the owner or the system administrator only.
	// Possible values are:
	// 1. no groups: Means no groups are given access.
	// 2. `["*"]`: All groups are allowed.
	// 3. `["group1", "group2"]`: Only certain groups are allowed. In this example only
	// _group1_ and _group2_ are allowed.
	Groups map[string]Ownership_AccessType `protobuf:"bytes,1,rep,name=groups" json:"groups,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=openstorage.api.Ownership_AccessType"`
	// Collaborator access to resource gives access to other user.
	// Must be the username (unique id) set in the authorization token.
	// The owner or the administrator can set this value. Possible values are:
	// 1. no collaborators: Means no users are given access.
	// 2. `["*"]`: All users are allowed.
	// 3. `["username1", "username2"]`: Only certain usernames are allowed. In this example only
	// _username1_ and _username2_ are allowed.
	Collaborators map[string]Ownership_AccessType `protobuf:"bytes,2,rep,name=collaborators" json:"collaborators,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=openstorage.api.Ownership_AccessType"`
	// Public access to resource may be assigned for access by the public userd
	Public               *Ownership_PublicAccessControl `protobuf:"bytes,3,opt,name=public" json:"public,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Ownership_AccessControl) Reset()         { *m = Ownership_AccessControl{} }
func (m *Ownership_AccessControl) String() string { return proto.CompactTextString(m) }
func (*Ownership_AccessControl) ProtoMessage()    {}
func (*Ownership_AccessControl) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{31, 1}
}
func (m *Ownership_AccessControl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ownership_AccessControl.Unmarshal(m, b)
}
func (m *Ownership_AccessControl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ownership_AccessControl.Marshal(b, m, deterministic)
}
func (dst *Ownership_AccessControl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ownership_AccessControl.Merge(dst, src)
}
func (m *Ownership_AccessControl) XXX_Size() int {
	return xxx_messageInfo_Ownership_AccessControl.Size(m)
}
func (m *Ownership_AccessControl) XXX_DiscardUnknown() {
	xxx_messageInfo_Ownership_AccessControl.DiscardUnknown(m)
}

var xxx_messageInfo_Ownership_AccessControl proto.InternalMessageInfo

func (m *Ownership_AccessControl) GetGroups() map[string]Ownership_AccessType {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *Ownership_AccessControl) GetCollaborators() map[string]Ownership_AccessType {
	if m != nil {
		return m.Collaborators
	}
	return nil
}

func (m *Ownership_AccessControl) GetPublic() *Ownership_PublicAccessControl {
	if m != nil {
		return m.Public
	}
	return nil
}

// Volume represents an abstract storage volume.
type Volume struct {
	// Self referential volume ID.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Source specified seed data for the volume.
	Source *Source `protobuf:"bytes,2,opt,name=source" json:"source,omitempty"`
	// Group volumes in the same group have the same group id.
	Group *Group `protobuf:"bytes,3,opt,name=group" json:"group,omitempty"`
	// Readonly is true if this volume is to be mounted with readonly access.
	Readonly bool `protobuf:"varint,4,opt,name=readonly" json:"readonly,omitempty"`
	// User specified locator
	Locator *VolumeLocator `protobuf:"bytes,5,opt,name=locator" json:"locator,omitempty"`
	// Volume creation time
	Ctime *timestamp.Timestamp `protobuf:"bytes,6,opt,name=ctime" json:"ctime,omitempty"`
	// User specified VolumeSpec
	Spec *VolumeSpec `protobuf:"bytes,7,opt,name=spec" json:"spec,omitempty"`
	// Usage is bytes consumed by this volume.
	Usage uint64 `protobuf:"varint,8,opt,name=usage" json:"usage,omitempty"`
	// LastScan is the time when an integrity check was run.
	LastScan *timestamp.Timestamp `protobuf:"bytes,9,opt,name=last_scan,json=lastScan" json:"last_scan,omitempty"`
	// Format specifies the filesytem for this volume.
	Format FSType `protobuf:"varint,10,opt,name=format,enum=openstorage.api.FSType" json:"format,omitempty"`
	// VolumeStatus is the availability status of this volume.
	Status VolumeStatus `protobuf:"varint,11,opt,name=status,enum=openstorage.api.VolumeStatus" json:"status,omitempty"`
	// VolumeState is the current runtime state of this volume.
	State VolumeState `protobuf:"varint,12,opt,name=state,enum=openstorage.api.VolumeState" json:"state,omitempty"`
	// AttachedOn is the node instance identifier for clustered systems.
	AttachedOn string `protobuf:"bytes,13,opt,name=attached_on,json=attachedOn" json:"attached_on,omitempty"`
	// AttachState shows whether the device is attached for internal or external use.
	AttachedState AttachState `protobuf:"varint,14,opt,name=attached_state,json=attachedState,enum=openstorage.api.AttachState" json:"attached_state,omitempty"`
	// DevicePath is the device exported by block device implementations.
	DevicePath string `protobuf:"bytes,15,opt,name=device_path,json=devicePath" json:"device_path,omitempty"`
	// SecureDevicePath is the device path for an encrypted volume.
	SecureDevicePath string `protobuf:"bytes,16,opt,name=secure_device_path,json=secureDevicePath" json:"secure_device_path,omitempty"`
	// AttachPath is the mounted path in the host namespace.
	AttachPath []string `protobuf:"bytes,17,rep,name=attach_path,json=attachPath" json:"attach_path,omitempty"`
	// AttachInfo is a list of name value mappings that provides attach information.
	AttachInfo map[string]string `protobuf:"bytes,18,rep,name=attach_info,json=attachInfo" json:"attach_info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// ReplicatSets storage for this volumefor clustered storage arrays.
	ReplicaSets []*ReplicaSet `protobuf:"bytes,19,rep,name=replica_sets,json=replicaSets" json:"replica_sets,omitempty"`
	// RuntimeState is a lst of name value mapping of driver specific runtime
	// information.
	RuntimeState []*RuntimeStateMap `protobuf:"bytes,20,rep,name=runtime_state,json=runtimeState" json:"runtime_state,omitempty"`
	// Error is the Last recorded error.
	Error string `protobuf:"bytes,21,opt,name=error" json:"error,omitempty"`
	// VolumeConsumers are entities that consume this volume
	VolumeConsumers []*VolumeConsumer `protobuf:"bytes,22,rep,name=volume_consumers,json=volumeConsumers" json:"volume_consumers,omitempty"`
	// FsResizeRequired if an FS resize is required on the volume.
	FsResizeRequired bool `protobuf:"varint,23,opt,name=fs_resize_required,json=fsResizeRequired" json:"fs_resize_required,omitempty"`
	// AttachTime time this device was last attached externally.
	AttachTime *timestamp.Timestamp `protobuf:"bytes,24,opt,name=attach_time,json=attachTime" json:"attach_time,omitempty"`
	// DetachTime time this device was detached.
	DetachTime *timestamp.Timestamp `protobuf:"bytes,25,opt,name=detach_time,json=detachTime" json:"detach_time,omitempty"`
	// Fastpath extensions
	FpConfig *FastpathConfig `protobuf:"bytes,26,opt,name=fpConfig" json:"fpConfig,omitempty"`
	// LastScanFix is the time when an integrity check fixed errors in filesystem
	LastScanFix *timestamp.Timestamp `protobuf:"bytes,27,opt,name=last_scan_fix,json=lastScanFix" json:"last_scan_fix,omitempty"`
	// LastScanStatus is the time when an integrity check fixed errors in filesystem
	LastScanStatus FilesystemHealthStatus `protobuf:"varint,28,opt,name=last_scan_status,json=lastScanStatus,enum=openstorage.api.FilesystemHealthStatus" json:"last_scan_status,omitempty"`
	// MountOptions are the runtime mount options that will be used while mounting this volume
	MountOptions *MountOptions `protobuf:"bytes,29,opt,name=mount_options,json=mountOptions" json:"mount_options,omitempty"`
	// Sharedv4MountOptions are the runtime mount options that will be used while mounting a sharedv4 volume
	// from a node where the volume replica does not exist
	Sharedv4MountOptions *MountOptions `protobuf:"bytes,30,opt,name=sharedv4_mount_options,json=sharedv4MountOptions" json:"sharedv4_mount_options,omitempty"`
	// DerivedIoProfile the IO profile determined from the pattern
	DerivedIoProfile IoProfile `protobuf:"varint,31,opt,name=derived_io_profile,json=derivedIoProfile,enum=openstorage.api.IoProfile" json:"derived_io_profile,omitempty"`
	// InTrashcan if the volume is in trashcan
	InTrashcan           bool     `protobuf:"varint,32,opt,name=in_trashcan,json=inTrashcan" json:"in_trashcan,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Volume) Reset()         { *m = Volume{} }
func (m *Volume) String() string { return proto.CompactTextString(m) }
func (*Volume) ProtoMessage()    {}
func (*Volume) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{32}
}
func (m *Volume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Volume.Unmarshal(m, b)
}
func (m *Volume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Volume.Marshal(b, m, deterministic)
}
func (dst *Volume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Volume.Merge(dst, src)
}
func (m *Volume) XXX_Size() int {
	return xxx_messageInfo_Volume.Size(m)
}
func (m *Volume) XXX_DiscardUnknown() {
	xxx_messageInfo_Volume.DiscardUnknown(m)
}

var xxx_messageInfo_Volume proto.InternalMessageInfo

func (m *Volume) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Volume) GetSource() *Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Volume) GetGroup() *Group {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *Volume) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

func (m *Volume) GetLocator() *VolumeLocator {
	if m != nil {
		return m.Locator
	}
	return nil
}

func (m *Volume) GetCtime() *timestamp.Timestamp {
	if m != nil {
		return m.Ctime
	}
	return nil
}

func (m *Volume) GetSpec() *VolumeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Volume) GetUsage() uint64 {
	if m != nil {
		return m.Usage
	}
	return 0
}

func (m *Volume) GetLastScan() *timestamp.Timestamp {
	if m != nil {
		return m.LastScan
	}
	return nil
}

func (m *Volume) GetFormat() FSType {
	if m != nil {
		return m.Format
	}
	return FSType_FS_TYPE_NONE
}

func (m *Volume) GetStatus() VolumeStatus {
	if m != nil {
		return m.Status
	}
	return VolumeStatus_VOLUME_STATUS_NONE
}

func (m *Volume) GetState() VolumeState {
	if m != nil {
		return m.State
	}
	return VolumeState_VOLUME_STATE_NONE
}

func (m *Volume) GetAttachedOn() string {
	if m != nil {
		return m.AttachedOn
	}
	return ""
}

func (m *Volume) GetAttachedState() AttachState {
	if m != nil {
		return m.AttachedState
	}
	return AttachState_ATTACH_STATE_EXTERNAL
}

func (m *Volume) GetDevicePath() string {
	if m != nil {
		return m.DevicePath
	}
	return ""
}

func (m *Volume) GetSecureDevicePath() string {
	if m != nil {
		return m.SecureDevicePath
	}
	return ""
}

func (m *Volume) GetAttachPath() []string {
	if m != nil {
		return m.AttachPath
	}
	return nil
}

func (m *Volume) GetAttachInfo() map[string]string {
	if m != nil {
		return m.AttachInfo
	}
	return nil
}

func (m *Volume) GetReplicaSets() []*ReplicaSet {
	if m != nil {
		return m.ReplicaSets
	}
	return nil
}

func (m *Volume) GetRuntimeState() []*RuntimeStateMap {
	if m != nil {
		return m.RuntimeState
	}
	return nil
}

func (m *Volume) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Volume) GetVolumeConsumers() []*VolumeConsumer {
	if m != nil {
		return m.VolumeConsumers
	}
	return nil
}

func (m *Volume) GetFsResizeRequired() bool {
	if m != nil {
		return m.FsResizeRequired
	}
	return false
}

func (m *Volume) GetAttachTime() *timestamp.Timestamp {
	if m != nil {
		return m.AttachTime
	}
	return nil
}

func (m *Volume) GetDetachTime() *timestamp.Timestamp {
	if m != nil {
		return m.DetachTime
	}
	return nil
}

func (m *Volume) GetFpConfig() *FastpathConfig {
	if m != nil {
		return m.FpConfig
	}
	return nil
}

func (m *Volume) GetLastScanFix() *timestamp.Timestamp {
	if m != nil {
		return m.LastScanFix
	}
	return nil
}

func (m *Volume) GetLastScanStatus() FilesystemHealthStatus {
	if m != nil {
		return m.LastScanStatus
	}
	return FilesystemHealthStatus_FS_HEALTH_STATUS_UNKNOWN
}

func (m *Volume) GetMountOptions() *MountOptions {
	if m != nil {
		return m.MountOptions
	}
	return nil
}

func (m *Volume) GetSharedv4MountOptions() *MountOptions {
	if m != nil {
		return m.Sharedv4MountOptions
	}
	return nil
}

func (m *Volume) GetDerivedIoProfile() IoProfile {
	if m != nil {
		return m.DerivedIoProfile
	}
	return IoProfile_IO_PROFILE_SEQUENTIAL
}

func (m *Volume) GetInTrashcan() bool {
	if m != nil {
		return m.InTrashcan
	}
	return false
}

// Stats is a structure that represents last collected stats for a volume
type Stats struct {
	// Reads completed successfully
	Reads uint64 `protobuf:"varint,1,opt,name=reads" json:"reads,omitempty"`
	// Time spent in reads in ms
	ReadMs uint64 `protobuf:"varint,2,opt,name=read_ms,json=readMs" json:"read_ms,omitempty"`
	// Number of bytes read
	ReadBytes uint64 `protobuf:"varint,3,opt,name=read_bytes,json=readBytes" json:"read_bytes,omitempty"`
	// Writes completed successfully
	Writes uint64 `protobuf:"varint,4,opt,name=writes" json:"writes,omitempty"`
	// Time spent in writes in ms
	WriteMs uint64 `protobuf:"varint,5,opt,name=write_ms,json=writeMs" json:"write_ms,omitempty"`
	// Number of bytes written
	WriteBytes uint64 `protobuf:"varint,6,opt,name=write_bytes,json=writeBytes" json:"write_bytes,omitempty"`
	// IOs curently in progress
	IoProgress uint64 `protobuf:"varint,7,opt,name=io_progress,json=ioProgress" json:"io_progress,omitempty"`
	// Time spent doing IOs ms
	IoMs uint64 `protobuf:"varint,8,opt,name=io_ms,json=ioMs" json:"io_ms,omitempty"`
	// BytesUsed
	BytesUsed uint64 `protobuf:"varint,9,opt,name=bytes_used,json=bytesUsed" json:"bytes_used,omitempty"`
	// Interval in ms during which stats were collected
	IntervalMs uint64 `protobuf:"varint,10,opt,name=interval_ms,json=intervalMs" json:"interval_ms,omitempty"`
	// Unique Blocks
	UniqueBlocks         uint64   `protobuf:"varint,14,opt,name=unique_blocks,json=uniqueBlocks" json:"unique_blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stats) Reset()         { *m = Stats{} }
func (m *Stats) String() string { return proto.CompactTextString(m) }
func (*Stats) ProtoMessage()    {}
func (*Stats) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{33}
}
func (m *Stats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stats.Unmarshal(m, b)
}
func (m *Stats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stats.Marshal(b, m, deterministic)
}
func (dst *Stats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stats.Merge(dst, src)
}
func (m *Stats) XXX_Size() int {
	return xxx_messageInfo_Stats.Size(m)
}
func (m *Stats) XXX_DiscardUnknown() {
	xxx_messageInfo_Stats.DiscardUnknown(m)
}

var xxx_messageInfo_Stats proto.InternalMessageInfo

func (m *Stats) GetReads() uint64 {
	if m != nil {
		return m.Reads
	}
	return 0
}

func (m *Stats) GetReadMs() uint64 {
	if m != nil {
		return m.ReadMs
	}
	return 0
}

func (m *Stats) GetReadBytes() uint64 {
	if m != nil {
		return m.ReadBytes
	}
	return 0
}

func (m *Stats) GetWrites() uint64 {
	if m != nil {
		return m.Writes
	}
	return 0
}

func (m *Stats) GetWriteMs() uint64 {
	if m != nil {
		return m.WriteMs
	}
	return 0
}

func (m *Stats) GetWriteBytes() uint64 {
	if m != nil {
		return m.WriteBytes
	}
	return 0
}

func (m *Stats) GetIoProgress() uint64 {
	if m != nil {
		return m.IoProgress
	}
	return 0
}

func (m *Stats) GetIoMs() uint64 {
	if m != nil {
		return m.IoMs
	}
	return 0
}

func (m *Stats) GetBytesUsed() uint64 {
	if m != nil {
		return m.BytesUsed
	}
	return 0
}

func (m *Stats) GetIntervalMs() uint64 {
	if m != nil {
		return m.IntervalMs
	}
	return 0
}

func (m *Stats) GetUniqueBlocks() uint64 {
	if m != nil {
		return m.UniqueBlocks
	}
	return 0
}

// Provides details on exclusive and shared storage used by
// snapshot/volume specifically for copy-on-write(COW) snapshots. Deletion
// of snapshots and overwirte of volume will affect the exclusive storage
// used by the other dependent snaps and parent volume.
type CapacityUsageInfo struct {
	// Storage consumed exclusively by this single snapshot. Deletion of this
	// snapshot may increase the free storage available by this amount.
	ExclusiveBytes int64 `protobuf:"varint,1,opt,name=exclusive_bytes,json=exclusiveBytes" json:"exclusive_bytes,omitempty"`
	// Storage consumed by this snapshot that is shared with parent and children
	SharedBytes int64 `protobuf:"varint,2,opt,name=shared_bytes,json=sharedBytes" json:"shared_bytes,omitempty"`
	// TotalBytes used by this volume
	TotalBytes           int64    `protobuf:"varint,3,opt,name=total_bytes,json=totalBytes" json:"total_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CapacityUsageInfo) Reset()         { *m = CapacityUsageInfo{} }
func (m *CapacityUsageInfo) String() string { return proto.CompactTextString(m) }
func (*CapacityUsageInfo) ProtoMessage()    {}
func (*CapacityUsageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{34}
}
func (m *CapacityUsageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapacityUsageInfo.Unmarshal(m, b)
}
func (m *CapacityUsageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapacityUsageInfo.Marshal(b, m, deterministic)
}
func (dst *CapacityUsageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapacityUsageInfo.Merge(dst, src)
}
func (m *CapacityUsageInfo) XXX_Size() int {
	return xxx_messageInfo_CapacityUsageInfo.Size(m)
}
func (m *CapacityUsageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CapacityUsageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CapacityUsageInfo proto.InternalMessageInfo

func (m *CapacityUsageInfo) GetExclusiveBytes() int64 {
	if m != nil {
		return m.ExclusiveBytes
	}
	return 0
}

func (m *CapacityUsageInfo) GetSharedBytes() int64 {
	if m != nil {
		return m.SharedBytes
	}
	return 0
}

func (m *CapacityUsageInfo) GetTotalBytes() int64 {
	if m != nil {
		return m.TotalBytes
	}
	return 0
}

// Provides volume's exclusive bytes and its total usage. This cannot be
// retrieved individually and is obtained as part node's usage for a given
// node.
type VolumeUsage struct {
	// id for the volume/snapshot
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// name of the volume/snapshot
	VolumeName string `protobuf:"bytes,2,opt,name=volume_name,json=volumeName" json:"volume_name,omitempty"`
	// uuid of the pool that this volume belongs to
	PoolUuid string `protobuf:"bytes,3,opt,name=pool_uuid,json=poolUuid" json:"pool_uuid,omitempty"`
	// size in bytes exclusively used by the volume/snapshot
	ExclusiveBytes uint64 `protobuf:"varint,4,opt,name=exclusive_bytes,json=exclusiveBytes" json:"exclusive_bytes,omitempty"`
	//  size in bytes by the volume/snapshot
	TotalBytes uint64 `protobuf:"varint,5,opt,name=total_bytes,json=totalBytes" json:"total_bytes,omitempty"`
	// set to true if this volume is snapshot created by cloudbackups
	LocalCloudSnapshot   bool     `protobuf:"varint,6,opt,name=local_cloud_snapshot,json=localCloudSnapshot" json:"local_cloud_snapshot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeUsage) Reset()         { *m = VolumeUsage{} }
func (m *VolumeUsage) String() string { return proto.CompactTextString(m) }
func (*VolumeUsage) ProtoMessage()    {}
func (*VolumeUsage) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{35}
}
func (m *VolumeUsage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeUsage.Unmarshal(m, b)
}
func (m *VolumeUsage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeUsage.Marshal(b, m, deterministic)
}
func (dst *VolumeUsage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeUsage.Merge(dst, src)
}
func (m *VolumeUsage) XXX_Size() int {
	return xxx_messageInfo_VolumeUsage.Size(m)
}
func (m *VolumeUsage) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeUsage.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeUsage proto.InternalMessageInfo

func (m *VolumeUsage) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *VolumeUsage) GetVolumeName() string {
	if m != nil {
		return m.VolumeName
	}
	return ""
}

func (m *VolumeUsage) GetPoolUuid() string {
	if m != nil {
		return m.PoolUuid
	}
	return ""
}

func (m *VolumeUsage) GetExclusiveBytes() uint64 {
	if m != nil {
		return m.ExclusiveBytes
	}
	return 0
}

func (m *VolumeUsage) GetTotalBytes() uint64 {
	if m != nil {
		return m.TotalBytes
	}
	return 0
}

func (m *VolumeUsage) GetLocalCloudSnapshot() bool {
	if m != nil {
		return m.LocalCloudSnapshot
	}
	return false
}

// Provides capacity usage of a node in terms of volumes. Returns VolumeUsage for
// all the volume/snapshot(s) in the node.
type VolumeUsageByNode struct {
	// VolumeUsage returns list of VolumeUsage for given node
	VolumeUsage          []*VolumeUsage `protobuf:"bytes,1,rep,name=volume_usage,json=volumeUsage" json:"volume_usage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *VolumeUsageByNode) Reset()         { *m = VolumeUsageByNode{} }
func (m *VolumeUsageByNode) String() string { return proto.CompactTextString(m) }
func (*VolumeUsageByNode) ProtoMessage()    {}
func (*VolumeUsageByNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{36}
}
func (m *VolumeUsageByNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeUsageByNode.Unmarshal(m, b)
}
func (m *VolumeUsageByNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeUsageByNode.Marshal(b, m, deterministic)
}
func (dst *VolumeUsageByNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeUsageByNode.Merge(dst, src)
}
func (m *VolumeUsageByNode) XXX_Size() int {
	return xxx_messageInfo_VolumeUsageByNode.Size(m)
}
func (m *VolumeUsageByNode) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeUsageByNode.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeUsageByNode proto.InternalMessageInfo

func (m *VolumeUsageByNode) GetVolumeUsage() []*VolumeUsage {
	if m != nil {
		return m.VolumeUsage
	}
	return nil
}

// VolumeBytesUsed defines volume utilization
type VolumeBytesUsed struct {
	// id for the volume/snapshot
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	//  size in bytes by the volume/snapshot
	TotalBytes           uint64   `protobuf:"varint,2,opt,name=total_bytes,json=totalBytes" json:"total_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeBytesUsed) Reset()         { *m = VolumeBytesUsed{} }
func (m *VolumeBytesUsed) String() string { return proto.CompactTextString(m) }
func (*VolumeBytesUsed) ProtoMessage()    {}
func (*VolumeBytesUsed) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{37}
}
func (m *VolumeBytesUsed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeBytesUsed.Unmarshal(m, b)
}
func (m *VolumeBytesUsed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeBytesUsed.Marshal(b, m, deterministic)
}
func (dst *VolumeBytesUsed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeBytesUsed.Merge(dst, src)
}
func (m *VolumeBytesUsed) XXX_Size() int {
	return xxx_messageInfo_VolumeBytesUsed.Size(m)
}
func (m *VolumeBytesUsed) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeBytesUsed.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeBytesUsed proto.InternalMessageInfo

func (m *VolumeBytesUsed) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *VolumeBytesUsed) GetTotalBytes() uint64 {
	if m != nil {
		return m.TotalBytes
	}
	return 0
}

// VolumeBytesUsedByNode defines volume utilization for multiple volumes in a given node
type VolumeBytesUsedByNode struct {
	// machine uuid
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	// VolumeBytesUsed for each requested volume on the given node
	VolUsage             []*VolumeBytesUsed `protobuf:"bytes,2,rep,name=vol_usage,json=volUsage" json:"vol_usage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *VolumeBytesUsedByNode) Reset()         { *m = VolumeBytesUsedByNode{} }
func (m *VolumeBytesUsedByNode) String() string { return proto.CompactTextString(m) }
func (*VolumeBytesUsedByNode) ProtoMessage()    {}
func (*VolumeBytesUsedByNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{38}
}
func (m *VolumeBytesUsedByNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeBytesUsedByNode.Unmarshal(m, b)
}
func (m *VolumeBytesUsedByNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeBytesUsedByNode.Marshal(b, m, deterministic)
}
func (dst *VolumeBytesUsedByNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeBytesUsedByNode.Merge(dst, src)
}
func (m *VolumeBytesUsedByNode) XXX_Size() int {
	return xxx_messageInfo_VolumeBytesUsedByNode.Size(m)
}
func (m *VolumeBytesUsedByNode) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeBytesUsedByNode.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeBytesUsedByNode proto.InternalMessageInfo

func (m *VolumeBytesUsedByNode) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *VolumeBytesUsedByNode) GetVolUsage() []*VolumeBytesUsed {
	if m != nil {
		return m.VolUsage
	}
	return nil
}

// FstrimVolUsageInfo
type FstrimVolumeUsageInfo struct {
	// Volume name
	VolumeName string `protobuf:"bytes,1,opt,name=volume_name,json=volumeName" json:"volume_name,omitempty"`
	// Volume size
	VolumeSize uint64 `protobuf:"varint,2,opt,name=volume_size,json=volumeSize" json:"volume_size,omitempty"`
	// Disk usage in bytes
	DuUsage uint64 `protobuf:"varint,3,opt,name=du_usage,json=duUsage" json:"du_usage,omitempty"`
	// Disk usage seen in Portworx in bytes
	PxUsage uint64 `protobuf:"varint,4,opt,name=px_usage,json=pxUsage" json:"px_usage,omitempty"`
	// If auto fstrim is performed to the volume, if not, why
	PerformAutoFstrim    string   `protobuf:"bytes,5,opt,name=perform_auto_fstrim,json=performAutoFstrim" json:"perform_auto_fstrim,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FstrimVolumeUsageInfo) Reset()         { *m = FstrimVolumeUsageInfo{} }
func (m *FstrimVolumeUsageInfo) String() string { return proto.CompactTextString(m) }
func (*FstrimVolumeUsageInfo) ProtoMessage()    {}
func (*FstrimVolumeUsageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{39}
}
func (m *FstrimVolumeUsageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FstrimVolumeUsageInfo.Unmarshal(m, b)
}
func (m *FstrimVolumeUsageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FstrimVolumeUsageInfo.Marshal(b, m, deterministic)
}
func (dst *FstrimVolumeUsageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FstrimVolumeUsageInfo.Merge(dst, src)
}
func (m *FstrimVolumeUsageInfo) XXX_Size() int {
	return xxx_messageInfo_FstrimVolumeUsageInfo.Size(m)
}
func (m *FstrimVolumeUsageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FstrimVolumeUsageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FstrimVolumeUsageInfo proto.InternalMessageInfo

func (m *FstrimVolumeUsageInfo) GetVolumeName() string {
	if m != nil {
		return m.VolumeName
	}
	return ""
}

func (m *FstrimVolumeUsageInfo) GetVolumeSize() uint64 {
	if m != nil {
		return m.VolumeSize
	}
	return 0
}

func (m *FstrimVolumeUsageInfo) GetDuUsage() uint64 {
	if m != nil {
		return m.DuUsage
	}
	return 0
}

func (m *FstrimVolumeUsageInfo) GetPxUsage() uint64 {
	if m != nil {
		return m.PxUsage
	}
	return 0
}

func (m *FstrimVolumeUsageInfo) GetPerformAutoFstrim() string {
	if m != nil {
		return m.PerformAutoFstrim
	}
	return ""
}

// Purges the RelaxedReclaim queue
type RelaxedReclaimPurge struct {
	// num_purged returns number of volumes purged
	NumPurged            uint64   `protobuf:"varint,1,opt,name=num_purged,json=numPurged" json:"num_purged,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RelaxedReclaimPurge) Reset()         { *m = RelaxedReclaimPurge{} }
func (m *RelaxedReclaimPurge) String() string { return proto.CompactTextString(m) }
func (*RelaxedReclaimPurge) ProtoMessage()    {}
func (*RelaxedReclaimPurge) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{40}
}
func (m *RelaxedReclaimPurge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelaxedReclaimPurge.Unmarshal(m, b)
}
func (m *RelaxedReclaimPurge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelaxedReclaimPurge.Marshal(b, m, deterministic)
}
func (dst *RelaxedReclaimPurge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelaxedReclaimPurge.Merge(dst, src)
}
func (m *RelaxedReclaimPurge) XXX_Size() int {
	return xxx_messageInfo_RelaxedReclaimPurge.Size(m)
}
func (m *RelaxedReclaimPurge) XXX_DiscardUnknown() {
	xxx_messageInfo_RelaxedReclaimPurge.DiscardUnknown(m)
}

var xxx_messageInfo_RelaxedReclaimPurge proto.InternalMessageInfo

func (m *RelaxedReclaimPurge) GetNumPurged() uint64 {
	if m != nil {
		return m.NumPurged
	}
	return 0
}

// A SdkStoragePolicy represents minimum set of volume specs to be
// follow while creating volumes.
// If storage policy is set default in OpenStoragePolicy service, VolumeSpecPolicy will be
// used before creating volume to validate volume specs or ensure minimum volume creation
// rules followed
type SdkStoragePolicy struct {
	// Name of storage policy.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// VolumeSpecs to apply while creating volume.
	Policy *VolumeSpecPolicy `protobuf:"bytes,2,opt,name=policy" json:"policy,omitempty"`
	// Force if set to true volume specs will be overwritten, otherwise
	// volume creation will fail if the volume specifications are not inline with storage policy
	Force bool `protobuf:"varint,3,opt,name=force" json:"force,omitempty"`
	// If set a volume can be updated without storage Policy
	// restriction, otherwise volume update will be followed as per storage policy
	// specification
	AllowUpdate bool `protobuf:"varint,4,opt,name=allow_update,json=allowUpdate" json:"allow_update,omitempty"`
	// Owner info of storage policy
	Ownership            *Ownership `protobuf:"bytes,5,opt,name=ownership" json:"ownership,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SdkStoragePolicy) Reset()         { *m = SdkStoragePolicy{} }
func (m *SdkStoragePolicy) String() string { return proto.CompactTextString(m) }
func (*SdkStoragePolicy) ProtoMessage()    {}
func (*SdkStoragePolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{41}
}
func (m *SdkStoragePolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkStoragePolicy.Unmarshal(m, b)
}
func (m *SdkStoragePolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkStoragePolicy.Marshal(b, m, deterministic)
}
func (dst *SdkStoragePolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkStoragePolicy.Merge(dst, src)
}
func (m *SdkStoragePolicy) XXX_Size() int {
	return xxx_messageInfo_SdkStoragePolicy.Size(m)
}
func (m *SdkStoragePolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkStoragePolicy.DiscardUnknown(m)
}

var xxx_messageInfo_SdkStoragePolicy proto.InternalMessageInfo

func (m *SdkStoragePolicy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SdkStoragePolicy) GetPolicy() *VolumeSpecPolicy {
	if m != nil {
		return m.Policy
	}
	return nil
}

func (m *SdkStoragePolicy) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *SdkStoragePolicy) GetAllowUpdate() bool {
	if m != nil {
		return m.AllowUpdate
	}
	return false
}

func (m *SdkStoragePolicy) GetOwnership() *Ownership {
	if m != nil {
		return m.Ownership
	}
	return nil
}

// Alert is a structure that represents an alert object
type Alert struct {
	// Id for Alert
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Severity of the Alert
	Severity SeverityType `protobuf:"varint,2,opt,name=severity,enum=openstorage.api.SeverityType" json:"severity,omitempty"`
	// AlertType user defined alert type
	AlertType int64 `protobuf:"varint,3,opt,name=alert_type,json=alertType" json:"alert_type,omitempty"`
	// Message describing the Alert
	Message string `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	// Timestamp when Alert occured
	Timestamp *timestamp.Timestamp `protobuf:"bytes,5,opt,name=timestamp" json:"timestamp,omitempty"`
	// ResourceId where Alert occured
	ResourceId string `protobuf:"bytes,6,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	// Resource where Alert occured
	Resource ResourceType `protobuf:"varint,7,opt,name=resource,enum=openstorage.api.ResourceType" json:"resource,omitempty"`
	// Cleared Flag
	Cleared bool `protobuf:"varint,8,opt,name=cleared" json:"cleared,omitempty"`
	// Time-to-live in seconds for this Alert
	Ttl uint64 `protobuf:"varint,9,opt,name=ttl" json:"ttl,omitempty"`
	// UniqueTag helps identify a unique alert for a given resouce
	UniqueTag string `protobuf:"bytes,10,opt,name=unique_tag,json=uniqueTag" json:"unique_tag,omitempty"`
	// Count of such alerts raised so far.
	Count int64 `protobuf:"varint,11,opt,name=count" json:"count,omitempty"`
	// Timestamp when such alert was raised the very first time.
	FirstSeen            *timestamp.Timestamp `protobuf:"bytes,12,opt,name=first_seen,json=firstSeen" json:"first_seen,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Alert) Reset()         { *m = Alert{} }
func (m *Alert) String() string { return proto.CompactTextString(m) }
func (*Alert) ProtoMessage()    {}
func (*Alert) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{42}
}
func (m *Alert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Alert.Unmarshal(m, b)
}
func (m *Alert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Alert.Marshal(b, m, deterministic)
}
func (dst *Alert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Alert.Merge(dst, src)
}
func (m *Alert) XXX_Size() int {
	return xxx_messageInfo_Alert.Size(m)
}
func (m *Alert) XXX_DiscardUnknown() {
	xxx_messageInfo_Alert.DiscardUnknown(m)
}

var xxx_messageInfo_Alert proto.InternalMessageInfo

func (m *Alert) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Alert) GetSeverity() SeverityType {
	if m != nil {
		return m.Severity
	}
	return SeverityType_SEVERITY_TYPE_NONE
}

func (m *Alert) GetAlertType() int64 {
	if m != nil {
		return m.AlertType
	}
	return 0
}

func (m *Alert) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Alert) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Alert) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *Alert) GetResource() ResourceType {
	if m != nil {
		return m.Resource
	}
	return ResourceType_RESOURCE_TYPE_NONE
}

func (m *Alert) GetCleared() bool {
	if m != nil {
		return m.Cleared
	}
	return false
}

func (m *Alert) GetTtl() uint64 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *Alert) GetUniqueTag() string {
	if m != nil {
		return m.UniqueTag
	}
	return ""
}

func (m *Alert) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Alert) GetFirstSeen() *timestamp.Timestamp {
	if m != nil {
		return m.FirstSeen
	}
	return nil
}

// SdkAlertsTimeSpan to store time window information.
type SdkAlertsTimeSpan struct {
	// Start timestamp when Alert occured
	StartTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	// End timestamp when Alert occured
	EndTime              *timestamp.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SdkAlertsTimeSpan) Reset()         { *m = SdkAlertsTimeSpan{} }
func (m *SdkAlertsTimeSpan) String() string { return proto.CompactTextString(m) }
func (*SdkAlertsTimeSpan) ProtoMessage()    {}
func (*SdkAlertsTimeSpan) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{43}
}
func (m *SdkAlertsTimeSpan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkAlertsTimeSpan.Unmarshal(m, b)
}
func (m *SdkAlertsTimeSpan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkAlertsTimeSpan.Marshal(b, m, deterministic)
}
func (dst *SdkAlertsTimeSpan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkAlertsTimeSpan.Merge(dst, src)
}
func (m *SdkAlertsTimeSpan) XXX_Size() int {
	return xxx_messageInfo_SdkAlertsTimeSpan.Size(m)
}
func (m *SdkAlertsTimeSpan) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkAlertsTimeSpan.DiscardUnknown(m)
}

var xxx_messageInfo_SdkAlertsTimeSpan proto.InternalMessageInfo

func (m *SdkAlertsTimeSpan) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *SdkAlertsTimeSpan) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

// SdkAlertsCountSpan to store count range information.
type SdkAlertsCountSpan struct {
	// Min count of such alerts raised so far.
	MinCount int64 `protobuf:"varint,1,opt,name=min_count,json=minCount" json:"min_count,omitempty"`
	// Max count of such alerts raised so far.
	MaxCount             int64    `protobuf:"varint,2,opt,name=max_count,json=maxCount" json:"max_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkAlertsCountSpan) Reset()         { *m = SdkAlertsCountSpan{} }
func (m *SdkAlertsCountSpan) String() string { return proto.CompactTextString(m) }
func (*SdkAlertsCountSpan) ProtoMessage()    {}
func (*SdkAlertsCountSpan) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{44}
}
func (m *SdkAlertsCountSpan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkAlertsCountSpan.Unmarshal(m, b)
}
func (m *SdkAlertsCountSpan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkAlertsCountSpan.Marshal(b, m, deterministic)
}
func (dst *SdkAlertsCountSpan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkAlertsCountSpan.Merge(dst, src)
}
func (m *SdkAlertsCountSpan) XXX_Size() int {
	return xxx_messageInfo_SdkAlertsCountSpan.Size(m)
}
func (m *SdkAlertsCountSpan) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkAlertsCountSpan.DiscardUnknown(m)
}

var xxx_messageInfo_SdkAlertsCountSpan proto.InternalMessageInfo

func (m *SdkAlertsCountSpan) GetMinCount() int64 {
	if m != nil {
		return m.MinCount
	}
	return 0
}

func (m *SdkAlertsCountSpan) GetMaxCount() int64 {
	if m != nil {
		return m.MaxCount
	}
	return 0
}

// SdkAlertsOption contains options for filtering alerts.
type SdkAlertsOption struct {
	// Types that are valid to be assigned to Opt:
	//	*SdkAlertsOption_MinSeverityType
	//	*SdkAlertsOption_IsCleared
	//	*SdkAlertsOption_TimeSpan
	//	*SdkAlertsOption_CountSpan
	Opt                  isSdkAlertsOption_Opt `protobuf_oneof:"opt"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SdkAlertsOption) Reset()         { *m = SdkAlertsOption{} }
func (m *SdkAlertsOption) String() string { return proto.CompactTextString(m) }
func (*SdkAlertsOption) ProtoMessage()    {}
func (*SdkAlertsOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{45}
}
func (m *SdkAlertsOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkAlertsOption.Unmarshal(m, b)
}
func (m *SdkAlertsOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkAlertsOption.Marshal(b, m, deterministic)
}
func (dst *SdkAlertsOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkAlertsOption.Merge(dst, src)
}
func (m *SdkAlertsOption) XXX_Size() int {
	return xxx_messageInfo_SdkAlertsOption.Size(m)
}
func (m *SdkAlertsOption) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkAlertsOption.DiscardUnknown(m)
}

var xxx_messageInfo_SdkAlertsOption proto.InternalMessageInfo

type isSdkAlertsOption_Opt interface {
	isSdkAlertsOption_Opt()
}

type SdkAlertsOption_MinSeverityType struct {
	MinSeverityType SeverityType `protobuf:"varint,1,opt,name=min_severity_type,json=minSeverityType,enum=openstorage.api.SeverityType,oneof"`
}
type SdkAlertsOption_IsCleared struct {
	IsCleared bool `protobuf:"varint,2,opt,name=is_cleared,json=isCleared,oneof"`
}
type SdkAlertsOption_TimeSpan struct {
	TimeSpan *SdkAlertsTimeSpan `protobuf:"bytes,3,opt,name=time_span,json=timeSpan,oneof"`
}
type SdkAlertsOption_CountSpan struct {
	CountSpan *SdkAlertsCountSpan `protobuf:"bytes,4,opt,name=count_span,json=countSpan,oneof"`
}

func (*SdkAlertsOption_MinSeverityType) isSdkAlertsOption_Opt() {}
func (*SdkAlertsOption_IsCleared) isSdkAlertsOption_Opt()       {}
func (*SdkAlertsOption_TimeSpan) isSdkAlertsOption_Opt()        {}
func (*SdkAlertsOption_CountSpan) isSdkAlertsOption_Opt()       {}

func (m *SdkAlertsOption) GetOpt() isSdkAlertsOption_Opt {
	if m != nil {
		return m.Opt
	}
	return nil
}

func (m *SdkAlertsOption) GetMinSeverityType() SeverityType {
	if x, ok := m.GetOpt().(*SdkAlertsOption_MinSeverityType); ok {
		return x.MinSeverityType
	}
	return SeverityType_SEVERITY_TYPE_NONE
}

func (m *SdkAlertsOption) GetIsCleared() bool {
	if x, ok := m.GetOpt().(*SdkAlertsOption_IsCleared); ok {
		return x.IsCleared
	}
	return false
}

func (m *SdkAlertsOption) GetTimeSpan() *SdkAlertsTimeSpan {
	if x, ok := m.GetOpt().(*SdkAlertsOption_TimeSpan); ok {
		return x.TimeSpan
	}
	return nil
}

func (m *SdkAlertsOption) GetCountSpan() *SdkAlertsCountSpan {
	if x, ok := m.GetOpt().(*SdkAlertsOption_CountSpan); ok {
		return x.CountSpan
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SdkAlertsOption) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SdkAlertsOption_OneofMarshaler, _SdkAlertsOption_OneofUnmarshaler, _SdkAlertsOption_OneofSizer, []interface{}{
		(*SdkAlertsOption_MinSeverityType)(nil),
		(*SdkAlertsOption_IsCleared)(nil),
		(*SdkAlertsOption_TimeSpan)(nil),
		(*SdkAlertsOption_CountSpan)(nil),
	}
}

func _SdkAlertsOption_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SdkAlertsOption)
	// opt
	switch x := m.Opt.(type) {
	case *SdkAlertsOption_MinSeverityType:
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.MinSeverityType))
	case *SdkAlertsOption_IsCleared:
		t := uint64(0)
		if x.IsCleared {
			t = 1
		}
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *SdkAlertsOption_TimeSpan:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TimeSpan); err != nil {
			return err
		}
	case *SdkAlertsOption_CountSpan:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CountSpan); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SdkAlertsOption.Opt has unexpected type %T", x)
	}
	return nil
}

func _SdkAlertsOption_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SdkAlertsOption)
	switch tag {
	case 1: // opt.min_severity_type
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Opt = &SdkAlertsOption_MinSeverityType{SeverityType(x)}
		return true, err
	case 2: // opt.is_cleared
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Opt = &SdkAlertsOption_IsCleared{x != 0}
		return true, err
	case 3: // opt.time_span
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkAlertsTimeSpan)
		err := b.DecodeMessage(msg)
		m.Opt = &SdkAlertsOption_TimeSpan{msg}
		return true, err
	case 4: // opt.count_span
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkAlertsCountSpan)
		err := b.DecodeMessage(msg)
		m.Opt = &SdkAlertsOption_CountSpan{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SdkAlertsOption_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SdkAlertsOption)
	// opt
	switch x := m.Opt.(type) {
	case *SdkAlertsOption_MinSeverityType:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.MinSeverityType))
	case *SdkAlertsOption_IsCleared:
		n += 1 // tag and wire
		n += 1
	case *SdkAlertsOption_TimeSpan:
		s := proto.Size(x.TimeSpan)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SdkAlertsOption_CountSpan:
		s := proto.Size(x.CountSpan)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// SdkAlertsResourceTypeQuery queries for alerts using only resource id.
type SdkAlertsResourceTypeQuery struct {
	// Resource type used to build query.
	ResourceType         ResourceType `protobuf:"varint,1,opt,name=resource_type,json=resourceType,enum=openstorage.api.ResourceType" json:"resource_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SdkAlertsResourceTypeQuery) Reset()         { *m = SdkAlertsResourceTypeQuery{} }
func (m *SdkAlertsResourceTypeQuery) String() string { return proto.CompactTextString(m) }
func (*SdkAlertsResourceTypeQuery) ProtoMessage()    {}
func (*SdkAlertsResourceTypeQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{46}
}
func (m *SdkAlertsResourceTypeQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkAlertsResourceTypeQuery.Unmarshal(m, b)
}
func (m *SdkAlertsResourceTypeQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkAlertsResourceTypeQuery.Marshal(b, m, deterministic)
}
func (dst *SdkAlertsResourceTypeQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkAlertsResourceTypeQuery.Merge(dst, src)
}
func (m *SdkAlertsResourceTypeQuery) XXX_Size() int {
	return xxx_messageInfo_SdkAlertsResourceTypeQuery.Size(m)
}
func (m *SdkAlertsResourceTypeQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkAlertsResourceTypeQuery.DiscardUnknown(m)
}

var xxx_messageInfo_SdkAlertsResourceTypeQuery proto.InternalMessageInfo

func (m *SdkAlertsResourceTypeQuery) GetResourceType() ResourceType {
	if m != nil {
		return m.ResourceType
	}
	return ResourceType_RESOURCE_TYPE_NONE
}

// SdkAlertsAlertTypeQuery queries for alerts using alert type
// and it requires that resource type be provided as well.
type SdkAlertsAlertTypeQuery struct {
	// Resource type used to build query.
	ResourceType ResourceType `protobuf:"varint,1,opt,name=resource_type,json=resourceType,enum=openstorage.api.ResourceType" json:"resource_type,omitempty"`
	// Alert type used to build query.
	AlertType            int64    `protobuf:"varint,2,opt,name=alert_type,json=alertType" json:"alert_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkAlertsAlertTypeQuery) Reset()         { *m = SdkAlertsAlertTypeQuery{} }
func (m *SdkAlertsAlertTypeQuery) String() string { return proto.CompactTextString(m) }
func (*SdkAlertsAlertTypeQuery) ProtoMessage()    {}
func (*SdkAlertsAlertTypeQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{47}
}
func (m *SdkAlertsAlertTypeQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkAlertsAlertTypeQuery.Unmarshal(m, b)
}
func (m *SdkAlertsAlertTypeQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkAlertsAlertTypeQuery.Marshal(b, m, deterministic)
}
func (dst *SdkAlertsAlertTypeQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkAlertsAlertTypeQuery.Merge(dst, src)
}
func (m *SdkAlertsAlertTypeQuery) XXX_Size() int {
	return xxx_messageInfo_SdkAlertsAlertTypeQuery.Size(m)
}
func (m *SdkAlertsAlertTypeQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkAlertsAlertTypeQuery.DiscardUnknown(m)
}

var xxx_messageInfo_SdkAlertsAlertTypeQuery proto.InternalMessageInfo

func (m *SdkAlertsAlertTypeQuery) GetResourceType() ResourceType {
	if m != nil {
		return m.ResourceType
	}
	return ResourceType_RESOURCE_TYPE_NONE
}

func (m *SdkAlertsAlertTypeQuery) GetAlertType() int64 {
	if m != nil {
		return m.AlertType
	}
	return 0
}

// SdkAlertsResourceIdQuery queries for alerts using resource id
// and it requires that both alert type and resource type be provided
// as well.
type SdkAlertsResourceIdQuery struct {
	// Resource type used to build query.
	ResourceType ResourceType `protobuf:"varint,1,opt,name=resource_type,json=resourceType,enum=openstorage.api.ResourceType" json:"resource_type,omitempty"`
	// Alert type used to build query.
	AlertType int64 `protobuf:"varint,2,opt,name=alert_type,json=alertType" json:"alert_type,omitempty"`
	// Resource ID used to build query.
	ResourceId           string   `protobuf:"bytes,3,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkAlertsResourceIdQuery) Reset()         { *m = SdkAlertsResourceIdQuery{} }
func (m *SdkAlertsResourceIdQuery) String() string { return proto.CompactTextString(m) }
func (*SdkAlertsResourceIdQuery) ProtoMessage()    {}
func (*SdkAlertsResourceIdQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{48}
}
func (m *SdkAlertsResourceIdQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkAlertsResourceIdQuery.Unmarshal(m, b)
}
func (m *SdkAlertsResourceIdQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkAlertsResourceIdQuery.Marshal(b, m, deterministic)
}
func (dst *SdkAlertsResourceIdQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkAlertsResourceIdQuery.Merge(dst, src)
}
func (m *SdkAlertsResourceIdQuery) XXX_Size() int {
	return xxx_messageInfo_SdkAlertsResourceIdQuery.Size(m)
}
func (m *SdkAlertsResourceIdQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkAlertsResourceIdQuery.DiscardUnknown(m)
}

var xxx_messageInfo_SdkAlertsResourceIdQuery proto.InternalMessageInfo

func (m *SdkAlertsResourceIdQuery) GetResourceType() ResourceType {
	if m != nil {
		return m.ResourceType
	}
	return ResourceType_RESOURCE_TYPE_NONE
}

func (m *SdkAlertsResourceIdQuery) GetAlertType() int64 {
	if m != nil {
		return m.AlertType
	}
	return 0
}

func (m *SdkAlertsResourceIdQuery) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

// SdkAlertsQuery is one of the query types and a list of options.
// Each query object is one of the three query types and a list of
// options.
type SdkAlertsQuery struct {
	// One of the query types can be used to build SdkAlertsQuery.
	//
	// Types that are valid to be assigned to Query:
	//	*SdkAlertsQuery_ResourceTypeQuery
	//	*SdkAlertsQuery_AlertTypeQuery
	//	*SdkAlertsQuery_ResourceIdQuery
	Query isSdkAlertsQuery_Query `protobuf_oneof:"query"`
	// Opts is a list of options associated with one of the queries.
	Opts                 []*SdkAlertsOption `protobuf:"bytes,4,rep,name=opts" json:"opts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SdkAlertsQuery) Reset()         { *m = SdkAlertsQuery{} }
func (m *SdkAlertsQuery) String() string { return proto.CompactTextString(m) }
func (*SdkAlertsQuery) ProtoMessage()    {}
func (*SdkAlertsQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{49}
}
func (m *SdkAlertsQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkAlertsQuery.Unmarshal(m, b)
}
func (m *SdkAlertsQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkAlertsQuery.Marshal(b, m, deterministic)
}
func (dst *SdkAlertsQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkAlertsQuery.Merge(dst, src)
}
func (m *SdkAlertsQuery) XXX_Size() int {
	return xxx_messageInfo_SdkAlertsQuery.Size(m)
}
func (m *SdkAlertsQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkAlertsQuery.DiscardUnknown(m)
}

var xxx_messageInfo_SdkAlertsQuery proto.InternalMessageInfo

type isSdkAlertsQuery_Query interface {
	isSdkAlertsQuery_Query()
}

type SdkAlertsQuery_ResourceTypeQuery struct {
	ResourceTypeQuery *SdkAlertsResourceTypeQuery `protobuf:"bytes,1,opt,name=resource_type_query,json=resourceTypeQuery,oneof"`
}
type SdkAlertsQuery_AlertTypeQuery struct {
	AlertTypeQuery *SdkAlertsAlertTypeQuery `protobuf:"bytes,2,opt,name=alert_type_query,json=alertTypeQuery,oneof"`
}
type SdkAlertsQuery_ResourceIdQuery struct {
	ResourceIdQuery *SdkAlertsResourceIdQuery `protobuf:"bytes,3,opt,name=resource_id_query,json=resourceIdQuery,oneof"`
}

func (*SdkAlertsQuery_ResourceTypeQuery) isSdkAlertsQuery_Query() {}
func (*SdkAlertsQuery_AlertTypeQuery) isSdkAlertsQuery_Query()    {}
func (*SdkAlertsQuery_ResourceIdQuery) isSdkAlertsQuery_Query()   {}

func (m *SdkAlertsQuery) GetQuery() isSdkAlertsQuery_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *SdkAlertsQuery) GetResourceTypeQuery() *SdkAlertsResourceTypeQuery {
	if x, ok := m.GetQuery().(*SdkAlertsQuery_ResourceTypeQuery); ok {
		return x.ResourceTypeQuery
	}
	return nil
}

func (m *SdkAlertsQuery) GetAlertTypeQuery() *SdkAlertsAlertTypeQuery {
	if x, ok := m.GetQuery().(*SdkAlertsQuery_AlertTypeQuery); ok {
		return x.AlertTypeQuery
	}
	return nil
}

func (m *SdkAlertsQuery) GetResourceIdQuery() *SdkAlertsResourceIdQuery {
	if x, ok := m.GetQuery().(*SdkAlertsQuery_ResourceIdQuery); ok {
		return x.ResourceIdQuery
	}
	return nil
}

func (m *SdkAlertsQuery) GetOpts() []*SdkAlertsOption {
	if m != nil {
		return m.Opts
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SdkAlertsQuery) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SdkAlertsQuery_OneofMarshaler, _SdkAlertsQuery_OneofUnmarshaler, _SdkAlertsQuery_OneofSizer, []interface{}{
		(*SdkAlertsQuery_ResourceTypeQuery)(nil),
		(*SdkAlertsQuery_AlertTypeQuery)(nil),
		(*SdkAlertsQuery_ResourceIdQuery)(nil),
	}
}

func _SdkAlertsQuery_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SdkAlertsQuery)
	// query
	switch x := m.Query.(type) {
	case *SdkAlertsQuery_ResourceTypeQuery:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ResourceTypeQuery); err != nil {
			return err
		}
	case *SdkAlertsQuery_AlertTypeQuery:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AlertTypeQuery); err != nil {
			return err
		}
	case *SdkAlertsQuery_ResourceIdQuery:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ResourceIdQuery); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SdkAlertsQuery.Query has unexpected type %T", x)
	}
	return nil
}

func _SdkAlertsQuery_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SdkAlertsQuery)
	switch tag {
	case 1: // query.resource_type_query
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkAlertsResourceTypeQuery)
		err := b.DecodeMessage(msg)
		m.Query = &SdkAlertsQuery_ResourceTypeQuery{msg}
		return true, err
	case 2: // query.alert_type_query
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkAlertsAlertTypeQuery)
		err := b.DecodeMessage(msg)
		m.Query = &SdkAlertsQuery_AlertTypeQuery{msg}
		return true, err
	case 3: // query.resource_id_query
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkAlertsResourceIdQuery)
		err := b.DecodeMessage(msg)
		m.Query = &SdkAlertsQuery_ResourceIdQuery{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SdkAlertsQuery_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SdkAlertsQuery)
	// query
	switch x := m.Query.(type) {
	case *SdkAlertsQuery_ResourceTypeQuery:
		s := proto.Size(x.ResourceTypeQuery)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SdkAlertsQuery_AlertTypeQuery:
		s := proto.Size(x.AlertTypeQuery)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SdkAlertsQuery_ResourceIdQuery:
		s := proto.Size(x.ResourceIdQuery)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// SdkAlertsEnumerateRequest is a request message to enumerate alerts.
type SdkAlertsEnumerateWithFiltersRequest struct {
	// It is a list of queries to find matching alerts.
	// Output of each of these queries is added to a global pool
	// and returned as output of an RPC call.
	// In that sense alerts are fetched if they match any of the
	// queries.
	Queries              []*SdkAlertsQuery `protobuf:"bytes,1,rep,name=queries" json:"queries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SdkAlertsEnumerateWithFiltersRequest) Reset()         { *m = SdkAlertsEnumerateWithFiltersRequest{} }
func (m *SdkAlertsEnumerateWithFiltersRequest) String() string { return proto.CompactTextString(m) }
func (*SdkAlertsEnumerateWithFiltersRequest) ProtoMessage()    {}
func (*SdkAlertsEnumerateWithFiltersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{50}
}
func (m *SdkAlertsEnumerateWithFiltersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkAlertsEnumerateWithFiltersRequest.Unmarshal(m, b)
}
func (m *SdkAlertsEnumerateWithFiltersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkAlertsEnumerateWithFiltersRequest.Marshal(b, m, deterministic)
}
func (dst *SdkAlertsEnumerateWithFiltersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkAlertsEnumerateWithFiltersRequest.Merge(dst, src)
}
func (m *SdkAlertsEnumerateWithFiltersRequest) XXX_Size() int {
	return xxx_messageInfo_SdkAlertsEnumerateWithFiltersRequest.Size(m)
}
func (m *SdkAlertsEnumerateWithFiltersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkAlertsEnumerateWithFiltersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkAlertsEnumerateWithFiltersRequest proto.InternalMessageInfo

func (m *SdkAlertsEnumerateWithFiltersRequest) GetQueries() []*SdkAlertsQuery {
	if m != nil {
		return m.Queries
	}
	return nil
}

// SdkAlertsEnumerateResponse is a list of alerts.
type SdkAlertsEnumerateWithFiltersResponse struct {
	// Response contains a list of alerts.
	Alerts               []*Alert `protobuf:"bytes,1,rep,name=alerts" json:"alerts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkAlertsEnumerateWithFiltersResponse) Reset()         { *m = SdkAlertsEnumerateWithFiltersResponse{} }
func (m *SdkAlertsEnumerateWithFiltersResponse) String() string { return proto.CompactTextString(m) }
func (*SdkAlertsEnumerateWithFiltersResponse) ProtoMessage()    {}
func (*SdkAlertsEnumerateWithFiltersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{51}
}
func (m *SdkAlertsEnumerateWithFiltersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkAlertsEnumerateWithFiltersResponse.Unmarshal(m, b)
}
func (m *SdkAlertsEnumerateWithFiltersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkAlertsEnumerateWithFiltersResponse.Marshal(b, m, deterministic)
}
func (dst *SdkAlertsEnumerateWithFiltersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkAlertsEnumerateWithFiltersResponse.Merge(dst, src)
}
func (m *SdkAlertsEnumerateWithFiltersResponse) XXX_Size() int {
	return xxx_messageInfo_SdkAlertsEnumerateWithFiltersResponse.Size(m)
}
func (m *SdkAlertsEnumerateWithFiltersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkAlertsEnumerateWithFiltersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkAlertsEnumerateWithFiltersResponse proto.InternalMessageInfo

func (m *SdkAlertsEnumerateWithFiltersResponse) GetAlerts() []*Alert {
	if m != nil {
		return m.Alerts
	}
	return nil
}

// SdkAlertsDeleteRequest is a request message to delete alerts.
type SdkAlertsDeleteRequest struct {
	// It takes a list of queries to find matching alerts.
	// Matching alerts are deleted.
	Queries              []*SdkAlertsQuery `protobuf:"bytes,1,rep,name=queries" json:"queries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SdkAlertsDeleteRequest) Reset()         { *m = SdkAlertsDeleteRequest{} }
func (m *SdkAlertsDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*SdkAlertsDeleteRequest) ProtoMessage()    {}
func (*SdkAlertsDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{52}
}
func (m *SdkAlertsDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkAlertsDeleteRequest.Unmarshal(m, b)
}
func (m *SdkAlertsDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkAlertsDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *SdkAlertsDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkAlertsDeleteRequest.Merge(dst, src)
}
func (m *SdkAlertsDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_SdkAlertsDeleteRequest.Size(m)
}
func (m *SdkAlertsDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkAlertsDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkAlertsDeleteRequest proto.InternalMessageInfo

func (m *SdkAlertsDeleteRequest) GetQueries() []*SdkAlertsQuery {
	if m != nil {
		return m.Queries
	}
	return nil
}

// SdkAlertsDeleteResponse is empty.
type SdkAlertsDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkAlertsDeleteResponse) Reset()         { *m = SdkAlertsDeleteResponse{} }
func (m *SdkAlertsDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*SdkAlertsDeleteResponse) ProtoMessage()    {}
func (*SdkAlertsDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{53}
}
func (m *SdkAlertsDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkAlertsDeleteResponse.Unmarshal(m, b)
}
func (m *SdkAlertsDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkAlertsDeleteResponse.Marshal(b, m, deterministic)
}
func (dst *SdkAlertsDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkAlertsDeleteResponse.Merge(dst, src)
}
func (m *SdkAlertsDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_SdkAlertsDeleteResponse.Size(m)
}
func (m *SdkAlertsDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkAlertsDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkAlertsDeleteResponse proto.InternalMessageInfo

// Alerts is an array of Alert objects
type Alerts struct {
	Alert                []*Alert `protobuf:"bytes,1,rep,name=alert" json:"alert,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Alerts) Reset()         { *m = Alerts{} }
func (m *Alerts) String() string { return proto.CompactTextString(m) }
func (*Alerts) ProtoMessage()    {}
func (*Alerts) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{54}
}
func (m *Alerts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Alerts.Unmarshal(m, b)
}
func (m *Alerts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Alerts.Marshal(b, m, deterministic)
}
func (dst *Alerts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Alerts.Merge(dst, src)
}
func (m *Alerts) XXX_Size() int {
	return xxx_messageInfo_Alerts.Size(m)
}
func (m *Alerts) XXX_DiscardUnknown() {
	xxx_messageInfo_Alerts.DiscardUnknown(m)
}

var xxx_messageInfo_Alerts proto.InternalMessageInfo

func (m *Alerts) GetAlert() []*Alert {
	if m != nil {
		return m.Alert
	}
	return nil
}

// ObjectstoreInfo is a structure that has current objectstore info
type ObjectstoreInfo struct {
	// UUID of objectstore
	Uuid string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	// VolumeID of volume used by object store
	VolumeId string `protobuf:"bytes,2,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// Enable/Disable created objectstore
	Enabled bool `protobuf:"varint,3,opt,name=enabled" json:"enabled,omitempty"`
	// Status of objectstore running/failed
	Status string `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	// Action being taken on this objectstore
	Action int64 `protobuf:"varint,5,opt,name=action" json:"action,omitempty"`
	// AccessKey for login into objectstore
	AccessKey string `protobuf:"bytes,6,opt,name=access_key,json=accessKey" json:"access_key,omitempty"`
	// SecretKey for login into objectstore
	SecretKey string `protobuf:"bytes,7,opt,name=secret_key,json=secretKey" json:"secret_key,omitempty"`
	// Endpoints for accessing objectstore
	Endpoints []string `protobuf:"bytes,8,rep,name=endpoints" json:"endpoints,omitempty"`
	// CurrentEndpoint on which objectstore server is accessible
	CurrentEndpoint string `protobuf:"bytes,9,opt,name=current_endpoint,json=currentEndpoint" json:"current_endpoint,omitempty"`
	// AccessPort is objectstore server port
	AccessPort int64 `protobuf:"varint,10,opt,name=access_port,json=accessPort" json:"access_port,omitempty"`
	// Region for this objectstore
	Region               string   `protobuf:"bytes,11,opt,name=region" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObjectstoreInfo) Reset()         { *m = ObjectstoreInfo{} }
func (m *ObjectstoreInfo) String() string { return proto.CompactTextString(m) }
func (*ObjectstoreInfo) ProtoMessage()    {}
func (*ObjectstoreInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{55}
}
func (m *ObjectstoreInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectstoreInfo.Unmarshal(m, b)
}
func (m *ObjectstoreInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectstoreInfo.Marshal(b, m, deterministic)
}
func (dst *ObjectstoreInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectstoreInfo.Merge(dst, src)
}
func (m *ObjectstoreInfo) XXX_Size() int {
	return xxx_messageInfo_ObjectstoreInfo.Size(m)
}
func (m *ObjectstoreInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectstoreInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectstoreInfo proto.InternalMessageInfo

func (m *ObjectstoreInfo) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ObjectstoreInfo) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *ObjectstoreInfo) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *ObjectstoreInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ObjectstoreInfo) GetAction() int64 {
	if m != nil {
		return m.Action
	}
	return 0
}

func (m *ObjectstoreInfo) GetAccessKey() string {
	if m != nil {
		return m.AccessKey
	}
	return ""
}

func (m *ObjectstoreInfo) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *ObjectstoreInfo) GetEndpoints() []string {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

func (m *ObjectstoreInfo) GetCurrentEndpoint() string {
	if m != nil {
		return m.CurrentEndpoint
	}
	return ""
}

func (m *ObjectstoreInfo) GetAccessPort() int64 {
	if m != nil {
		return m.AccessPort
	}
	return 0
}

func (m *ObjectstoreInfo) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

// VolumeCreateRequest is a structure that has the locator, source and spec
// to create a volume
type VolumeCreateRequest struct {
	// User specified volume name and labels
	Locator *VolumeLocator `protobuf:"bytes,1,opt,name=locator" json:"locator,omitempty"`
	// Source to create volume
	Source *Source `protobuf:"bytes,2,opt,name=source" json:"source,omitempty"`
	// The storage spec for the volume
	Spec                 *VolumeSpec `protobuf:"bytes,3,opt,name=spec" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *VolumeCreateRequest) Reset()         { *m = VolumeCreateRequest{} }
func (m *VolumeCreateRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeCreateRequest) ProtoMessage()    {}
func (*VolumeCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{56}
}
func (m *VolumeCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeCreateRequest.Unmarshal(m, b)
}
func (m *VolumeCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeCreateRequest.Marshal(b, m, deterministic)
}
func (dst *VolumeCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeCreateRequest.Merge(dst, src)
}
func (m *VolumeCreateRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeCreateRequest.Size(m)
}
func (m *VolumeCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeCreateRequest proto.InternalMessageInfo

func (m *VolumeCreateRequest) GetLocator() *VolumeLocator {
	if m != nil {
		return m.Locator
	}
	return nil
}

func (m *VolumeCreateRequest) GetSource() *Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *VolumeCreateRequest) GetSpec() *VolumeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

// VolumeResponse is a structure that wraps an error.
type VolumeResponse struct {
	// Error message
	//
	// in: body
	// Required: true
	Error                string   `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeResponse) Reset()         { *m = VolumeResponse{} }
func (m *VolumeResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeResponse) ProtoMessage()    {}
func (*VolumeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{57}
}
func (m *VolumeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeResponse.Unmarshal(m, b)
}
func (m *VolumeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeResponse.Merge(dst, src)
}
func (m *VolumeResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeResponse.Size(m)
}
func (m *VolumeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeResponse proto.InternalMessageInfo

func (m *VolumeResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// VolumeCreateResponse
type VolumeCreateResponse struct {
	// ID of the newly created volume
	//
	// in: body
	// Required: true
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Volume Response
	//
	// in: body
	// Required: true
	VolumeResponse       *VolumeResponse `protobuf:"bytes,2,opt,name=volume_response,json=volumeResponse" json:"volume_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *VolumeCreateResponse) Reset()         { *m = VolumeCreateResponse{} }
func (m *VolumeCreateResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeCreateResponse) ProtoMessage()    {}
func (*VolumeCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{58}
}
func (m *VolumeCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeCreateResponse.Unmarshal(m, b)
}
func (m *VolumeCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeCreateResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeCreateResponse.Merge(dst, src)
}
func (m *VolumeCreateResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeCreateResponse.Size(m)
}
func (m *VolumeCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeCreateResponse proto.InternalMessageInfo

func (m *VolumeCreateResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *VolumeCreateResponse) GetVolumeResponse() *VolumeResponse {
	if m != nil {
		return m.VolumeResponse
	}
	return nil
}

// VolumeStateAction specifies desired actions.
type VolumeStateAction struct {
	// Attach or Detach volume
	Attach VolumeActionParam `protobuf:"varint,1,opt,name=attach,enum=openstorage.api.VolumeActionParam" json:"attach,omitempty"`
	// Mount or unmount volume
	Mount VolumeActionParam `protobuf:"varint,2,opt,name=mount,enum=openstorage.api.VolumeActionParam" json:"mount,omitempty"`
	// MountPath Path where the device is mounted
	MountPath string `protobuf:"bytes,3,opt,name=mount_path,json=mountPath" json:"mount_path,omitempty"`
	// DevicePath Path returned in attach
	DevicePath           string   `protobuf:"bytes,4,opt,name=device_path,json=devicePath" json:"device_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeStateAction) Reset()         { *m = VolumeStateAction{} }
func (m *VolumeStateAction) String() string { return proto.CompactTextString(m) }
func (*VolumeStateAction) ProtoMessage()    {}
func (*VolumeStateAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{59}
}
func (m *VolumeStateAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeStateAction.Unmarshal(m, b)
}
func (m *VolumeStateAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeStateAction.Marshal(b, m, deterministic)
}
func (dst *VolumeStateAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeStateAction.Merge(dst, src)
}
func (m *VolumeStateAction) XXX_Size() int {
	return xxx_messageInfo_VolumeStateAction.Size(m)
}
func (m *VolumeStateAction) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeStateAction.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeStateAction proto.InternalMessageInfo

func (m *VolumeStateAction) GetAttach() VolumeActionParam {
	if m != nil {
		return m.Attach
	}
	return VolumeActionParam_VOLUME_ACTION_PARAM_NONE
}

func (m *VolumeStateAction) GetMount() VolumeActionParam {
	if m != nil {
		return m.Mount
	}
	return VolumeActionParam_VOLUME_ACTION_PARAM_NONE
}

func (m *VolumeStateAction) GetMountPath() string {
	if m != nil {
		return m.MountPath
	}
	return ""
}

func (m *VolumeStateAction) GetDevicePath() string {
	if m != nil {
		return m.DevicePath
	}
	return ""
}

// VolumeSet specifies a request to update a volume.
type VolumeSetRequest struct {
	// User specified volume name and labels
	Locator *VolumeLocator `protobuf:"bytes,1,opt,name=locator" json:"locator,omitempty"`
	// The storage spec for the volume
	Spec *VolumeSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	// State modification on this volume.
	Action *VolumeStateAction `protobuf:"bytes,3,opt,name=action" json:"action,omitempty"`
	// additional options
	// required for the Set operation.
	Options              map[string]string `protobuf:"bytes,4,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VolumeSetRequest) Reset()         { *m = VolumeSetRequest{} }
func (m *VolumeSetRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeSetRequest) ProtoMessage()    {}
func (*VolumeSetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{60}
}
func (m *VolumeSetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSetRequest.Unmarshal(m, b)
}
func (m *VolumeSetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSetRequest.Marshal(b, m, deterministic)
}
func (dst *VolumeSetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSetRequest.Merge(dst, src)
}
func (m *VolumeSetRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeSetRequest.Size(m)
}
func (m *VolumeSetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSetRequest proto.InternalMessageInfo

func (m *VolumeSetRequest) GetLocator() *VolumeLocator {
	if m != nil {
		return m.Locator
	}
	return nil
}

func (m *VolumeSetRequest) GetSpec() *VolumeSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *VolumeSetRequest) GetAction() *VolumeStateAction {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *VolumeSetRequest) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

// VolumeSetResponse
type VolumeSetResponse struct {
	// Volume
	Volume *Volume `protobuf:"bytes,1,opt,name=volume" json:"volume,omitempty"`
	// VolumeResponse
	VolumeResponse       *VolumeResponse `protobuf:"bytes,2,opt,name=volume_response,json=volumeResponse" json:"volume_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *VolumeSetResponse) Reset()         { *m = VolumeSetResponse{} }
func (m *VolumeSetResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeSetResponse) ProtoMessage()    {}
func (*VolumeSetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{61}
}
func (m *VolumeSetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeSetResponse.Unmarshal(m, b)
}
func (m *VolumeSetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeSetResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeSetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeSetResponse.Merge(dst, src)
}
func (m *VolumeSetResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeSetResponse.Size(m)
}
func (m *VolumeSetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeSetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeSetResponse proto.InternalMessageInfo

func (m *VolumeSetResponse) GetVolume() *Volume {
	if m != nil {
		return m.Volume
	}
	return nil
}

func (m *VolumeSetResponse) GetVolumeResponse() *VolumeResponse {
	if m != nil {
		return m.VolumeResponse
	}
	return nil
}

// SnapCreateRequest specifies a request to create a snapshot of given volume.
type SnapCreateRequest struct {
	// volume id
	Id       string         `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Locator  *VolumeLocator `protobuf:"bytes,2,opt,name=locator" json:"locator,omitempty"`
	Readonly bool           `protobuf:"varint,3,opt,name=readonly" json:"readonly,omitempty"`
	// NoRetry indicates not to retry snapshot creation in the background.
	NoRetry              bool     `protobuf:"varint,4,opt,name=no_retry,json=noRetry" json:"no_retry,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnapCreateRequest) Reset()         { *m = SnapCreateRequest{} }
func (m *SnapCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SnapCreateRequest) ProtoMessage()    {}
func (*SnapCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{62}
}
func (m *SnapCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapCreateRequest.Unmarshal(m, b)
}
func (m *SnapCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapCreateRequest.Marshal(b, m, deterministic)
}
func (dst *SnapCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapCreateRequest.Merge(dst, src)
}
func (m *SnapCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SnapCreateRequest.Size(m)
}
func (m *SnapCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SnapCreateRequest proto.InternalMessageInfo

func (m *SnapCreateRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SnapCreateRequest) GetLocator() *VolumeLocator {
	if m != nil {
		return m.Locator
	}
	return nil
}

func (m *SnapCreateRequest) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

func (m *SnapCreateRequest) GetNoRetry() bool {
	if m != nil {
		return m.NoRetry
	}
	return false
}

// SnapCreateRequest specifies a response that get's returned when creating a snapshot.
type SnapCreateResponse struct {
	// VolumeCreateResponse
	//
	// in: body
	// Required: true
	VolumeCreateResponse *VolumeCreateResponse `protobuf:"bytes,1,opt,name=volume_create_response,json=volumeCreateResponse" json:"volume_create_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SnapCreateResponse) Reset()         { *m = SnapCreateResponse{} }
func (m *SnapCreateResponse) String() string { return proto.CompactTextString(m) }
func (*SnapCreateResponse) ProtoMessage()    {}
func (*SnapCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{63}
}
func (m *SnapCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapCreateResponse.Unmarshal(m, b)
}
func (m *SnapCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapCreateResponse.Marshal(b, m, deterministic)
}
func (dst *SnapCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapCreateResponse.Merge(dst, src)
}
func (m *SnapCreateResponse) XXX_Size() int {
	return xxx_messageInfo_SnapCreateResponse.Size(m)
}
func (m *SnapCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SnapCreateResponse proto.InternalMessageInfo

func (m *SnapCreateResponse) GetVolumeCreateResponse() *VolumeCreateResponse {
	if m != nil {
		return m.VolumeCreateResponse
	}
	return nil
}

// VolumeInfo
type VolumeInfo struct {
	VolumeId             string      `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	Path                 string      `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Storage              *VolumeSpec `protobuf:"bytes,3,opt,name=storage" json:"storage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *VolumeInfo) Reset()         { *m = VolumeInfo{} }
func (m *VolumeInfo) String() string { return proto.CompactTextString(m) }
func (*VolumeInfo) ProtoMessage()    {}
func (*VolumeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{64}
}
func (m *VolumeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeInfo.Unmarshal(m, b)
}
func (m *VolumeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeInfo.Marshal(b, m, deterministic)
}
func (dst *VolumeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeInfo.Merge(dst, src)
}
func (m *VolumeInfo) XXX_Size() int {
	return xxx_messageInfo_VolumeInfo.Size(m)
}
func (m *VolumeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeInfo proto.InternalMessageInfo

func (m *VolumeInfo) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *VolumeInfo) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *VolumeInfo) GetStorage() *VolumeSpec {
	if m != nil {
		return m.Storage
	}
	return nil
}

// VolumeConsumer identifies a consumer for a Volume. An example of a VolumeConsumer
// would be a Pod in Kubernetes who has mounted the PersistentVolumeClaim for the
// Volume
type VolumeConsumer struct {
	// Name is the name of the volume consumer
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Namespace is the namespace of the volume consumer
	Namespace string `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	// Type is the type of the consumer. E.g a Kubernetes pod
	Type string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	// NodeID is the identifier of the node on which the consumer is running. This
	// identifier would be from the perspective of the container runtime or
	// orchestrator under which the volume consumer resides. For example, NodeID
	//  can be name of a minion in Kubernetes.
	NodeId string `protobuf:"bytes,4,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	// OwnerName is the name of the entity who owns this volume consumer
	OwnerName string `protobuf:"bytes,5,opt,name=owner_name,json=ownerName" json:"owner_name,omitempty"`
	// OwnerType is the type of the entity who owns this volume consumer. The type would
	// be from the perspective of the container runtime or the orchestrator under which
	// the volume consumer resides. For e.g OwnerType can be a Deployment in Kubernetes.
	OwnerType            string   `protobuf:"bytes,6,opt,name=owner_type,json=ownerType" json:"owner_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeConsumer) Reset()         { *m = VolumeConsumer{} }
func (m *VolumeConsumer) String() string { return proto.CompactTextString(m) }
func (*VolumeConsumer) ProtoMessage()    {}
func (*VolumeConsumer) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{65}
}
func (m *VolumeConsumer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeConsumer.Unmarshal(m, b)
}
func (m *VolumeConsumer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeConsumer.Marshal(b, m, deterministic)
}
func (dst *VolumeConsumer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeConsumer.Merge(dst, src)
}
func (m *VolumeConsumer) XXX_Size() int {
	return xxx_messageInfo_VolumeConsumer.Size(m)
}
func (m *VolumeConsumer) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeConsumer.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeConsumer proto.InternalMessageInfo

func (m *VolumeConsumer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VolumeConsumer) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *VolumeConsumer) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *VolumeConsumer) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *VolumeConsumer) GetOwnerName() string {
	if m != nil {
		return m.OwnerName
	}
	return ""
}

func (m *VolumeConsumer) GetOwnerType() string {
	if m != nil {
		return m.OwnerType
	}
	return ""
}

// VolumeServiceRequest provides details on what volume service command to
// perform in background on the volume
type VolumeServiceRequest struct {
	// User specified volume service command
	SrvCmd string `protobuf:"bytes,1,opt,name=srv_cmd,json=srvCmd" json:"srv_cmd,omitempty"`
	// User specified volume service command's params
	SrvCmdParams         map[string]string `protobuf:"bytes,2,rep,name=srv_cmd_params,json=srvCmdParams" json:"srv_cmd_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VolumeServiceRequest) Reset()         { *m = VolumeServiceRequest{} }
func (m *VolumeServiceRequest) String() string { return proto.CompactTextString(m) }
func (*VolumeServiceRequest) ProtoMessage()    {}
func (*VolumeServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{66}
}
func (m *VolumeServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeServiceRequest.Unmarshal(m, b)
}
func (m *VolumeServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeServiceRequest.Marshal(b, m, deterministic)
}
func (dst *VolumeServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeServiceRequest.Merge(dst, src)
}
func (m *VolumeServiceRequest) XXX_Size() int {
	return xxx_messageInfo_VolumeServiceRequest.Size(m)
}
func (m *VolumeServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeServiceRequest proto.InternalMessageInfo

func (m *VolumeServiceRequest) GetSrvCmd() string {
	if m != nil {
		return m.SrvCmd
	}
	return ""
}

func (m *VolumeServiceRequest) GetSrvCmdParams() map[string]string {
	if m != nil {
		return m.SrvCmdParams
	}
	return nil
}

type VolumeServiceInstanceResponse struct {
	// Error code
	Error string `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	// Status information exposed a map
	Status               map[string]string `protobuf:"bytes,2,rep,name=status" json:"status,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VolumeServiceInstanceResponse) Reset()         { *m = VolumeServiceInstanceResponse{} }
func (m *VolumeServiceInstanceResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeServiceInstanceResponse) ProtoMessage()    {}
func (*VolumeServiceInstanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{67}
}
func (m *VolumeServiceInstanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeServiceInstanceResponse.Unmarshal(m, b)
}
func (m *VolumeServiceInstanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeServiceInstanceResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeServiceInstanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeServiceInstanceResponse.Merge(dst, src)
}
func (m *VolumeServiceInstanceResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeServiceInstanceResponse.Size(m)
}
func (m *VolumeServiceInstanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeServiceInstanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeServiceInstanceResponse proto.InternalMessageInfo

func (m *VolumeServiceInstanceResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *VolumeServiceInstanceResponse) GetStatus() map[string]string {
	if m != nil {
		return m.Status
	}
	return nil
}

// VolumeServiceResponse specifies the response to a Volume Service command
// performed on a volumen
type VolumeServiceResponse struct {
	// Number of VolumeServiceInstanceResponse returned as part of this response
	// structure
	VolSrvRspObjCnt      int32                            `protobuf:"varint,1,opt,name=vol_srv_rsp_obj_cnt,json=volSrvRspObjCnt" json:"vol_srv_rsp_obj_cnt,omitempty"`
	VolSrvRsp            []*VolumeServiceInstanceResponse `protobuf:"bytes,2,rep,name=vol_srv_rsp,json=volSrvRsp" json:"vol_srv_rsp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *VolumeServiceResponse) Reset()         { *m = VolumeServiceResponse{} }
func (m *VolumeServiceResponse) String() string { return proto.CompactTextString(m) }
func (*VolumeServiceResponse) ProtoMessage()    {}
func (*VolumeServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{68}
}
func (m *VolumeServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeServiceResponse.Unmarshal(m, b)
}
func (m *VolumeServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeServiceResponse.Marshal(b, m, deterministic)
}
func (dst *VolumeServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeServiceResponse.Merge(dst, src)
}
func (m *VolumeServiceResponse) XXX_Size() int {
	return xxx_messageInfo_VolumeServiceResponse.Size(m)
}
func (m *VolumeServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeServiceResponse proto.InternalMessageInfo

func (m *VolumeServiceResponse) GetVolSrvRspObjCnt() int32 {
	if m != nil {
		return m.VolSrvRspObjCnt
	}
	return 0
}

func (m *VolumeServiceResponse) GetVolSrvRsp() []*VolumeServiceInstanceResponse {
	if m != nil {
		return m.VolSrvRsp
	}
	return nil
}

// GraphDriverChanges represent a list of changes between the filesystem layers
// specified by the ID and Parent.  // Parent may be an empty string, in which
// case there is no parent.
// Where the Path is the filesystem path within the layered filesystem
type GraphDriverChanges struct {
	Path                 string                `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Kind                 GraphDriverChangeType `protobuf:"varint,2,opt,name=kind,enum=openstorage.api.GraphDriverChangeType" json:"kind,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GraphDriverChanges) Reset()         { *m = GraphDriverChanges{} }
func (m *GraphDriverChanges) String() string { return proto.CompactTextString(m) }
func (*GraphDriverChanges) ProtoMessage()    {}
func (*GraphDriverChanges) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{69}
}
func (m *GraphDriverChanges) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphDriverChanges.Unmarshal(m, b)
}
func (m *GraphDriverChanges) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphDriverChanges.Marshal(b, m, deterministic)
}
func (dst *GraphDriverChanges) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphDriverChanges.Merge(dst, src)
}
func (m *GraphDriverChanges) XXX_Size() int {
	return xxx_messageInfo_GraphDriverChanges.Size(m)
}
func (m *GraphDriverChanges) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphDriverChanges.DiscardUnknown(m)
}

var xxx_messageInfo_GraphDriverChanges proto.InternalMessageInfo

func (m *GraphDriverChanges) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *GraphDriverChanges) GetKind() GraphDriverChangeType {
	if m != nil {
		return m.Kind
	}
	return GraphDriverChangeType_GRAPH_DRIVER_CHANGE_TYPE_NONE
}

// ClusterResponse specifies a response that gets returned when requesting the cluster
type ClusterResponse struct {
	// Error code
	//
	// in: body
	Error                string   `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterResponse) Reset()         { *m = ClusterResponse{} }
func (m *ClusterResponse) String() string { return proto.CompactTextString(m) }
func (*ClusterResponse) ProtoMessage()    {}
func (*ClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{70}
}
func (m *ClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterResponse.Unmarshal(m, b)
}
func (m *ClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterResponse.Marshal(b, m, deterministic)
}
func (dst *ClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterResponse.Merge(dst, src)
}
func (m *ClusterResponse) XXX_Size() int {
	return xxx_messageInfo_ClusterResponse.Size(m)
}
func (m *ClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterResponse proto.InternalMessageInfo

func (m *ClusterResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// Active Request
type ActiveRequest struct {
	ReqestKV             map[int64]string `protobuf:"bytes,1,rep,name=ReqestKV" json:"ReqestKV,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ActiveRequest) Reset()         { *m = ActiveRequest{} }
func (m *ActiveRequest) String() string { return proto.CompactTextString(m) }
func (*ActiveRequest) ProtoMessage()    {}
func (*ActiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{71}
}
func (m *ActiveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActiveRequest.Unmarshal(m, b)
}
func (m *ActiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActiveRequest.Marshal(b, m, deterministic)
}
func (dst *ActiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveRequest.Merge(dst, src)
}
func (m *ActiveRequest) XXX_Size() int {
	return xxx_messageInfo_ActiveRequest.Size(m)
}
func (m *ActiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveRequest proto.InternalMessageInfo

func (m *ActiveRequest) GetReqestKV() map[int64]string {
	if m != nil {
		return m.ReqestKV
	}
	return nil
}

// Active Requests
type ActiveRequests struct {
	RequestCount         int64            `protobuf:"varint,1,opt,name=RequestCount" json:"RequestCount,omitempty"`
	ActiveRequest        []*ActiveRequest `protobuf:"bytes,2,rep,name=ActiveRequest" json:"ActiveRequest,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ActiveRequests) Reset()         { *m = ActiveRequests{} }
func (m *ActiveRequests) String() string { return proto.CompactTextString(m) }
func (*ActiveRequests) ProtoMessage()    {}
func (*ActiveRequests) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{72}
}
func (m *ActiveRequests) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActiveRequests.Unmarshal(m, b)
}
func (m *ActiveRequests) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActiveRequests.Marshal(b, m, deterministic)
}
func (dst *ActiveRequests) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveRequests.Merge(dst, src)
}
func (m *ActiveRequests) XXX_Size() int {
	return xxx_messageInfo_ActiveRequests.Size(m)
}
func (m *ActiveRequests) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveRequests.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveRequests proto.InternalMessageInfo

func (m *ActiveRequests) GetRequestCount() int64 {
	if m != nil {
		return m.RequestCount
	}
	return 0
}

func (m *ActiveRequests) GetActiveRequest() []*ActiveRequest {
	if m != nil {
		return m.ActiveRequest
	}
	return nil
}

// GroupSnapCreateRequest specifies a request to create a snapshot of given group.
type GroupSnapCreateRequest struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Labels               map[string]string `protobuf:"bytes,2,rep,name=Labels" json:"Labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	VolumeIds            []string          `protobuf:"bytes,3,rep,name=volume_ids,json=volumeIds" json:"volume_ids,omitempty"`
	DeleteOnFailure      bool              `protobuf:"varint,4,opt,name=delete_on_failure,json=deleteOnFailure" json:"delete_on_failure,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GroupSnapCreateRequest) Reset()         { *m = GroupSnapCreateRequest{} }
func (m *GroupSnapCreateRequest) String() string { return proto.CompactTextString(m) }
func (*GroupSnapCreateRequest) ProtoMessage()    {}
func (*GroupSnapCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{73}
}
func (m *GroupSnapCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupSnapCreateRequest.Unmarshal(m, b)
}
func (m *GroupSnapCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupSnapCreateRequest.Marshal(b, m, deterministic)
}
func (dst *GroupSnapCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupSnapCreateRequest.Merge(dst, src)
}
func (m *GroupSnapCreateRequest) XXX_Size() int {
	return xxx_messageInfo_GroupSnapCreateRequest.Size(m)
}
func (m *GroupSnapCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupSnapCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupSnapCreateRequest proto.InternalMessageInfo

func (m *GroupSnapCreateRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GroupSnapCreateRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *GroupSnapCreateRequest) GetVolumeIds() []string {
	if m != nil {
		return m.VolumeIds
	}
	return nil
}

func (m *GroupSnapCreateRequest) GetDeleteOnFailure() bool {
	if m != nil {
		return m.DeleteOnFailure
	}
	return false
}

// GroupSnapCreateRequest specifies a response that get's returned when creating a group snapshot.
type GroupSnapCreateResponse struct {
	// Created snapshots
	//
	// in: body
	// Required: true
	Snapshots map[string]*SnapCreateResponse `protobuf:"bytes,1,rep,name=snapshots" json:"snapshots,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Error message
	//
	// in: body
	// Required: true
	Error                string   `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupSnapCreateResponse) Reset()         { *m = GroupSnapCreateResponse{} }
func (m *GroupSnapCreateResponse) String() string { return proto.CompactTextString(m) }
func (*GroupSnapCreateResponse) ProtoMessage()    {}
func (*GroupSnapCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{74}
}
func (m *GroupSnapCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupSnapCreateResponse.Unmarshal(m, b)
}
func (m *GroupSnapCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupSnapCreateResponse.Marshal(b, m, deterministic)
}
func (dst *GroupSnapCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupSnapCreateResponse.Merge(dst, src)
}
func (m *GroupSnapCreateResponse) XXX_Size() int {
	return xxx_messageInfo_GroupSnapCreateResponse.Size(m)
}
func (m *GroupSnapCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupSnapCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GroupSnapCreateResponse proto.InternalMessageInfo

func (m *GroupSnapCreateResponse) GetSnapshots() map[string]*SnapCreateResponse {
	if m != nil {
		return m.Snapshots
	}
	return nil
}

func (m *GroupSnapCreateResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// StorageNode describes the state of the node
type StorageNode struct {
	// Id of the node
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Cpu usage of the node
	Cpu float64 `protobuf:"fixed64,2,opt,name=cpu" json:"cpu,omitempty"`
	// Number of Cpu Cores
	CpuCores int64 `protobuf:"varint,21,opt,name=cpu_cores,json=cpuCores" json:"cpu_cores,omitempty"`
	// Total memory of the node
	MemTotal uint64 `protobuf:"varint,3,opt,name=mem_total,json=memTotal" json:"mem_total,omitempty"`
	// Used memory of the node
	MemUsed uint64 `protobuf:"varint,4,opt,name=mem_used,json=memUsed" json:"mem_used,omitempty"`
	// Free memory of the node
	MemFree uint64 `protobuf:"varint,5,opt,name=mem_free,json=memFree" json:"mem_free,omitempty"`
	// Average load (percentage)
	AvgLoad int64 `protobuf:"varint,6,opt,name=avg_load,json=avgLoad" json:"avg_load,omitempty"`
	// Node status
	Status Status `protobuf:"varint,7,opt,name=status,enum=openstorage.api.Status" json:"status,omitempty"`
	// List of disks on the node
	Disks map[string]*StorageResource `protobuf:"bytes,9,rep,name=disks" json:"disks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// List of storage pools this node supports
	Pools []*StoragePool `protobuf:"bytes,10,rep,name=pools" json:"pools,omitempty"`
	// Management IP
	MgmtIp string `protobuf:"bytes,11,opt,name=mgmt_ip,json=mgmtIp" json:"mgmt_ip,omitempty"`
	// Data IP
	DataIp string `protobuf:"bytes,12,opt,name=data_ip,json=dataIp" json:"data_ip,omitempty"`
	// Hostname of the node
	Hostname string `protobuf:"bytes,15,opt,name=hostname" json:"hostname,omitempty"`
	// User defined labels for the node
	NodeLabels map[string]string `protobuf:"bytes,16,rep,name=node_labels,json=nodeLabels" json:"node_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// SchedulerNodeName is name of the node in scheduler context. It can be
	// empty if unable to get the name from the scheduler.
	SchedulerNodeName string `protobuf:"bytes,17,opt,name=scheduler_node_name,json=schedulerNodeName" json:"scheduler_node_name,omitempty"`
	// HardwareType is the type of the hardware the node has
	HWType HardwareType `protobuf:"varint,18,opt,name=HWType,enum=openstorage.api.HardwareType" json:"HWType,omitempty"`
	// Determine if the node is secured
	SecurityStatus StorageNode_SecurityStatus `protobuf:"varint,19,opt,name=security_status,json=securityStatus,enum=openstorage.api.StorageNode_SecurityStatus" json:"security_status,omitempty"`
	// Topology information of the node in scheduler context
	SchedulerTopology *SchedulerTopology `protobuf:"bytes,20,opt,name=scheduler_topology,json=schedulerTopology" json:"scheduler_topology,omitempty"`
	// Flag indicating whether the node is a quorum member or not. Using inverse value
	// to handle intialization and upgrades. Node will always be counted as a quorum member
	// when initializing until it reaches a point where we can definitely determine whether
	// it is a quorum member or not.
	NonQuorumMember bool `protobuf:"varint,22,opt,name=non_quorum_member,json=nonQuorumMember" json:"non_quorum_member,omitempty"`
	// Name of the cluster domain where the node belongs.
	ClusterDomain        string   `protobuf:"bytes,23,opt,name=cluster_domain,json=clusterDomain" json:"cluster_domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StorageNode) Reset()         { *m = StorageNode{} }
func (m *StorageNode) String() string { return proto.CompactTextString(m) }
func (*StorageNode) ProtoMessage()    {}
func (*StorageNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{75}
}
func (m *StorageNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageNode.Unmarshal(m, b)
}
func (m *StorageNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageNode.Marshal(b, m, deterministic)
}
func (dst *StorageNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageNode.Merge(dst, src)
}
func (m *StorageNode) XXX_Size() int {
	return xxx_messageInfo_StorageNode.Size(m)
}
func (m *StorageNode) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageNode.DiscardUnknown(m)
}

var xxx_messageInfo_StorageNode proto.InternalMessageInfo

func (m *StorageNode) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StorageNode) GetCpu() float64 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

func (m *StorageNode) GetCpuCores() int64 {
	if m != nil {
		return m.CpuCores
	}
	return 0
}

func (m *StorageNode) GetMemTotal() uint64 {
	if m != nil {
		return m.MemTotal
	}
	return 0
}

func (m *StorageNode) GetMemUsed() uint64 {
	if m != nil {
		return m.MemUsed
	}
	return 0
}

func (m *StorageNode) GetMemFree() uint64 {
	if m != nil {
		return m.MemFree
	}
	return 0
}

func (m *StorageNode) GetAvgLoad() int64 {
	if m != nil {
		return m.AvgLoad
	}
	return 0
}

func (m *StorageNode) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_STATUS_NONE
}

func (m *StorageNode) GetDisks() map[string]*StorageResource {
	if m != nil {
		return m.Disks
	}
	return nil
}

func (m *StorageNode) GetPools() []*StoragePool {
	if m != nil {
		return m.Pools
	}
	return nil
}

func (m *StorageNode) GetMgmtIp() string {
	if m != nil {
		return m.MgmtIp
	}
	return ""
}

func (m *StorageNode) GetDataIp() string {
	if m != nil {
		return m.DataIp
	}
	return ""
}

func (m *StorageNode) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *StorageNode) GetNodeLabels() map[string]string {
	if m != nil {
		return m.NodeLabels
	}
	return nil
}

func (m *StorageNode) GetSchedulerNodeName() string {
	if m != nil {
		return m.SchedulerNodeName
	}
	return ""
}

func (m *StorageNode) GetHWType() HardwareType {
	if m != nil {
		return m.HWType
	}
	return HardwareType_UnknownMachine
}

func (m *StorageNode) GetSecurityStatus() StorageNode_SecurityStatus {
	if m != nil {
		return m.SecurityStatus
	}
	return StorageNode_UNSPECIFIED
}

func (m *StorageNode) GetSchedulerTopology() *SchedulerTopology {
	if m != nil {
		return m.SchedulerTopology
	}
	return nil
}

func (m *StorageNode) GetNonQuorumMember() bool {
	if m != nil {
		return m.NonQuorumMember
	}
	return false
}

func (m *StorageNode) GetClusterDomain() string {
	if m != nil {
		return m.ClusterDomain
	}
	return ""
}

// StorageCluster represents the state and information about the cluster
type StorageCluster struct {
	// Status of the cluster
	Status Status `protobuf:"varint,1,opt,name=status,enum=openstorage.api.Status" json:"status,omitempty"`
	// Id of the cluster
	Id string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	// Name of the cluster
	Name                 string   `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StorageCluster) Reset()         { *m = StorageCluster{} }
func (m *StorageCluster) String() string { return proto.CompactTextString(m) }
func (*StorageCluster) ProtoMessage()    {}
func (*StorageCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{76}
}
func (m *StorageCluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorageCluster.Unmarshal(m, b)
}
func (m *StorageCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorageCluster.Marshal(b, m, deterministic)
}
func (dst *StorageCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageCluster.Merge(dst, src)
}
func (m *StorageCluster) XXX_Size() int {
	return xxx_messageInfo_StorageCluster.Size(m)
}
func (m *StorageCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageCluster.DiscardUnknown(m)
}

var xxx_messageInfo_StorageCluster proto.InternalMessageInfo

func (m *StorageCluster) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_STATUS_NONE
}

func (m *StorageCluster) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StorageCluster) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Defines a request to create a bucket.
type BucketCreateRequest struct {
	// Unique name of the bucket. This will be used for idempotency.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Region in which bucket will be created.
	Region string `protobuf:"bytes,2,opt,name=region" json:"region,omitempty"`
	// Endpoint to use when creating the bucket
	Endpoint string `protobuf:"bytes,3,opt,name=endpoint" json:"endpoint,omitempty"`
	// Anonymous access policy for the bucket.
	AnonymousBucketAccessMode AnonymousBucketAccessMode `protobuf:"varint,4,opt,name=anonymousBucketAccessMode,enum=openstorage.api.AnonymousBucketAccessMode" json:"anonymousBucketAccessMode,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                  `json:"-"`
	XXX_unrecognized          []byte                    `json:"-"`
	XXX_sizecache             int32                     `json:"-"`
}

func (m *BucketCreateRequest) Reset()         { *m = BucketCreateRequest{} }
func (m *BucketCreateRequest) String() string { return proto.CompactTextString(m) }
func (*BucketCreateRequest) ProtoMessage()    {}
func (*BucketCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{77}
}
func (m *BucketCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BucketCreateRequest.Unmarshal(m, b)
}
func (m *BucketCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BucketCreateRequest.Marshal(b, m, deterministic)
}
func (dst *BucketCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BucketCreateRequest.Merge(dst, src)
}
func (m *BucketCreateRequest) XXX_Size() int {
	return xxx_messageInfo_BucketCreateRequest.Size(m)
}
func (m *BucketCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BucketCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BucketCreateRequest proto.InternalMessageInfo

func (m *BucketCreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BucketCreateRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *BucketCreateRequest) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *BucketCreateRequest) GetAnonymousBucketAccessMode() AnonymousBucketAccessMode {
	if m != nil {
		return m.AnonymousBucketAccessMode
	}
	return AnonymousBucketAccessMode_UnknownBucketAccessMode
}

// Defines a response to the creation of a bucket
type BucketCreateResponse struct {
	// Id of new bucket
	BucketId             string   `protobuf:"bytes,1,opt,name=bucket_id,json=bucketId" json:"bucket_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BucketCreateResponse) Reset()         { *m = BucketCreateResponse{} }
func (m *BucketCreateResponse) String() string { return proto.CompactTextString(m) }
func (*BucketCreateResponse) ProtoMessage()    {}
func (*BucketCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{78}
}
func (m *BucketCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BucketCreateResponse.Unmarshal(m, b)
}
func (m *BucketCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BucketCreateResponse.Marshal(b, m, deterministic)
}
func (dst *BucketCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BucketCreateResponse.Merge(dst, src)
}
func (m *BucketCreateResponse) XXX_Size() int {
	return xxx_messageInfo_BucketCreateResponse.Size(m)
}
func (m *BucketCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BucketCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BucketCreateResponse proto.InternalMessageInfo

func (m *BucketCreateResponse) GetBucketId() string {
	if m != nil {
		return m.BucketId
	}
	return ""
}

// Defines the request to delete a bucket
type BucketDeleteRequest struct {
	// Id of bucket to delete
	BucketId string `protobuf:"bytes,1,opt,name=bucket_id,json=bucketId" json:"bucket_id,omitempty"`
	// Region in which bucket will be created.
	Region string `protobuf:"bytes,2,opt,name=region" json:"region,omitempty"`
	// Endpoint to use when deleting the bucket
	Endpoint string `protobuf:"bytes,3,opt,name=endpoint" json:"endpoint,omitempty"`
	// Flag to allow non empty bucket deletion.
	ClearBucket          bool     `protobuf:"varint,4,opt,name=clear_bucket,json=clearBucket" json:"clear_bucket,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BucketDeleteRequest) Reset()         { *m = BucketDeleteRequest{} }
func (m *BucketDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*BucketDeleteRequest) ProtoMessage()    {}
func (*BucketDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{79}
}
func (m *BucketDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BucketDeleteRequest.Unmarshal(m, b)
}
func (m *BucketDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BucketDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *BucketDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BucketDeleteRequest.Merge(dst, src)
}
func (m *BucketDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_BucketDeleteRequest.Size(m)
}
func (m *BucketDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BucketDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BucketDeleteRequest proto.InternalMessageInfo

func (m *BucketDeleteRequest) GetBucketId() string {
	if m != nil {
		return m.BucketId
	}
	return ""
}

func (m *BucketDeleteRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *BucketDeleteRequest) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *BucketDeleteRequest) GetClearBucket() bool {
	if m != nil {
		return m.ClearBucket
	}
	return false
}

// Empty response
type BucketDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BucketDeleteResponse) Reset()         { *m = BucketDeleteResponse{} }
func (m *BucketDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*BucketDeleteResponse) ProtoMessage()    {}
func (*BucketDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{80}
}
func (m *BucketDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BucketDeleteResponse.Unmarshal(m, b)
}
func (m *BucketDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BucketDeleteResponse.Marshal(b, m, deterministic)
}
func (dst *BucketDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BucketDeleteResponse.Merge(dst, src)
}
func (m *BucketDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_BucketDeleteResponse.Size(m)
}
func (m *BucketDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BucketDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BucketDeleteResponse proto.InternalMessageInfo

// Defines a request to grant access to the bucket
type BucketGrantAccessRequest struct {
	// Id of the bucket
	BucketId string `protobuf:"bytes,1,opt,name=bucket_id,json=bucketId" json:"bucket_id,omitempty"`
	// Name of the account to which access to be provided
	AccountName string `protobuf:"bytes,2,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	// Access policy to be applied for the account
	AccessPolicy         string   `protobuf:"bytes,3,opt,name=access_policy,json=accessPolicy" json:"access_policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BucketGrantAccessRequest) Reset()         { *m = BucketGrantAccessRequest{} }
func (m *BucketGrantAccessRequest) String() string { return proto.CompactTextString(m) }
func (*BucketGrantAccessRequest) ProtoMessage()    {}
func (*BucketGrantAccessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{81}
}
func (m *BucketGrantAccessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BucketGrantAccessRequest.Unmarshal(m, b)
}
func (m *BucketGrantAccessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BucketGrantAccessRequest.Marshal(b, m, deterministic)
}
func (dst *BucketGrantAccessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BucketGrantAccessRequest.Merge(dst, src)
}
func (m *BucketGrantAccessRequest) XXX_Size() int {
	return xxx_messageInfo_BucketGrantAccessRequest.Size(m)
}
func (m *BucketGrantAccessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BucketGrantAccessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BucketGrantAccessRequest proto.InternalMessageInfo

func (m *BucketGrantAccessRequest) GetBucketId() string {
	if m != nil {
		return m.BucketId
	}
	return ""
}

func (m *BucketGrantAccessRequest) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *BucketGrantAccessRequest) GetAccessPolicy() string {
	if m != nil {
		return m.AccessPolicy
	}
	return ""
}

// Defines a response to the creation of a bucket
type BucketGrantAccessResponse struct {
	// This is the account_id that is being provided access. This will
	// This will be required later to revoke access.
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// Credentials supplied for accessing the bucket ex: aws access key id and secret, etc.
	Credentials          *BucketAccessCredentials `protobuf:"bytes,2,opt,name=credentials" json:"credentials,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *BucketGrantAccessResponse) Reset()         { *m = BucketGrantAccessResponse{} }
func (m *BucketGrantAccessResponse) String() string { return proto.CompactTextString(m) }
func (*BucketGrantAccessResponse) ProtoMessage()    {}
func (*BucketGrantAccessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{82}
}
func (m *BucketGrantAccessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BucketGrantAccessResponse.Unmarshal(m, b)
}
func (m *BucketGrantAccessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BucketGrantAccessResponse.Marshal(b, m, deterministic)
}
func (dst *BucketGrantAccessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BucketGrantAccessResponse.Merge(dst, src)
}
func (m *BucketGrantAccessResponse) XXX_Size() int {
	return xxx_messageInfo_BucketGrantAccessResponse.Size(m)
}
func (m *BucketGrantAccessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BucketGrantAccessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BucketGrantAccessResponse proto.InternalMessageInfo

func (m *BucketGrantAccessResponse) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *BucketGrantAccessResponse) GetCredentials() *BucketAccessCredentials {
	if m != nil {
		return m.Credentials
	}
	return nil
}

// Defines the request to revoke access to the bucket
type BucketRevokeAccessRequest struct {
	// Id of bucket to delete
	BucketId string `protobuf:"bytes,1,opt,name=bucket_id,json=bucketId" json:"bucket_id,omitempty"`
	// AccountId that is having its access revoked.
	AccountId            string   `protobuf:"bytes,2,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BucketRevokeAccessRequest) Reset()         { *m = BucketRevokeAccessRequest{} }
func (m *BucketRevokeAccessRequest) String() string { return proto.CompactTextString(m) }
func (*BucketRevokeAccessRequest) ProtoMessage()    {}
func (*BucketRevokeAccessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{83}
}
func (m *BucketRevokeAccessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BucketRevokeAccessRequest.Unmarshal(m, b)
}
func (m *BucketRevokeAccessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BucketRevokeAccessRequest.Marshal(b, m, deterministic)
}
func (dst *BucketRevokeAccessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BucketRevokeAccessRequest.Merge(dst, src)
}
func (m *BucketRevokeAccessRequest) XXX_Size() int {
	return xxx_messageInfo_BucketRevokeAccessRequest.Size(m)
}
func (m *BucketRevokeAccessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BucketRevokeAccessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BucketRevokeAccessRequest proto.InternalMessageInfo

func (m *BucketRevokeAccessRequest) GetBucketId() string {
	if m != nil {
		return m.BucketId
	}
	return ""
}

func (m *BucketRevokeAccessRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

// Empty response
type BucketRevokeAccessResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BucketRevokeAccessResponse) Reset()         { *m = BucketRevokeAccessResponse{} }
func (m *BucketRevokeAccessResponse) String() string { return proto.CompactTextString(m) }
func (*BucketRevokeAccessResponse) ProtoMessage()    {}
func (*BucketRevokeAccessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{84}
}
func (m *BucketRevokeAccessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BucketRevokeAccessResponse.Unmarshal(m, b)
}
func (m *BucketRevokeAccessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BucketRevokeAccessResponse.Marshal(b, m, deterministic)
}
func (dst *BucketRevokeAccessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BucketRevokeAccessResponse.Merge(dst, src)
}
func (m *BucketRevokeAccessResponse) XXX_Size() int {
	return xxx_messageInfo_BucketRevokeAccessResponse.Size(m)
}
func (m *BucketRevokeAccessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BucketRevokeAccessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BucketRevokeAccessResponse proto.InternalMessageInfo

// Defines the bucket access credential object
type BucketAccessCredentials struct {
	// Access key id
	AccessKeyId string `protobuf:"bytes,1,opt,name=access_key_id,json=accessKeyId" json:"access_key_id,omitempty"`
	// Secret access key
	SecretAccessKey      string   `protobuf:"bytes,2,opt,name=secret_access_key,json=secretAccessKey" json:"secret_access_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BucketAccessCredentials) Reset()         { *m = BucketAccessCredentials{} }
func (m *BucketAccessCredentials) String() string { return proto.CompactTextString(m) }
func (*BucketAccessCredentials) ProtoMessage()    {}
func (*BucketAccessCredentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{85}
}
func (m *BucketAccessCredentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BucketAccessCredentials.Unmarshal(m, b)
}
func (m *BucketAccessCredentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BucketAccessCredentials.Marshal(b, m, deterministic)
}
func (dst *BucketAccessCredentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BucketAccessCredentials.Merge(dst, src)
}
func (m *BucketAccessCredentials) XXX_Size() int {
	return xxx_messageInfo_BucketAccessCredentials.Size(m)
}
func (m *BucketAccessCredentials) XXX_DiscardUnknown() {
	xxx_messageInfo_BucketAccessCredentials.DiscardUnknown(m)
}

var xxx_messageInfo_BucketAccessCredentials proto.InternalMessageInfo

func (m *BucketAccessCredentials) GetAccessKeyId() string {
	if m != nil {
		return m.AccessKeyId
	}
	return ""
}

func (m *BucketAccessCredentials) GetSecretAccessKey() string {
	if m != nil {
		return m.SecretAccessKey
	}
	return ""
}

// Define a request to create storage policy
type SdkOpenStoragePolicyCreateRequest struct {
	// storage policy to create
	StoragePolicy        *SdkStoragePolicy `protobuf:"bytes,1,opt,name=storage_policy,json=storagePolicy" json:"storage_policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SdkOpenStoragePolicyCreateRequest) Reset()         { *m = SdkOpenStoragePolicyCreateRequest{} }
func (m *SdkOpenStoragePolicyCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkOpenStoragePolicyCreateRequest) ProtoMessage()    {}
func (*SdkOpenStoragePolicyCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{86}
}
func (m *SdkOpenStoragePolicyCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkOpenStoragePolicyCreateRequest.Unmarshal(m, b)
}
func (m *SdkOpenStoragePolicyCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkOpenStoragePolicyCreateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkOpenStoragePolicyCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkOpenStoragePolicyCreateRequest.Merge(dst, src)
}
func (m *SdkOpenStoragePolicyCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkOpenStoragePolicyCreateRequest.Size(m)
}
func (m *SdkOpenStoragePolicyCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkOpenStoragePolicyCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkOpenStoragePolicyCreateRequest proto.InternalMessageInfo

func (m *SdkOpenStoragePolicyCreateRequest) GetStoragePolicy() *SdkStoragePolicy {
	if m != nil {
		return m.StoragePolicy
	}
	return nil
}

// Empty response
type SdkOpenStoragePolicyCreateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkOpenStoragePolicyCreateResponse) Reset()         { *m = SdkOpenStoragePolicyCreateResponse{} }
func (m *SdkOpenStoragePolicyCreateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkOpenStoragePolicyCreateResponse) ProtoMessage()    {}
func (*SdkOpenStoragePolicyCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{87}
}
func (m *SdkOpenStoragePolicyCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkOpenStoragePolicyCreateResponse.Unmarshal(m, b)
}
func (m *SdkOpenStoragePolicyCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkOpenStoragePolicyCreateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkOpenStoragePolicyCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkOpenStoragePolicyCreateResponse.Merge(dst, src)
}
func (m *SdkOpenStoragePolicyCreateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkOpenStoragePolicyCreateResponse.Size(m)
}
func (m *SdkOpenStoragePolicyCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkOpenStoragePolicyCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkOpenStoragePolicyCreateResponse proto.InternalMessageInfo

// Empty request
type SdkOpenStoragePolicyEnumerateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkOpenStoragePolicyEnumerateRequest) Reset()         { *m = SdkOpenStoragePolicyEnumerateRequest{} }
func (m *SdkOpenStoragePolicyEnumerateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkOpenStoragePolicyEnumerateRequest) ProtoMessage()    {}
func (*SdkOpenStoragePolicyEnumerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{88}
}
func (m *SdkOpenStoragePolicyEnumerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkOpenStoragePolicyEnumerateRequest.Unmarshal(m, b)
}
func (m *SdkOpenStoragePolicyEnumerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkOpenStoragePolicyEnumerateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkOpenStoragePolicyEnumerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkOpenStoragePolicyEnumerateRequest.Merge(dst, src)
}
func (m *SdkOpenStoragePolicyEnumerateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkOpenStoragePolicyEnumerateRequest.Size(m)
}
func (m *SdkOpenStoragePolicyEnumerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkOpenStoragePolicyEnumerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkOpenStoragePolicyEnumerateRequest proto.InternalMessageInfo

// Define a storage policy enumerate response
type SdkOpenStoragePolicyEnumerateResponse struct {
	// List of storage policies
	StoragePolicies      []*SdkStoragePolicy `protobuf:"bytes,1,rep,name=storage_policies,json=storagePolicies" json:"storage_policies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SdkOpenStoragePolicyEnumerateResponse) Reset()         { *m = SdkOpenStoragePolicyEnumerateResponse{} }
func (m *SdkOpenStoragePolicyEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkOpenStoragePolicyEnumerateResponse) ProtoMessage()    {}
func (*SdkOpenStoragePolicyEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{89}
}
func (m *SdkOpenStoragePolicyEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkOpenStoragePolicyEnumerateResponse.Unmarshal(m, b)
}
func (m *SdkOpenStoragePolicyEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkOpenStoragePolicyEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkOpenStoragePolicyEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkOpenStoragePolicyEnumerateResponse.Merge(dst, src)
}
func (m *SdkOpenStoragePolicyEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkOpenStoragePolicyEnumerateResponse.Size(m)
}
func (m *SdkOpenStoragePolicyEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkOpenStoragePolicyEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkOpenStoragePolicyEnumerateResponse proto.InternalMessageInfo

func (m *SdkOpenStoragePolicyEnumerateResponse) GetStoragePolicies() []*SdkStoragePolicy {
	if m != nil {
		return m.StoragePolicies
	}
	return nil
}

// Define a request to inspect storage policy
type SdkOpenStoragePolicyInspectRequest struct {
	// name of storage policy to retrive
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkOpenStoragePolicyInspectRequest) Reset()         { *m = SdkOpenStoragePolicyInspectRequest{} }
func (m *SdkOpenStoragePolicyInspectRequest) String() string { return proto.CompactTextString(m) }
func (*SdkOpenStoragePolicyInspectRequest) ProtoMessage()    {}
func (*SdkOpenStoragePolicyInspectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{90}
}
func (m *SdkOpenStoragePolicyInspectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkOpenStoragePolicyInspectRequest.Unmarshal(m, b)
}
func (m *SdkOpenStoragePolicyInspectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkOpenStoragePolicyInspectRequest.Marshal(b, m, deterministic)
}
func (dst *SdkOpenStoragePolicyInspectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkOpenStoragePolicyInspectRequest.Merge(dst, src)
}
func (m *SdkOpenStoragePolicyInspectRequest) XXX_Size() int {
	return xxx_messageInfo_SdkOpenStoragePolicyInspectRequest.Size(m)
}
func (m *SdkOpenStoragePolicyInspectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkOpenStoragePolicyInspectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkOpenStoragePolicyInspectRequest proto.InternalMessageInfo

func (m *SdkOpenStoragePolicyInspectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Define a storage policy inspect response
type SdkOpenStoragePolicyInspectResponse struct {
	// storage policy information requested by name
	StoragePolicy        *SdkStoragePolicy `protobuf:"bytes,1,opt,name=storage_policy,json=storagePolicy" json:"storage_policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SdkOpenStoragePolicyInspectResponse) Reset()         { *m = SdkOpenStoragePolicyInspectResponse{} }
func (m *SdkOpenStoragePolicyInspectResponse) String() string { return proto.CompactTextString(m) }
func (*SdkOpenStoragePolicyInspectResponse) ProtoMessage()    {}
func (*SdkOpenStoragePolicyInspectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{91}
}
func (m *SdkOpenStoragePolicyInspectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkOpenStoragePolicyInspectResponse.Unmarshal(m, b)
}
func (m *SdkOpenStoragePolicyInspectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkOpenStoragePolicyInspectResponse.Marshal(b, m, deterministic)
}
func (dst *SdkOpenStoragePolicyInspectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkOpenStoragePolicyInspectResponse.Merge(dst, src)
}
func (m *SdkOpenStoragePolicyInspectResponse) XXX_Size() int {
	return xxx_messageInfo_SdkOpenStoragePolicyInspectResponse.Size(m)
}
func (m *SdkOpenStoragePolicyInspectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkOpenStoragePolicyInspectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkOpenStoragePolicyInspectResponse proto.InternalMessageInfo

func (m *SdkOpenStoragePolicyInspectResponse) GetStoragePolicy() *SdkStoragePolicy {
	if m != nil {
		return m.StoragePolicy
	}
	return nil
}

// Define a request to delete storage policy
type SdkOpenStoragePolicyDeleteRequest struct {
	// name of storage policy to delete
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkOpenStoragePolicyDeleteRequest) Reset()         { *m = SdkOpenStoragePolicyDeleteRequest{} }
func (m *SdkOpenStoragePolicyDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*SdkOpenStoragePolicyDeleteRequest) ProtoMessage()    {}
func (*SdkOpenStoragePolicyDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{92}
}
func (m *SdkOpenStoragePolicyDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkOpenStoragePolicyDeleteRequest.Unmarshal(m, b)
}
func (m *SdkOpenStoragePolicyDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkOpenStoragePolicyDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *SdkOpenStoragePolicyDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkOpenStoragePolicyDeleteRequest.Merge(dst, src)
}
func (m *SdkOpenStoragePolicyDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_SdkOpenStoragePolicyDeleteRequest.Size(m)
}
func (m *SdkOpenStoragePolicyDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkOpenStoragePolicyDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkOpenStoragePolicyDeleteRequest proto.InternalMessageInfo

func (m *SdkOpenStoragePolicyDeleteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Empty Response
type SdkOpenStoragePolicyDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkOpenStoragePolicyDeleteResponse) Reset()         { *m = SdkOpenStoragePolicyDeleteResponse{} }
func (m *SdkOpenStoragePolicyDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*SdkOpenStoragePolicyDeleteResponse) ProtoMessage()    {}
func (*SdkOpenStoragePolicyDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{93}
}
func (m *SdkOpenStoragePolicyDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkOpenStoragePolicyDeleteResponse.Unmarshal(m, b)
}
func (m *SdkOpenStoragePolicyDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkOpenStoragePolicyDeleteResponse.Marshal(b, m, deterministic)
}
func (dst *SdkOpenStoragePolicyDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkOpenStoragePolicyDeleteResponse.Merge(dst, src)
}
func (m *SdkOpenStoragePolicyDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_SdkOpenStoragePolicyDeleteResponse.Size(m)
}
func (m *SdkOpenStoragePolicyDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkOpenStoragePolicyDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkOpenStoragePolicyDeleteResponse proto.InternalMessageInfo

// Define a request to update storage policy
type SdkOpenStoragePolicyUpdateRequest struct {
	// storage policy to update
	StoragePolicy        *SdkStoragePolicy `protobuf:"bytes,1,opt,name=storage_policy,json=storagePolicy" json:"storage_policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SdkOpenStoragePolicyUpdateRequest) Reset()         { *m = SdkOpenStoragePolicyUpdateRequest{} }
func (m *SdkOpenStoragePolicyUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkOpenStoragePolicyUpdateRequest) ProtoMessage()    {}
func (*SdkOpenStoragePolicyUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{94}
}
func (m *SdkOpenStoragePolicyUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkOpenStoragePolicyUpdateRequest.Unmarshal(m, b)
}
func (m *SdkOpenStoragePolicyUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkOpenStoragePolicyUpdateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkOpenStoragePolicyUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkOpenStoragePolicyUpdateRequest.Merge(dst, src)
}
func (m *SdkOpenStoragePolicyUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkOpenStoragePolicyUpdateRequest.Size(m)
}
func (m *SdkOpenStoragePolicyUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkOpenStoragePolicyUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkOpenStoragePolicyUpdateRequest proto.InternalMessageInfo

func (m *SdkOpenStoragePolicyUpdateRequest) GetStoragePolicy() *SdkStoragePolicy {
	if m != nil {
		return m.StoragePolicy
	}
	return nil
}

// Empty Response
type SdkOpenStoragePolicyUpdateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkOpenStoragePolicyUpdateResponse) Reset()         { *m = SdkOpenStoragePolicyUpdateResponse{} }
func (m *SdkOpenStoragePolicyUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkOpenStoragePolicyUpdateResponse) ProtoMessage()    {}
func (*SdkOpenStoragePolicyUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{95}
}
func (m *SdkOpenStoragePolicyUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkOpenStoragePolicyUpdateResponse.Unmarshal(m, b)
}
func (m *SdkOpenStoragePolicyUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkOpenStoragePolicyUpdateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkOpenStoragePolicyUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkOpenStoragePolicyUpdateResponse.Merge(dst, src)
}
func (m *SdkOpenStoragePolicyUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkOpenStoragePolicyUpdateResponse.Size(m)
}
func (m *SdkOpenStoragePolicyUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkOpenStoragePolicyUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkOpenStoragePolicyUpdateResponse proto.InternalMessageInfo

// Define a request to set default storage policy
type SdkOpenStoragePolicySetDefaultRequest struct {
	// name of policy to set as default storage policy
	// for volume creation
	// This policy will be used to validate/update volume configuration
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkOpenStoragePolicySetDefaultRequest) Reset()         { *m = SdkOpenStoragePolicySetDefaultRequest{} }
func (m *SdkOpenStoragePolicySetDefaultRequest) String() string { return proto.CompactTextString(m) }
func (*SdkOpenStoragePolicySetDefaultRequest) ProtoMessage()    {}
func (*SdkOpenStoragePolicySetDefaultRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{96}
}
func (m *SdkOpenStoragePolicySetDefaultRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkOpenStoragePolicySetDefaultRequest.Unmarshal(m, b)
}
func (m *SdkOpenStoragePolicySetDefaultRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkOpenStoragePolicySetDefaultRequest.Marshal(b, m, deterministic)
}
func (dst *SdkOpenStoragePolicySetDefaultRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkOpenStoragePolicySetDefaultRequest.Merge(dst, src)
}
func (m *SdkOpenStoragePolicySetDefaultRequest) XXX_Size() int {
	return xxx_messageInfo_SdkOpenStoragePolicySetDefaultRequest.Size(m)
}
func (m *SdkOpenStoragePolicySetDefaultRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkOpenStoragePolicySetDefaultRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkOpenStoragePolicySetDefaultRequest proto.InternalMessageInfo

func (m *SdkOpenStoragePolicySetDefaultRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Empty Response
type SdkOpenStoragePolicySetDefaultResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkOpenStoragePolicySetDefaultResponse) Reset() {
	*m = SdkOpenStoragePolicySetDefaultResponse{}
}
func (m *SdkOpenStoragePolicySetDefaultResponse) String() string { return proto.CompactTextString(m) }
func (*SdkOpenStoragePolicySetDefaultResponse) ProtoMessage()    {}
func (*SdkOpenStoragePolicySetDefaultResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{97}
}
func (m *SdkOpenStoragePolicySetDefaultResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkOpenStoragePolicySetDefaultResponse.Unmarshal(m, b)
}
func (m *SdkOpenStoragePolicySetDefaultResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkOpenStoragePolicySetDefaultResponse.Marshal(b, m, deterministic)
}
func (dst *SdkOpenStoragePolicySetDefaultResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkOpenStoragePolicySetDefaultResponse.Merge(dst, src)
}
func (m *SdkOpenStoragePolicySetDefaultResponse) XXX_Size() int {
	return xxx_messageInfo_SdkOpenStoragePolicySetDefaultResponse.Size(m)
}
func (m *SdkOpenStoragePolicySetDefaultResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkOpenStoragePolicySetDefaultResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkOpenStoragePolicySetDefaultResponse proto.InternalMessageInfo

// Empty Request
type SdkOpenStoragePolicyReleaseRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkOpenStoragePolicyReleaseRequest) Reset()         { *m = SdkOpenStoragePolicyReleaseRequest{} }
func (m *SdkOpenStoragePolicyReleaseRequest) String() string { return proto.CompactTextString(m) }
func (*SdkOpenStoragePolicyReleaseRequest) ProtoMessage()    {}
func (*SdkOpenStoragePolicyReleaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{98}
}
func (m *SdkOpenStoragePolicyReleaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkOpenStoragePolicyReleaseRequest.Unmarshal(m, b)
}
func (m *SdkOpenStoragePolicyReleaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkOpenStoragePolicyReleaseRequest.Marshal(b, m, deterministic)
}
func (dst *SdkOpenStoragePolicyReleaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkOpenStoragePolicyReleaseRequest.Merge(dst, src)
}
func (m *SdkOpenStoragePolicyReleaseRequest) XXX_Size() int {
	return xxx_messageInfo_SdkOpenStoragePolicyReleaseRequest.Size(m)
}
func (m *SdkOpenStoragePolicyReleaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkOpenStoragePolicyReleaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkOpenStoragePolicyReleaseRequest proto.InternalMessageInfo

// Empty Response
type SdkOpenStoragePolicyReleaseResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkOpenStoragePolicyReleaseResponse) Reset()         { *m = SdkOpenStoragePolicyReleaseResponse{} }
func (m *SdkOpenStoragePolicyReleaseResponse) String() string { return proto.CompactTextString(m) }
func (*SdkOpenStoragePolicyReleaseResponse) ProtoMessage()    {}
func (*SdkOpenStoragePolicyReleaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{99}
}
func (m *SdkOpenStoragePolicyReleaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkOpenStoragePolicyReleaseResponse.Unmarshal(m, b)
}
func (m *SdkOpenStoragePolicyReleaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkOpenStoragePolicyReleaseResponse.Marshal(b, m, deterministic)
}
func (dst *SdkOpenStoragePolicyReleaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkOpenStoragePolicyReleaseResponse.Merge(dst, src)
}
func (m *SdkOpenStoragePolicyReleaseResponse) XXX_Size() int {
	return xxx_messageInfo_SdkOpenStoragePolicyReleaseResponse.Size(m)
}
func (m *SdkOpenStoragePolicyReleaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkOpenStoragePolicyReleaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkOpenStoragePolicyReleaseResponse proto.InternalMessageInfo

// Empty Request
type SdkOpenStoragePolicyDefaultInspectRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkOpenStoragePolicyDefaultInspectRequest) Reset() {
	*m = SdkOpenStoragePolicyDefaultInspectRequest{}
}
func (m *SdkOpenStoragePolicyDefaultInspectRequest) String() string { return proto.CompactTextString(m) }
func (*SdkOpenStoragePolicyDefaultInspectRequest) ProtoMessage()    {}
func (*SdkOpenStoragePolicyDefaultInspectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{100}
}
func (m *SdkOpenStoragePolicyDefaultInspectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkOpenStoragePolicyDefaultInspectRequest.Unmarshal(m, b)
}
func (m *SdkOpenStoragePolicyDefaultInspectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkOpenStoragePolicyDefaultInspectRequest.Marshal(b, m, deterministic)
}
func (dst *SdkOpenStoragePolicyDefaultInspectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkOpenStoragePolicyDefaultInspectRequest.Merge(dst, src)
}
func (m *SdkOpenStoragePolicyDefaultInspectRequest) XXX_Size() int {
	return xxx_messageInfo_SdkOpenStoragePolicyDefaultInspectRequest.Size(m)
}
func (m *SdkOpenStoragePolicyDefaultInspectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkOpenStoragePolicyDefaultInspectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkOpenStoragePolicyDefaultInspectRequest proto.InternalMessageInfo

// Define default storage policy response
type SdkOpenStoragePolicyDefaultInspectResponse struct {
	// storage policy information which is set as default
	StoragePolicy        *SdkStoragePolicy `protobuf:"bytes,1,opt,name=storage_policy,json=storagePolicy" json:"storage_policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SdkOpenStoragePolicyDefaultInspectResponse) Reset() {
	*m = SdkOpenStoragePolicyDefaultInspectResponse{}
}
func (m *SdkOpenStoragePolicyDefaultInspectResponse) String() string {
	return proto.CompactTextString(m)
}
func (*SdkOpenStoragePolicyDefaultInspectResponse) ProtoMessage() {}
func (*SdkOpenStoragePolicyDefaultInspectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{101}
}
func (m *SdkOpenStoragePolicyDefaultInspectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkOpenStoragePolicyDefaultInspectResponse.Unmarshal(m, b)
}
func (m *SdkOpenStoragePolicyDefaultInspectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkOpenStoragePolicyDefaultInspectResponse.Marshal(b, m, deterministic)
}
func (dst *SdkOpenStoragePolicyDefaultInspectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkOpenStoragePolicyDefaultInspectResponse.Merge(dst, src)
}
func (m *SdkOpenStoragePolicyDefaultInspectResponse) XXX_Size() int {
	return xxx_messageInfo_SdkOpenStoragePolicyDefaultInspectResponse.Size(m)
}
func (m *SdkOpenStoragePolicyDefaultInspectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkOpenStoragePolicyDefaultInspectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkOpenStoragePolicyDefaultInspectResponse proto.InternalMessageInfo

func (m *SdkOpenStoragePolicyDefaultInspectResponse) GetStoragePolicy() *SdkStoragePolicy {
	if m != nil {
		return m.StoragePolicy
	}
	return nil
}

// Define a schedule policy request
type SdkSchedulePolicyCreateRequest struct {
	// Schedule Policy
	SchedulePolicy       *SdkSchedulePolicy `protobuf:"bytes,1,opt,name=schedule_policy,json=schedulePolicy" json:"schedule_policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SdkSchedulePolicyCreateRequest) Reset()         { *m = SdkSchedulePolicyCreateRequest{} }
func (m *SdkSchedulePolicyCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyCreateRequest) ProtoMessage()    {}
func (*SdkSchedulePolicyCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{102}
}
func (m *SdkSchedulePolicyCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyCreateRequest.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyCreateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyCreateRequest.Merge(dst, src)
}
func (m *SdkSchedulePolicyCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyCreateRequest.Size(m)
}
func (m *SdkSchedulePolicyCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyCreateRequest proto.InternalMessageInfo

func (m *SdkSchedulePolicyCreateRequest) GetSchedulePolicy() *SdkSchedulePolicy {
	if m != nil {
		return m.SchedulePolicy
	}
	return nil
}

// Empty response
type SdkSchedulePolicyCreateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyCreateResponse) Reset()         { *m = SdkSchedulePolicyCreateResponse{} }
func (m *SdkSchedulePolicyCreateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyCreateResponse) ProtoMessage()    {}
func (*SdkSchedulePolicyCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{103}
}
func (m *SdkSchedulePolicyCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyCreateResponse.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyCreateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyCreateResponse.Merge(dst, src)
}
func (m *SdkSchedulePolicyCreateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyCreateResponse.Size(m)
}
func (m *SdkSchedulePolicyCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyCreateResponse proto.InternalMessageInfo

// Define a request to update a schedule policy
type SdkSchedulePolicyUpdateRequest struct {
	// Schedule Policy
	SchedulePolicy       *SdkSchedulePolicy `protobuf:"bytes,1,opt,name=schedule_policy,json=schedulePolicy" json:"schedule_policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SdkSchedulePolicyUpdateRequest) Reset()         { *m = SdkSchedulePolicyUpdateRequest{} }
func (m *SdkSchedulePolicyUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyUpdateRequest) ProtoMessage()    {}
func (*SdkSchedulePolicyUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{104}
}
func (m *SdkSchedulePolicyUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyUpdateRequest.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyUpdateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyUpdateRequest.Merge(dst, src)
}
func (m *SdkSchedulePolicyUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyUpdateRequest.Size(m)
}
func (m *SdkSchedulePolicyUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyUpdateRequest proto.InternalMessageInfo

func (m *SdkSchedulePolicyUpdateRequest) GetSchedulePolicy() *SdkSchedulePolicy {
	if m != nil {
		return m.SchedulePolicy
	}
	return nil
}

// Empty response
type SdkSchedulePolicyUpdateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyUpdateResponse) Reset()         { *m = SdkSchedulePolicyUpdateResponse{} }
func (m *SdkSchedulePolicyUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyUpdateResponse) ProtoMessage()    {}
func (*SdkSchedulePolicyUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{105}
}
func (m *SdkSchedulePolicyUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyUpdateResponse.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyUpdateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyUpdateResponse.Merge(dst, src)
}
func (m *SdkSchedulePolicyUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyUpdateResponse.Size(m)
}
func (m *SdkSchedulePolicyUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyUpdateResponse proto.InternalMessageInfo

// Empty request
type SdkSchedulePolicyEnumerateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyEnumerateRequest) Reset()         { *m = SdkSchedulePolicyEnumerateRequest{} }
func (m *SdkSchedulePolicyEnumerateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyEnumerateRequest) ProtoMessage()    {}
func (*SdkSchedulePolicyEnumerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{106}
}
func (m *SdkSchedulePolicyEnumerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyEnumerateRequest.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyEnumerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyEnumerateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyEnumerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyEnumerateRequest.Merge(dst, src)
}
func (m *SdkSchedulePolicyEnumerateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyEnumerateRequest.Size(m)
}
func (m *SdkSchedulePolicyEnumerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyEnumerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyEnumerateRequest proto.InternalMessageInfo

// Defines a schedule policy enumerate response
type SdkSchedulePolicyEnumerateResponse struct {
	// List of Schedule Policy
	Policies             []*SdkSchedulePolicy `protobuf:"bytes,1,rep,name=policies" json:"policies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SdkSchedulePolicyEnumerateResponse) Reset()         { *m = SdkSchedulePolicyEnumerateResponse{} }
func (m *SdkSchedulePolicyEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyEnumerateResponse) ProtoMessage()    {}
func (*SdkSchedulePolicyEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{107}
}
func (m *SdkSchedulePolicyEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyEnumerateResponse.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyEnumerateResponse.Merge(dst, src)
}
func (m *SdkSchedulePolicyEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyEnumerateResponse.Size(m)
}
func (m *SdkSchedulePolicyEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyEnumerateResponse proto.InternalMessageInfo

func (m *SdkSchedulePolicyEnumerateResponse) GetPolicies() []*SdkSchedulePolicy {
	if m != nil {
		return m.Policies
	}
	return nil
}

// Define a schedule policy inspection request
type SdkSchedulePolicyInspectRequest struct {
	// Name of the schedule Policy
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyInspectRequest) Reset()         { *m = SdkSchedulePolicyInspectRequest{} }
func (m *SdkSchedulePolicyInspectRequest) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyInspectRequest) ProtoMessage()    {}
func (*SdkSchedulePolicyInspectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{108}
}
func (m *SdkSchedulePolicyInspectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyInspectRequest.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyInspectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyInspectRequest.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyInspectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyInspectRequest.Merge(dst, src)
}
func (m *SdkSchedulePolicyInspectRequest) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyInspectRequest.Size(m)
}
func (m *SdkSchedulePolicyInspectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyInspectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyInspectRequest proto.InternalMessageInfo

func (m *SdkSchedulePolicyInspectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Defines a schedule policy inspection response
type SdkSchedulePolicyInspectResponse struct {
	// List of Schedule Policy
	Policy               *SdkSchedulePolicy `protobuf:"bytes,1,opt,name=policy" json:"policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SdkSchedulePolicyInspectResponse) Reset()         { *m = SdkSchedulePolicyInspectResponse{} }
func (m *SdkSchedulePolicyInspectResponse) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyInspectResponse) ProtoMessage()    {}
func (*SdkSchedulePolicyInspectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{109}
}
func (m *SdkSchedulePolicyInspectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyInspectResponse.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyInspectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyInspectResponse.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyInspectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyInspectResponse.Merge(dst, src)
}
func (m *SdkSchedulePolicyInspectResponse) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyInspectResponse.Size(m)
}
func (m *SdkSchedulePolicyInspectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyInspectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyInspectResponse proto.InternalMessageInfo

func (m *SdkSchedulePolicyInspectResponse) GetPolicy() *SdkSchedulePolicy {
	if m != nil {
		return m.Policy
	}
	return nil
}

// Define schedule policy deletion request
type SdkSchedulePolicyDeleteRequest struct {
	// Name of the schedule policy
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyDeleteRequest) Reset()         { *m = SdkSchedulePolicyDeleteRequest{} }
func (m *SdkSchedulePolicyDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyDeleteRequest) ProtoMessage()    {}
func (*SdkSchedulePolicyDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{110}
}
func (m *SdkSchedulePolicyDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyDeleteRequest.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyDeleteRequest.Merge(dst, src)
}
func (m *SdkSchedulePolicyDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyDeleteRequest.Size(m)
}
func (m *SdkSchedulePolicyDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyDeleteRequest proto.InternalMessageInfo

func (m *SdkSchedulePolicyDeleteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Empty response
type SdkSchedulePolicyDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyDeleteResponse) Reset()         { *m = SdkSchedulePolicyDeleteResponse{} }
func (m *SdkSchedulePolicyDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyDeleteResponse) ProtoMessage()    {}
func (*SdkSchedulePolicyDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{111}
}
func (m *SdkSchedulePolicyDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyDeleteResponse.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyDeleteResponse.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyDeleteResponse.Merge(dst, src)
}
func (m *SdkSchedulePolicyDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyDeleteResponse.Size(m)
}
func (m *SdkSchedulePolicyDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyDeleteResponse proto.InternalMessageInfo

// Defines a daily schedule
type SdkSchedulePolicyIntervalDaily struct {
	// Range: 0-23
	Hour int32 `protobuf:"varint,1,opt,name=hour" json:"hour,omitempty"`
	// Range: 0-59
	Minute               int32    `protobuf:"varint,2,opt,name=minute" json:"minute,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyIntervalDaily) Reset()         { *m = SdkSchedulePolicyIntervalDaily{} }
func (m *SdkSchedulePolicyIntervalDaily) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyIntervalDaily) ProtoMessage()    {}
func (*SdkSchedulePolicyIntervalDaily) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{112}
}
func (m *SdkSchedulePolicyIntervalDaily) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyIntervalDaily.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyIntervalDaily) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyIntervalDaily.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyIntervalDaily) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyIntervalDaily.Merge(dst, src)
}
func (m *SdkSchedulePolicyIntervalDaily) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyIntervalDaily.Size(m)
}
func (m *SdkSchedulePolicyIntervalDaily) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyIntervalDaily.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyIntervalDaily proto.InternalMessageInfo

func (m *SdkSchedulePolicyIntervalDaily) GetHour() int32 {
	if m != nil {
		return m.Hour
	}
	return 0
}

func (m *SdkSchedulePolicyIntervalDaily) GetMinute() int32 {
	if m != nil {
		return m.Minute
	}
	return 0
}

// Defines a weekly schedule
type SdkSchedulePolicyIntervalWeekly struct {
	Day SdkTimeWeekday `protobuf:"varint,1,opt,name=day,enum=openstorage.api.SdkTimeWeekday" json:"day,omitempty"`
	// Range: 0-23
	Hour int32 `protobuf:"varint,2,opt,name=hour" json:"hour,omitempty"`
	// Range: 0-59
	Minute               int32    `protobuf:"varint,3,opt,name=minute" json:"minute,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyIntervalWeekly) Reset()         { *m = SdkSchedulePolicyIntervalWeekly{} }
func (m *SdkSchedulePolicyIntervalWeekly) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyIntervalWeekly) ProtoMessage()    {}
func (*SdkSchedulePolicyIntervalWeekly) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{113}
}
func (m *SdkSchedulePolicyIntervalWeekly) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyIntervalWeekly.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyIntervalWeekly) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyIntervalWeekly.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyIntervalWeekly) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyIntervalWeekly.Merge(dst, src)
}
func (m *SdkSchedulePolicyIntervalWeekly) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyIntervalWeekly.Size(m)
}
func (m *SdkSchedulePolicyIntervalWeekly) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyIntervalWeekly.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyIntervalWeekly proto.InternalMessageInfo

func (m *SdkSchedulePolicyIntervalWeekly) GetDay() SdkTimeWeekday {
	if m != nil {
		return m.Day
	}
	return SdkTimeWeekday_SdkTimeWeekdaySunday
}

func (m *SdkSchedulePolicyIntervalWeekly) GetHour() int32 {
	if m != nil {
		return m.Hour
	}
	return 0
}

func (m *SdkSchedulePolicyIntervalWeekly) GetMinute() int32 {
	if m != nil {
		return m.Minute
	}
	return 0
}

// Defines a monthly schedule
type SdkSchedulePolicyIntervalMonthly struct {
	// Range: 1-28
	Day int32 `protobuf:"varint,1,opt,name=day" json:"day,omitempty"`
	// Range: 0-59
	Hour int32 `protobuf:"varint,2,opt,name=hour" json:"hour,omitempty"`
	// Range: 0-59
	Minute               int32    `protobuf:"varint,3,opt,name=minute" json:"minute,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyIntervalMonthly) Reset()         { *m = SdkSchedulePolicyIntervalMonthly{} }
func (m *SdkSchedulePolicyIntervalMonthly) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyIntervalMonthly) ProtoMessage()    {}
func (*SdkSchedulePolicyIntervalMonthly) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{114}
}
func (m *SdkSchedulePolicyIntervalMonthly) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyIntervalMonthly.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyIntervalMonthly) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyIntervalMonthly.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyIntervalMonthly) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyIntervalMonthly.Merge(dst, src)
}
func (m *SdkSchedulePolicyIntervalMonthly) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyIntervalMonthly.Size(m)
}
func (m *SdkSchedulePolicyIntervalMonthly) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyIntervalMonthly.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyIntervalMonthly proto.InternalMessageInfo

func (m *SdkSchedulePolicyIntervalMonthly) GetDay() int32 {
	if m != nil {
		return m.Day
	}
	return 0
}

func (m *SdkSchedulePolicyIntervalMonthly) GetHour() int32 {
	if m != nil {
		return m.Hour
	}
	return 0
}

func (m *SdkSchedulePolicyIntervalMonthly) GetMinute() int32 {
	if m != nil {
		return m.Minute
	}
	return 0
}

// Defines a periodic schedule
type SdkSchedulePolicyIntervalPeriodic struct {
	// Specify the number of seconds between intervals
	Seconds              int64    `protobuf:"varint,1,opt,name=seconds" json:"seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkSchedulePolicyIntervalPeriodic) Reset()         { *m = SdkSchedulePolicyIntervalPeriodic{} }
func (m *SdkSchedulePolicyIntervalPeriodic) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyIntervalPeriodic) ProtoMessage()    {}
func (*SdkSchedulePolicyIntervalPeriodic) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{115}
}
func (m *SdkSchedulePolicyIntervalPeriodic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyIntervalPeriodic.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyIntervalPeriodic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyIntervalPeriodic.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyIntervalPeriodic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyIntervalPeriodic.Merge(dst, src)
}
func (m *SdkSchedulePolicyIntervalPeriodic) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyIntervalPeriodic.Size(m)
}
func (m *SdkSchedulePolicyIntervalPeriodic) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyIntervalPeriodic.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyIntervalPeriodic proto.InternalMessageInfo

func (m *SdkSchedulePolicyIntervalPeriodic) GetSeconds() int64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

// Defines a schedule policy interval
type SdkSchedulePolicyInterval struct {
	// Number of instances to retain
	Retain int64 `protobuf:"varint,1,opt,name=retain" json:"retain,omitempty"`
	// Start oneof at field number 200 to allow for expansion
	//
	// Types that are valid to be assigned to PeriodType:
	//	*SdkSchedulePolicyInterval_Daily
	//	*SdkSchedulePolicyInterval_Weekly
	//	*SdkSchedulePolicyInterval_Monthly
	//	*SdkSchedulePolicyInterval_Periodic
	PeriodType           isSdkSchedulePolicyInterval_PeriodType `protobuf_oneof:"period_type"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *SdkSchedulePolicyInterval) Reset()         { *m = SdkSchedulePolicyInterval{} }
func (m *SdkSchedulePolicyInterval) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicyInterval) ProtoMessage()    {}
func (*SdkSchedulePolicyInterval) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{116}
}
func (m *SdkSchedulePolicyInterval) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicyInterval.Unmarshal(m, b)
}
func (m *SdkSchedulePolicyInterval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicyInterval.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicyInterval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicyInterval.Merge(dst, src)
}
func (m *SdkSchedulePolicyInterval) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicyInterval.Size(m)
}
func (m *SdkSchedulePolicyInterval) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicyInterval.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicyInterval proto.InternalMessageInfo

type isSdkSchedulePolicyInterval_PeriodType interface {
	isSdkSchedulePolicyInterval_PeriodType()
}

type SdkSchedulePolicyInterval_Daily struct {
	Daily *SdkSchedulePolicyIntervalDaily `protobuf:"bytes,200,opt,name=daily,oneof"`
}
type SdkSchedulePolicyInterval_Weekly struct {
	Weekly *SdkSchedulePolicyIntervalWeekly `protobuf:"bytes,201,opt,name=weekly,oneof"`
}
type SdkSchedulePolicyInterval_Monthly struct {
	Monthly *SdkSchedulePolicyIntervalMonthly `protobuf:"bytes,202,opt,name=monthly,oneof"`
}
type SdkSchedulePolicyInterval_Periodic struct {
	Periodic *SdkSchedulePolicyIntervalPeriodic `protobuf:"bytes,203,opt,name=periodic,oneof"`
}

func (*SdkSchedulePolicyInterval_Daily) isSdkSchedulePolicyInterval_PeriodType()    {}
func (*SdkSchedulePolicyInterval_Weekly) isSdkSchedulePolicyInterval_PeriodType()   {}
func (*SdkSchedulePolicyInterval_Monthly) isSdkSchedulePolicyInterval_PeriodType()  {}
func (*SdkSchedulePolicyInterval_Periodic) isSdkSchedulePolicyInterval_PeriodType() {}

func (m *SdkSchedulePolicyInterval) GetPeriodType() isSdkSchedulePolicyInterval_PeriodType {
	if m != nil {
		return m.PeriodType
	}
	return nil
}

func (m *SdkSchedulePolicyInterval) GetRetain() int64 {
	if m != nil {
		return m.Retain
	}
	return 0
}

func (m *SdkSchedulePolicyInterval) GetDaily() *SdkSchedulePolicyIntervalDaily {
	if x, ok := m.GetPeriodType().(*SdkSchedulePolicyInterval_Daily); ok {
		return x.Daily
	}
	return nil
}

func (m *SdkSchedulePolicyInterval) GetWeekly() *SdkSchedulePolicyIntervalWeekly {
	if x, ok := m.GetPeriodType().(*SdkSchedulePolicyInterval_Weekly); ok {
		return x.Weekly
	}
	return nil
}

func (m *SdkSchedulePolicyInterval) GetMonthly() *SdkSchedulePolicyIntervalMonthly {
	if x, ok := m.GetPeriodType().(*SdkSchedulePolicyInterval_Monthly); ok {
		return x.Monthly
	}
	return nil
}

func (m *SdkSchedulePolicyInterval) GetPeriodic() *SdkSchedulePolicyIntervalPeriodic {
	if x, ok := m.GetPeriodType().(*SdkSchedulePolicyInterval_Periodic); ok {
		return x.Periodic
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SdkSchedulePolicyInterval) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SdkSchedulePolicyInterval_OneofMarshaler, _SdkSchedulePolicyInterval_OneofUnmarshaler, _SdkSchedulePolicyInterval_OneofSizer, []interface{}{
		(*SdkSchedulePolicyInterval_Daily)(nil),
		(*SdkSchedulePolicyInterval_Weekly)(nil),
		(*SdkSchedulePolicyInterval_Monthly)(nil),
		(*SdkSchedulePolicyInterval_Periodic)(nil),
	}
}

func _SdkSchedulePolicyInterval_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SdkSchedulePolicyInterval)
	// period_type
	switch x := m.PeriodType.(type) {
	case *SdkSchedulePolicyInterval_Daily:
		b.EncodeVarint(200<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Daily); err != nil {
			return err
		}
	case *SdkSchedulePolicyInterval_Weekly:
		b.EncodeVarint(201<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Weekly); err != nil {
			return err
		}
	case *SdkSchedulePolicyInterval_Monthly:
		b.EncodeVarint(202<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Monthly); err != nil {
			return err
		}
	case *SdkSchedulePolicyInterval_Periodic:
		b.EncodeVarint(203<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Periodic); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SdkSchedulePolicyInterval.PeriodType has unexpected type %T", x)
	}
	return nil
}

func _SdkSchedulePolicyInterval_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SdkSchedulePolicyInterval)
	switch tag {
	case 200: // period_type.daily
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkSchedulePolicyIntervalDaily)
		err := b.DecodeMessage(msg)
		m.PeriodType = &SdkSchedulePolicyInterval_Daily{msg}
		return true, err
	case 201: // period_type.weekly
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkSchedulePolicyIntervalWeekly)
		err := b.DecodeMessage(msg)
		m.PeriodType = &SdkSchedulePolicyInterval_Weekly{msg}
		return true, err
	case 202: // period_type.monthly
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkSchedulePolicyIntervalMonthly)
		err := b.DecodeMessage(msg)
		m.PeriodType = &SdkSchedulePolicyInterval_Monthly{msg}
		return true, err
	case 203: // period_type.periodic
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkSchedulePolicyIntervalPeriodic)
		err := b.DecodeMessage(msg)
		m.PeriodType = &SdkSchedulePolicyInterval_Periodic{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SdkSchedulePolicyInterval_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SdkSchedulePolicyInterval)
	// period_type
	switch x := m.PeriodType.(type) {
	case *SdkSchedulePolicyInterval_Daily:
		s := proto.Size(x.Daily)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SdkSchedulePolicyInterval_Weekly:
		s := proto.Size(x.Weekly)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SdkSchedulePolicyInterval_Monthly:
		s := proto.Size(x.Monthly)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SdkSchedulePolicyInterval_Periodic:
		s := proto.Size(x.Periodic)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Defines a schedule policy
type SdkSchedulePolicy struct {
	// Name of the schedule policy
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Schedule policies
	Schedules            []*SdkSchedulePolicyInterval `protobuf:"bytes,2,rep,name=schedules" json:"schedules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *SdkSchedulePolicy) Reset()         { *m = SdkSchedulePolicy{} }
func (m *SdkSchedulePolicy) String() string { return proto.CompactTextString(m) }
func (*SdkSchedulePolicy) ProtoMessage()    {}
func (*SdkSchedulePolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{117}
}
func (m *SdkSchedulePolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkSchedulePolicy.Unmarshal(m, b)
}
func (m *SdkSchedulePolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkSchedulePolicy.Marshal(b, m, deterministic)
}
func (dst *SdkSchedulePolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkSchedulePolicy.Merge(dst, src)
}
func (m *SdkSchedulePolicy) XXX_Size() int {
	return xxx_messageInfo_SdkSchedulePolicy.Size(m)
}
func (m *SdkSchedulePolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkSchedulePolicy.DiscardUnknown(m)
}

var xxx_messageInfo_SdkSchedulePolicy proto.InternalMessageInfo

func (m *SdkSchedulePolicy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SdkSchedulePolicy) GetSchedules() []*SdkSchedulePolicyInterval {
	if m != nil {
		return m.Schedules
	}
	return nil
}

// Defines a request to create credentials
type SdkCredentialCreateRequest struct {
	// Name of the credential
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// (optional) Name of bucket
	Bucket string `protobuf:"bytes,2,opt,name=bucket" json:"bucket,omitempty"`
	// (optional) Key used to encrypt the data
	EncryptionKey string `protobuf:"bytes,3,opt,name=encryption_key,json=encryptionKey" json:"encryption_key,omitempty"`
	// Ownership of the credential. Collaborators and groups may be
	// added here with their appropriate ACLS.
	Ownership *Ownership `protobuf:"bytes,4,opt,name=ownership" json:"ownership,omitempty"`
	// use_proxy indicates if a proxy must be used
	UseProxy bool `protobuf:"varint,5,opt,name=use_proxy,json=useProxy" json:"use_proxy,omitempty"`
	// iamPolicy indicates if IAM creds must be used for access
	IamPolicy bool `protobuf:"varint,6,opt,name=iam_policy,json=iamPolicy" json:"iam_policy,omitempty"`
	// s3StorageClass for object puts, empty indicates default STANDARD
	S3StorageClass string `protobuf:"bytes,7,opt,name=s3_storage_class,json=s3StorageClass" json:"s3_storage_class,omitempty"`
	// Start at field number 200 to allow for expansion
	//
	// Types that are valid to be assigned to CredentialType:
	//	*SdkCredentialCreateRequest_AwsCredential
	//	*SdkCredentialCreateRequest_AzureCredential
	//	*SdkCredentialCreateRequest_GoogleCredential
	//	*SdkCredentialCreateRequest_NfsCredential
	CredentialType       isSdkCredentialCreateRequest_CredentialType `protobuf_oneof:"credential_type"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *SdkCredentialCreateRequest) Reset()         { *m = SdkCredentialCreateRequest{} }
func (m *SdkCredentialCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialCreateRequest) ProtoMessage()    {}
func (*SdkCredentialCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{118}
}
func (m *SdkCredentialCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialCreateRequest.Unmarshal(m, b)
}
func (m *SdkCredentialCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialCreateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialCreateRequest.Merge(dst, src)
}
func (m *SdkCredentialCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialCreateRequest.Size(m)
}
func (m *SdkCredentialCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialCreateRequest proto.InternalMessageInfo

type isSdkCredentialCreateRequest_CredentialType interface {
	isSdkCredentialCreateRequest_CredentialType()
}

type SdkCredentialCreateRequest_AwsCredential struct {
	AwsCredential *SdkAwsCredentialRequest `protobuf:"bytes,200,opt,name=aws_credential,json=awsCredential,oneof"`
}
type SdkCredentialCreateRequest_AzureCredential struct {
	AzureCredential *SdkAzureCredentialRequest `protobuf:"bytes,201,opt,name=azure_credential,json=azureCredential,oneof"`
}
type SdkCredentialCreateRequest_GoogleCredential struct {
	GoogleCredential *SdkGoogleCredentialRequest `protobuf:"bytes,202,opt,name=google_credential,json=googleCredential,oneof"`
}
type SdkCredentialCreateRequest_NfsCredential struct {
	NfsCredential *SdkNfsCredentialRequest `protobuf:"bytes,203,opt,name=nfs_credential,json=nfsCredential,oneof"`
}

func (*SdkCredentialCreateRequest_AwsCredential) isSdkCredentialCreateRequest_CredentialType()    {}
func (*SdkCredentialCreateRequest_AzureCredential) isSdkCredentialCreateRequest_CredentialType()  {}
func (*SdkCredentialCreateRequest_GoogleCredential) isSdkCredentialCreateRequest_CredentialType() {}
func (*SdkCredentialCreateRequest_NfsCredential) isSdkCredentialCreateRequest_CredentialType()    {}

func (m *SdkCredentialCreateRequest) GetCredentialType() isSdkCredentialCreateRequest_CredentialType {
	if m != nil {
		return m.CredentialType
	}
	return nil
}

func (m *SdkCredentialCreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SdkCredentialCreateRequest) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *SdkCredentialCreateRequest) GetEncryptionKey() string {
	if m != nil {
		return m.EncryptionKey
	}
	return ""
}

func (m *SdkCredentialCreateRequest) GetOwnership() *Ownership {
	if m != nil {
		return m.Ownership
	}
	return nil
}

func (m *SdkCredentialCreateRequest) GetUseProxy() bool {
	if m != nil {
		return m.UseProxy
	}
	return false
}

func (m *SdkCredentialCreateRequest) GetIamPolicy() bool {
	if m != nil {
		return m.IamPolicy
	}
	return false
}

func (m *SdkCredentialCreateRequest) GetS3StorageClass() string {
	if m != nil {
		return m.S3StorageClass
	}
	return ""
}

func (m *SdkCredentialCreateRequest) GetAwsCredential() *SdkAwsCredentialRequest {
	if x, ok := m.GetCredentialType().(*SdkCredentialCreateRequest_AwsCredential); ok {
		return x.AwsCredential
	}
	return nil
}

func (m *SdkCredentialCreateRequest) GetAzureCredential() *SdkAzureCredentialRequest {
	if x, ok := m.GetCredentialType().(*SdkCredentialCreateRequest_AzureCredential); ok {
		return x.AzureCredential
	}
	return nil
}

func (m *SdkCredentialCreateRequest) GetGoogleCredential() *SdkGoogleCredentialRequest {
	if x, ok := m.GetCredentialType().(*SdkCredentialCreateRequest_GoogleCredential); ok {
		return x.GoogleCredential
	}
	return nil
}

func (m *SdkCredentialCreateRequest) GetNfsCredential() *SdkNfsCredentialRequest {
	if x, ok := m.GetCredentialType().(*SdkCredentialCreateRequest_NfsCredential); ok {
		return x.NfsCredential
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SdkCredentialCreateRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SdkCredentialCreateRequest_OneofMarshaler, _SdkCredentialCreateRequest_OneofUnmarshaler, _SdkCredentialCreateRequest_OneofSizer, []interface{}{
		(*SdkCredentialCreateRequest_AwsCredential)(nil),
		(*SdkCredentialCreateRequest_AzureCredential)(nil),
		(*SdkCredentialCreateRequest_GoogleCredential)(nil),
		(*SdkCredentialCreateRequest_NfsCredential)(nil),
	}
}

func _SdkCredentialCreateRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SdkCredentialCreateRequest)
	// credential_type
	switch x := m.CredentialType.(type) {
	case *SdkCredentialCreateRequest_AwsCredential:
		b.EncodeVarint(200<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AwsCredential); err != nil {
			return err
		}
	case *SdkCredentialCreateRequest_AzureCredential:
		b.EncodeVarint(201<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AzureCredential); err != nil {
			return err
		}
	case *SdkCredentialCreateRequest_GoogleCredential:
		b.EncodeVarint(202<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GoogleCredential); err != nil {
			return err
		}
	case *SdkCredentialCreateRequest_NfsCredential:
		b.EncodeVarint(203<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NfsCredential); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SdkCredentialCreateRequest.CredentialType has unexpected type %T", x)
	}
	return nil
}

func _SdkCredentialCreateRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SdkCredentialCreateRequest)
	switch tag {
	case 200: // credential_type.aws_credential
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkAwsCredentialRequest)
		err := b.DecodeMessage(msg)
		m.CredentialType = &SdkCredentialCreateRequest_AwsCredential{msg}
		return true, err
	case 201: // credential_type.azure_credential
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkAzureCredentialRequest)
		err := b.DecodeMessage(msg)
		m.CredentialType = &SdkCredentialCreateRequest_AzureCredential{msg}
		return true, err
	case 202: // credential_type.google_credential
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkGoogleCredentialRequest)
		err := b.DecodeMessage(msg)
		m.CredentialType = &SdkCredentialCreateRequest_GoogleCredential{msg}
		return true, err
	case 203: // credential_type.nfs_credential
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkNfsCredentialRequest)
		err := b.DecodeMessage(msg)
		m.CredentialType = &SdkCredentialCreateRequest_NfsCredential{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SdkCredentialCreateRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SdkCredentialCreateRequest)
	// credential_type
	switch x := m.CredentialType.(type) {
	case *SdkCredentialCreateRequest_AwsCredential:
		s := proto.Size(x.AwsCredential)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SdkCredentialCreateRequest_AzureCredential:
		s := proto.Size(x.AzureCredential)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SdkCredentialCreateRequest_GoogleCredential:
		s := proto.Size(x.GoogleCredential)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SdkCredentialCreateRequest_NfsCredential:
		s := proto.Size(x.NfsCredential)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Defines a response from creating a credential
type SdkCredentialCreateResponse struct {
	// Id of the credentials
	CredentialId         string   `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialCreateResponse) Reset()         { *m = SdkCredentialCreateResponse{} }
func (m *SdkCredentialCreateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialCreateResponse) ProtoMessage()    {}
func (*SdkCredentialCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{119}
}
func (m *SdkCredentialCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialCreateResponse.Unmarshal(m, b)
}
func (m *SdkCredentialCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialCreateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialCreateResponse.Merge(dst, src)
}
func (m *SdkCredentialCreateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialCreateResponse.Size(m)
}
func (m *SdkCredentialCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialCreateResponse proto.InternalMessageInfo

func (m *SdkCredentialCreateResponse) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

// Defines request for credential update
type SdkCredentialUpdateRequest struct {
	CredentialId         string                      `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	UpdateReq            *SdkCredentialCreateRequest `protobuf:"bytes,2,opt,name=update_req,json=updateReq" json:"update_req,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *SdkCredentialUpdateRequest) Reset()         { *m = SdkCredentialUpdateRequest{} }
func (m *SdkCredentialUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialUpdateRequest) ProtoMessage()    {}
func (*SdkCredentialUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{120}
}
func (m *SdkCredentialUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialUpdateRequest.Unmarshal(m, b)
}
func (m *SdkCredentialUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialUpdateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialUpdateRequest.Merge(dst, src)
}
func (m *SdkCredentialUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialUpdateRequest.Size(m)
}
func (m *SdkCredentialUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialUpdateRequest proto.InternalMessageInfo

func (m *SdkCredentialUpdateRequest) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

func (m *SdkCredentialUpdateRequest) GetUpdateReq() *SdkCredentialCreateRequest {
	if m != nil {
		return m.UpdateReq
	}
	return nil
}

// Defines response for credential update
type SdkCredentialUpdateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialUpdateResponse) Reset()         { *m = SdkCredentialUpdateResponse{} }
func (m *SdkCredentialUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialUpdateResponse) ProtoMessage()    {}
func (*SdkCredentialUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{121}
}
func (m *SdkCredentialUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialUpdateResponse.Unmarshal(m, b)
}
func (m *SdkCredentialUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialUpdateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialUpdateResponse.Merge(dst, src)
}
func (m *SdkCredentialUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialUpdateResponse.Size(m)
}
func (m *SdkCredentialUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialUpdateResponse proto.InternalMessageInfo

// Defines credentials for Aws/S3 endpoints
type SdkAwsCredentialRequest struct {
	// Access key
	AccessKey string `protobuf:"bytes,1,opt,name=access_key,json=accessKey" json:"access_key,omitempty"`
	// Secret key
	SecretKey string `protobuf:"bytes,2,opt,name=secret_key,json=secretKey" json:"secret_key,omitempty"`
	// Endpoint
	Endpoint string `protobuf:"bytes,3,opt,name=endpoint" json:"endpoint,omitempty"`
	// Region
	Region string `protobuf:"bytes,4,opt,name=region" json:"region,omitempty"`
	// (optional) Disable SSL connection
	DisableSsl bool `protobuf:"varint,5,opt,name=disable_ssl,json=disableSsl" json:"disable_ssl,omitempty"`
	// (optional) Disable path-style access
	DisablePathStyle bool `protobuf:"varint,6,opt,name=disable_path_style,json=disablePathStyle" json:"disable_path_style,omitempty"`
	// (optional) server side encryption
	ServerSideEncryption string   `protobuf:"bytes,7,opt,name=server_side_encryption,json=serverSideEncryption" json:"server_side_encryption,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkAwsCredentialRequest) Reset()         { *m = SdkAwsCredentialRequest{} }
func (m *SdkAwsCredentialRequest) String() string { return proto.CompactTextString(m) }
func (*SdkAwsCredentialRequest) ProtoMessage()    {}
func (*SdkAwsCredentialRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{122}
}
func (m *SdkAwsCredentialRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkAwsCredentialRequest.Unmarshal(m, b)
}
func (m *SdkAwsCredentialRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkAwsCredentialRequest.Marshal(b, m, deterministic)
}
func (dst *SdkAwsCredentialRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkAwsCredentialRequest.Merge(dst, src)
}
func (m *SdkAwsCredentialRequest) XXX_Size() int {
	return xxx_messageInfo_SdkAwsCredentialRequest.Size(m)
}
func (m *SdkAwsCredentialRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkAwsCredentialRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkAwsCredentialRequest proto.InternalMessageInfo

func (m *SdkAwsCredentialRequest) GetAccessKey() string {
	if m != nil {
		return m.AccessKey
	}
	return ""
}

func (m *SdkAwsCredentialRequest) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *SdkAwsCredentialRequest) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *SdkAwsCredentialRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *SdkAwsCredentialRequest) GetDisableSsl() bool {
	if m != nil {
		return m.DisableSsl
	}
	return false
}

func (m *SdkAwsCredentialRequest) GetDisablePathStyle() bool {
	if m != nil {
		return m.DisablePathStyle
	}
	return false
}

func (m *SdkAwsCredentialRequest) GetServerSideEncryption() string {
	if m != nil {
		return m.ServerSideEncryption
	}
	return ""
}

// Defines credentials for Azure
type SdkAzureCredentialRequest struct {
	// Account name
	AccountName string `protobuf:"bytes,1,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	// Account key
	AccountKey           string   `protobuf:"bytes,2,opt,name=account_key,json=accountKey" json:"account_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkAzureCredentialRequest) Reset()         { *m = SdkAzureCredentialRequest{} }
func (m *SdkAzureCredentialRequest) String() string { return proto.CompactTextString(m) }
func (*SdkAzureCredentialRequest) ProtoMessage()    {}
func (*SdkAzureCredentialRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{123}
}
func (m *SdkAzureCredentialRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkAzureCredentialRequest.Unmarshal(m, b)
}
func (m *SdkAzureCredentialRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkAzureCredentialRequest.Marshal(b, m, deterministic)
}
func (dst *SdkAzureCredentialRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkAzureCredentialRequest.Merge(dst, src)
}
func (m *SdkAzureCredentialRequest) XXX_Size() int {
	return xxx_messageInfo_SdkAzureCredentialRequest.Size(m)
}
func (m *SdkAzureCredentialRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkAzureCredentialRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkAzureCredentialRequest proto.InternalMessageInfo

func (m *SdkAzureCredentialRequest) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *SdkAzureCredentialRequest) GetAccountKey() string {
	if m != nil {
		return m.AccountKey
	}
	return ""
}

// Defines credentials for Google
type SdkGoogleCredentialRequest struct {
	// Project ID
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	// JSON Key
	JsonKey              string   `protobuf:"bytes,2,opt,name=json_key,json=jsonKey" json:"json_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkGoogleCredentialRequest) Reset()         { *m = SdkGoogleCredentialRequest{} }
func (m *SdkGoogleCredentialRequest) String() string { return proto.CompactTextString(m) }
func (*SdkGoogleCredentialRequest) ProtoMessage()    {}
func (*SdkGoogleCredentialRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{124}
}
func (m *SdkGoogleCredentialRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkGoogleCredentialRequest.Unmarshal(m, b)
}
func (m *SdkGoogleCredentialRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkGoogleCredentialRequest.Marshal(b, m, deterministic)
}
func (dst *SdkGoogleCredentialRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkGoogleCredentialRequest.Merge(dst, src)
}
func (m *SdkGoogleCredentialRequest) XXX_Size() int {
	return xxx_messageInfo_SdkGoogleCredentialRequest.Size(m)
}
func (m *SdkGoogleCredentialRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkGoogleCredentialRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkGoogleCredentialRequest proto.InternalMessageInfo

func (m *SdkGoogleCredentialRequest) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *SdkGoogleCredentialRequest) GetJsonKey() string {
	if m != nil {
		return m.JsonKey
	}
	return ""
}

// Defines credentials for NFS
type SdkNfsCredentialRequest struct {
	// NFS Server address
	Server string `protobuf:"bytes,1,opt,name=server" json:"server,omitempty"`
	// NFS export path
	SubPath string `protobuf:"bytes,2,opt,name=sub_path,json=subPath" json:"sub_path,omitempty"`
	// mount options for nfs mount
	MountOpts string `protobuf:"bytes,3,opt,name=mount_opts,json=mountOpts" json:"mount_opts,omitempty"`
	// timeout for nfs IO in seconds
	TimeoutSeconds       uint32   `protobuf:"varint,4,opt,name=timeout_seconds,json=timeoutSeconds" json:"timeout_seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkNfsCredentialRequest) Reset()         { *m = SdkNfsCredentialRequest{} }
func (m *SdkNfsCredentialRequest) String() string { return proto.CompactTextString(m) }
func (*SdkNfsCredentialRequest) ProtoMessage()    {}
func (*SdkNfsCredentialRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{125}
}
func (m *SdkNfsCredentialRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkNfsCredentialRequest.Unmarshal(m, b)
}
func (m *SdkNfsCredentialRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkNfsCredentialRequest.Marshal(b, m, deterministic)
}
func (dst *SdkNfsCredentialRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkNfsCredentialRequest.Merge(dst, src)
}
func (m *SdkNfsCredentialRequest) XXX_Size() int {
	return xxx_messageInfo_SdkNfsCredentialRequest.Size(m)
}
func (m *SdkNfsCredentialRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkNfsCredentialRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkNfsCredentialRequest proto.InternalMessageInfo

func (m *SdkNfsCredentialRequest) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *SdkNfsCredentialRequest) GetSubPath() string {
	if m != nil {
		return m.SubPath
	}
	return ""
}

func (m *SdkNfsCredentialRequest) GetMountOpts() string {
	if m != nil {
		return m.MountOpts
	}
	return ""
}

func (m *SdkNfsCredentialRequest) GetTimeoutSeconds() uint32 {
	if m != nil {
		return m.TimeoutSeconds
	}
	return 0
}

// Defines the response for AWS/S3 credentials
type SdkAwsCredentialResponse struct {
	// Access key
	AccessKey string `protobuf:"bytes,2,opt,name=access_key,json=accessKey" json:"access_key,omitempty"`
	// Endpoint
	Endpoint string `protobuf:"bytes,3,opt,name=endpoint" json:"endpoint,omitempty"`
	// Region
	Region string `protobuf:"bytes,4,opt,name=region" json:"region,omitempty"`
	// (optional) Disable SSL connection
	DisableSsl bool `protobuf:"varint,5,opt,name=disable_ssl,json=disableSsl" json:"disable_ssl,omitempty"`
	// (optional) Disable path-style access
	DisablePathStyle bool `protobuf:"varint,6,opt,name=disable_path_style,json=disablePathStyle" json:"disable_path_style,omitempty"`
	// (optional) Storage class for s3 puts
	S3StorageClass string `protobuf:"bytes,7,opt,name=s3_storage_class,json=s3StorageClass" json:"s3_storage_class,omitempty"`
	// (optional) server side encryption
	ServerSideEncryption string   `protobuf:"bytes,8,opt,name=server_side_encryption,json=serverSideEncryption" json:"server_side_encryption,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkAwsCredentialResponse) Reset()         { *m = SdkAwsCredentialResponse{} }
func (m *SdkAwsCredentialResponse) String() string { return proto.CompactTextString(m) }
func (*SdkAwsCredentialResponse) ProtoMessage()    {}
func (*SdkAwsCredentialResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{126}
}
func (m *SdkAwsCredentialResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkAwsCredentialResponse.Unmarshal(m, b)
}
func (m *SdkAwsCredentialResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkAwsCredentialResponse.Marshal(b, m, deterministic)
}
func (dst *SdkAwsCredentialResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkAwsCredentialResponse.Merge(dst, src)
}
func (m *SdkAwsCredentialResponse) XXX_Size() int {
	return xxx_messageInfo_SdkAwsCredentialResponse.Size(m)
}
func (m *SdkAwsCredentialResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkAwsCredentialResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkAwsCredentialResponse proto.InternalMessageInfo

func (m *SdkAwsCredentialResponse) GetAccessKey() string {
	if m != nil {
		return m.AccessKey
	}
	return ""
}

func (m *SdkAwsCredentialResponse) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *SdkAwsCredentialResponse) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *SdkAwsCredentialResponse) GetDisableSsl() bool {
	if m != nil {
		return m.DisableSsl
	}
	return false
}

func (m *SdkAwsCredentialResponse) GetDisablePathStyle() bool {
	if m != nil {
		return m.DisablePathStyle
	}
	return false
}

func (m *SdkAwsCredentialResponse) GetS3StorageClass() string {
	if m != nil {
		return m.S3StorageClass
	}
	return ""
}

func (m *SdkAwsCredentialResponse) GetServerSideEncryption() string {
	if m != nil {
		return m.ServerSideEncryption
	}
	return ""
}

// Defines the response for Azure credentials
type SdkAzureCredentialResponse struct {
	// Account name
	AccountName          string   `protobuf:"bytes,2,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkAzureCredentialResponse) Reset()         { *m = SdkAzureCredentialResponse{} }
func (m *SdkAzureCredentialResponse) String() string { return proto.CompactTextString(m) }
func (*SdkAzureCredentialResponse) ProtoMessage()    {}
func (*SdkAzureCredentialResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{127}
}
func (m *SdkAzureCredentialResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkAzureCredentialResponse.Unmarshal(m, b)
}
func (m *SdkAzureCredentialResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkAzureCredentialResponse.Marshal(b, m, deterministic)
}
func (dst *SdkAzureCredentialResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkAzureCredentialResponse.Merge(dst, src)
}
func (m *SdkAzureCredentialResponse) XXX_Size() int {
	return xxx_messageInfo_SdkAzureCredentialResponse.Size(m)
}
func (m *SdkAzureCredentialResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkAzureCredentialResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkAzureCredentialResponse proto.InternalMessageInfo

func (m *SdkAzureCredentialResponse) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

// Defines the response for Google credentials
type SdkGoogleCredentialResponse struct {
	// Project ID
	ProjectId            string   `protobuf:"bytes,2,opt,name=project_id,json=projectId" json:"project_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkGoogleCredentialResponse) Reset()         { *m = SdkGoogleCredentialResponse{} }
func (m *SdkGoogleCredentialResponse) String() string { return proto.CompactTextString(m) }
func (*SdkGoogleCredentialResponse) ProtoMessage()    {}
func (*SdkGoogleCredentialResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{128}
}
func (m *SdkGoogleCredentialResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkGoogleCredentialResponse.Unmarshal(m, b)
}
func (m *SdkGoogleCredentialResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkGoogleCredentialResponse.Marshal(b, m, deterministic)
}
func (dst *SdkGoogleCredentialResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkGoogleCredentialResponse.Merge(dst, src)
}
func (m *SdkGoogleCredentialResponse) XXX_Size() int {
	return xxx_messageInfo_SdkGoogleCredentialResponse.Size(m)
}
func (m *SdkGoogleCredentialResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkGoogleCredentialResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkGoogleCredentialResponse proto.InternalMessageInfo

func (m *SdkGoogleCredentialResponse) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

// Defines the response for NFS credential
type SdkNfsCredentialResponse struct {
	// NFS Server Address
	Server string `protobuf:"bytes,1,opt,name=server" json:"server,omitempty"`
	// NFS export path
	SubPath string `protobuf:"bytes,2,opt,name=sub_path,json=subPath" json:"sub_path,omitempty"`
	// mount options ( "," separated)
	MountOpts string `protobuf:"bytes,3,opt,name=mount_opts,json=mountOpts" json:"mount_opts,omitempty"`
	// timeout in seconds
	TimeoutSeconds       uint32   `protobuf:"varint,4,opt,name=timeout_seconds,json=timeoutSeconds" json:"timeout_seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkNfsCredentialResponse) Reset()         { *m = SdkNfsCredentialResponse{} }
func (m *SdkNfsCredentialResponse) String() string { return proto.CompactTextString(m) }
func (*SdkNfsCredentialResponse) ProtoMessage()    {}
func (*SdkNfsCredentialResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{129}
}
func (m *SdkNfsCredentialResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkNfsCredentialResponse.Unmarshal(m, b)
}
func (m *SdkNfsCredentialResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkNfsCredentialResponse.Marshal(b, m, deterministic)
}
func (dst *SdkNfsCredentialResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkNfsCredentialResponse.Merge(dst, src)
}
func (m *SdkNfsCredentialResponse) XXX_Size() int {
	return xxx_messageInfo_SdkNfsCredentialResponse.Size(m)
}
func (m *SdkNfsCredentialResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkNfsCredentialResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkNfsCredentialResponse proto.InternalMessageInfo

func (m *SdkNfsCredentialResponse) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *SdkNfsCredentialResponse) GetSubPath() string {
	if m != nil {
		return m.SubPath
	}
	return ""
}

func (m *SdkNfsCredentialResponse) GetMountOpts() string {
	if m != nil {
		return m.MountOpts
	}
	return ""
}

func (m *SdkNfsCredentialResponse) GetTimeoutSeconds() uint32 {
	if m != nil {
		return m.TimeoutSeconds
	}
	return 0
}

// Empty request
type SdkCredentialEnumerateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialEnumerateRequest) Reset()         { *m = SdkCredentialEnumerateRequest{} }
func (m *SdkCredentialEnumerateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialEnumerateRequest) ProtoMessage()    {}
func (*SdkCredentialEnumerateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{130}
}
func (m *SdkCredentialEnumerateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialEnumerateRequest.Unmarshal(m, b)
}
func (m *SdkCredentialEnumerateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialEnumerateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialEnumerateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialEnumerateRequest.Merge(dst, src)
}
func (m *SdkCredentialEnumerateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialEnumerateRequest.Size(m)
}
func (m *SdkCredentialEnumerateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialEnumerateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialEnumerateRequest proto.InternalMessageInfo

// Defines response for a enumeration of credentials
type SdkCredentialEnumerateResponse struct {
	// List of credentials
	CredentialIds        []string `protobuf:"bytes,1,rep,name=credential_ids,json=credentialIds" json:"credential_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialEnumerateResponse) Reset()         { *m = SdkCredentialEnumerateResponse{} }
func (m *SdkCredentialEnumerateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialEnumerateResponse) ProtoMessage()    {}
func (*SdkCredentialEnumerateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{131}
}
func (m *SdkCredentialEnumerateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialEnumerateResponse.Unmarshal(m, b)
}
func (m *SdkCredentialEnumerateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialEnumerateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialEnumerateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialEnumerateResponse.Merge(dst, src)
}
func (m *SdkCredentialEnumerateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialEnumerateResponse.Size(m)
}
func (m *SdkCredentialEnumerateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialEnumerateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialEnumerateResponse proto.InternalMessageInfo

func (m *SdkCredentialEnumerateResponse) GetCredentialIds() []string {
	if m != nil {
		return m.CredentialIds
	}
	return nil
}

// Defines the request to inspection for credentials
type SdkCredentialInspectRequest struct {
	// Id of the credential
	CredentialId         string   `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialInspectRequest) Reset()         { *m = SdkCredentialInspectRequest{} }
func (m *SdkCredentialInspectRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialInspectRequest) ProtoMessage()    {}
func (*SdkCredentialInspectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{132}
}
func (m *SdkCredentialInspectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialInspectRequest.Unmarshal(m, b)
}
func (m *SdkCredentialInspectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialInspectRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialInspectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialInspectRequest.Merge(dst, src)
}
func (m *SdkCredentialInspectRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialInspectRequest.Size(m)
}
func (m *SdkCredentialInspectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialInspectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialInspectRequest proto.InternalMessageInfo

func (m *SdkCredentialInspectRequest) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

// Defines the response to an inspection of a credential.
// This response uses OneOf proto style. Depending on your programming language
// you will need to check if the value of credential_type is one of the ones below.
type SdkCredentialInspectResponse struct {
	// Credential id
	CredentialId string `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	// Name of the credential
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// (optional) Name of bucket
	Bucket string `protobuf:"bytes,3,opt,name=bucket" json:"bucket,omitempty"`
	// Ownership of the credential
	Ownership *Ownership `protobuf:"bytes,4,opt,name=ownership" json:"ownership,omitempty"`
	// proxy flag for the credential
	UseProxy bool `protobuf:"varint,5,opt,name=use_proxy,json=useProxy" json:"use_proxy,omitempty"`
	// iamPolicy indicates if IAM creds must be used for access
	IamPolicy bool `protobuf:"varint,6,opt,name=iam_policy,json=iamPolicy" json:"iam_policy,omitempty"`
	// Start at field number 200 for expansion support
	//
	// Types that are valid to be assigned to CredentialType:
	//	*SdkCredentialInspectResponse_AwsCredential
	//	*SdkCredentialInspectResponse_AzureCredential
	//	*SdkCredentialInspectResponse_GoogleCredential
	//	*SdkCredentialInspectResponse_NfsCredential
	CredentialType       isSdkCredentialInspectResponse_CredentialType `protobuf_oneof:"credential_type"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *SdkCredentialInspectResponse) Reset()         { *m = SdkCredentialInspectResponse{} }
func (m *SdkCredentialInspectResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialInspectResponse) ProtoMessage()    {}
func (*SdkCredentialInspectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{133}
}
func (m *SdkCredentialInspectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialInspectResponse.Unmarshal(m, b)
}
func (m *SdkCredentialInspectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialInspectResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialInspectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialInspectResponse.Merge(dst, src)
}
func (m *SdkCredentialInspectResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialInspectResponse.Size(m)
}
func (m *SdkCredentialInspectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialInspectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialInspectResponse proto.InternalMessageInfo

type isSdkCredentialInspectResponse_CredentialType interface {
	isSdkCredentialInspectResponse_CredentialType()
}

type SdkCredentialInspectResponse_AwsCredential struct {
	AwsCredential *SdkAwsCredentialResponse `protobuf:"bytes,200,opt,name=aws_credential,json=awsCredential,oneof"`
}
type SdkCredentialInspectResponse_AzureCredential struct {
	AzureCredential *SdkAzureCredentialResponse `protobuf:"bytes,201,opt,name=azure_credential,json=azureCredential,oneof"`
}
type SdkCredentialInspectResponse_GoogleCredential struct {
	GoogleCredential *SdkGoogleCredentialResponse `protobuf:"bytes,202,opt,name=google_credential,json=googleCredential,oneof"`
}
type SdkCredentialInspectResponse_NfsCredential struct {
	NfsCredential *SdkNfsCredentialResponse `protobuf:"bytes,203,opt,name=nfs_credential,json=nfsCredential,oneof"`
}

func (*SdkCredentialInspectResponse_AwsCredential) isSdkCredentialInspectResponse_CredentialType()   {}
func (*SdkCredentialInspectResponse_AzureCredential) isSdkCredentialInspectResponse_CredentialType() {}
func (*SdkCredentialInspectResponse_GoogleCredential) isSdkCredentialInspectResponse_CredentialType() {
}
func (*SdkCredentialInspectResponse_NfsCredential) isSdkCredentialInspectResponse_CredentialType() {}

func (m *SdkCredentialInspectResponse) GetCredentialType() isSdkCredentialInspectResponse_CredentialType {
	if m != nil {
		return m.CredentialType
	}
	return nil
}

func (m *SdkCredentialInspectResponse) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

func (m *SdkCredentialInspectResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SdkCredentialInspectResponse) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *SdkCredentialInspectResponse) GetOwnership() *Ownership {
	if m != nil {
		return m.Ownership
	}
	return nil
}

func (m *SdkCredentialInspectResponse) GetUseProxy() bool {
	if m != nil {
		return m.UseProxy
	}
	return false
}

func (m *SdkCredentialInspectResponse) GetIamPolicy() bool {
	if m != nil {
		return m.IamPolicy
	}
	return false
}

func (m *SdkCredentialInspectResponse) GetAwsCredential() *SdkAwsCredentialResponse {
	if x, ok := m.GetCredentialType().(*SdkCredentialInspectResponse_AwsCredential); ok {
		return x.AwsCredential
	}
	return nil
}

func (m *SdkCredentialInspectResponse) GetAzureCredential() *SdkAzureCredentialResponse {
	if x, ok := m.GetCredentialType().(*SdkCredentialInspectResponse_AzureCredential); ok {
		return x.AzureCredential
	}
	return nil
}

func (m *SdkCredentialInspectResponse) GetGoogleCredential() *SdkGoogleCredentialResponse {
	if x, ok := m.GetCredentialType().(*SdkCredentialInspectResponse_GoogleCredential); ok {
		return x.GoogleCredential
	}
	return nil
}

func (m *SdkCredentialInspectResponse) GetNfsCredential() *SdkNfsCredentialResponse {
	if x, ok := m.GetCredentialType().(*SdkCredentialInspectResponse_NfsCredential); ok {
		return x.NfsCredential
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SdkCredentialInspectResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SdkCredentialInspectResponse_OneofMarshaler, _SdkCredentialInspectResponse_OneofUnmarshaler, _SdkCredentialInspectResponse_OneofSizer, []interface{}{
		(*SdkCredentialInspectResponse_AwsCredential)(nil),
		(*SdkCredentialInspectResponse_AzureCredential)(nil),
		(*SdkCredentialInspectResponse_GoogleCredential)(nil),
		(*SdkCredentialInspectResponse_NfsCredential)(nil),
	}
}

func _SdkCredentialInspectResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SdkCredentialInspectResponse)
	// credential_type
	switch x := m.CredentialType.(type) {
	case *SdkCredentialInspectResponse_AwsCredential:
		b.EncodeVarint(200<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AwsCredential); err != nil {
			return err
		}
	case *SdkCredentialInspectResponse_AzureCredential:
		b.EncodeVarint(201<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AzureCredential); err != nil {
			return err
		}
	case *SdkCredentialInspectResponse_GoogleCredential:
		b.EncodeVarint(202<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GoogleCredential); err != nil {
			return err
		}
	case *SdkCredentialInspectResponse_NfsCredential:
		b.EncodeVarint(203<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NfsCredential); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SdkCredentialInspectResponse.CredentialType has unexpected type %T", x)
	}
	return nil
}

func _SdkCredentialInspectResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SdkCredentialInspectResponse)
	switch tag {
	case 200: // credential_type.aws_credential
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkAwsCredentialResponse)
		err := b.DecodeMessage(msg)
		m.CredentialType = &SdkCredentialInspectResponse_AwsCredential{msg}
		return true, err
	case 201: // credential_type.azure_credential
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkAzureCredentialResponse)
		err := b.DecodeMessage(msg)
		m.CredentialType = &SdkCredentialInspectResponse_AzureCredential{msg}
		return true, err
	case 202: // credential_type.google_credential
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkGoogleCredentialResponse)
		err := b.DecodeMessage(msg)
		m.CredentialType = &SdkCredentialInspectResponse_GoogleCredential{msg}
		return true, err
	case 203: // credential_type.nfs_credential
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkNfsCredentialResponse)
		err := b.DecodeMessage(msg)
		m.CredentialType = &SdkCredentialInspectResponse_NfsCredential{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SdkCredentialInspectResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SdkCredentialInspectResponse)
	// credential_type
	switch x := m.CredentialType.(type) {
	case *SdkCredentialInspectResponse_AwsCredential:
		s := proto.Size(x.AwsCredential)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SdkCredentialInspectResponse_AzureCredential:
		s := proto.Size(x.AzureCredential)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SdkCredentialInspectResponse_GoogleCredential:
		s := proto.Size(x.GoogleCredential)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SdkCredentialInspectResponse_NfsCredential:
		s := proto.Size(x.NfsCredential)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Defines the request to delete credentials
type SdkCredentialDeleteRequest struct {
	// Id for credentials
	CredentialId         string   `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialDeleteRequest) Reset()         { *m = SdkCredentialDeleteRequest{} }
func (m *SdkCredentialDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialDeleteRequest) ProtoMessage()    {}
func (*SdkCredentialDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{134}
}
func (m *SdkCredentialDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialDeleteRequest.Unmarshal(m, b)
}
func (m *SdkCredentialDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialDeleteRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialDeleteRequest.Merge(dst, src)
}
func (m *SdkCredentialDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialDeleteRequest.Size(m)
}
func (m *SdkCredentialDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialDeleteRequest proto.InternalMessageInfo

func (m *SdkCredentialDeleteRequest) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

// Empty response
type SdkCredentialDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialDeleteResponse) Reset()         { *m = SdkCredentialDeleteResponse{} }
func (m *SdkCredentialDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialDeleteResponse) ProtoMessage()    {}
func (*SdkCredentialDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{135}
}
func (m *SdkCredentialDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialDeleteResponse.Unmarshal(m, b)
}
func (m *SdkCredentialDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialDeleteResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialDeleteResponse.Merge(dst, src)
}
func (m *SdkCredentialDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialDeleteResponse.Size(m)
}
func (m *SdkCredentialDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialDeleteResponse proto.InternalMessageInfo

// Defines a request to validate credentials
type SdkCredentialValidateRequest struct {
	// Id of the credentials
	CredentialId         string   `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialValidateRequest) Reset()         { *m = SdkCredentialValidateRequest{} }
func (m *SdkCredentialValidateRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialValidateRequest) ProtoMessage()    {}
func (*SdkCredentialValidateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{136}
}
func (m *SdkCredentialValidateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialValidateRequest.Unmarshal(m, b)
}
func (m *SdkCredentialValidateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialValidateRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialValidateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialValidateRequest.Merge(dst, src)
}
func (m *SdkCredentialValidateRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialValidateRequest.Size(m)
}
func (m *SdkCredentialValidateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialValidateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialValidateRequest proto.InternalMessageInfo

func (m *SdkCredentialValidateRequest) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

// Empty response
type SdkCredentialValidateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialValidateResponse) Reset()         { *m = SdkCredentialValidateResponse{} }
func (m *SdkCredentialValidateResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialValidateResponse) ProtoMessage()    {}
func (*SdkCredentialValidateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{137}
}
func (m *SdkCredentialValidateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialValidateResponse.Unmarshal(m, b)
}
func (m *SdkCredentialValidateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialValidateResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialValidateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialValidateResponse.Merge(dst, src)
}
func (m *SdkCredentialValidateResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialValidateResponse.Size(m)
}
func (m *SdkCredentialValidateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialValidateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialValidateResponse proto.InternalMessageInfo

// Defines a request to remove any references to credentials
type SdkCredentialDeleteReferencesRequest struct {
	// Id of the credentials
	CredentialId         string   `protobuf:"bytes,1,opt,name=credential_id,json=credentialId" json:"credential_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialDeleteReferencesRequest) Reset()         { *m = SdkCredentialDeleteReferencesRequest{} }
func (m *SdkCredentialDeleteReferencesRequest) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialDeleteReferencesRequest) ProtoMessage()    {}
func (*SdkCredentialDeleteReferencesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{138}
}
func (m *SdkCredentialDeleteReferencesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialDeleteReferencesRequest.Unmarshal(m, b)
}
func (m *SdkCredentialDeleteReferencesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialDeleteReferencesRequest.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialDeleteReferencesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialDeleteReferencesRequest.Merge(dst, src)
}
func (m *SdkCredentialDeleteReferencesRequest) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialDeleteReferencesRequest.Size(m)
}
func (m *SdkCredentialDeleteReferencesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialDeleteReferencesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialDeleteReferencesRequest proto.InternalMessageInfo

func (m *SdkCredentialDeleteReferencesRequest) GetCredentialId() string {
	if m != nil {
		return m.CredentialId
	}
	return ""
}

// Empty response
type SdkCredentialDeleteReferencesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkCredentialDeleteReferencesResponse) Reset()         { *m = SdkCredentialDeleteReferencesResponse{} }
func (m *SdkCredentialDeleteReferencesResponse) String() string { return proto.CompactTextString(m) }
func (*SdkCredentialDeleteReferencesResponse) ProtoMessage()    {}
func (*SdkCredentialDeleteReferencesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{139}
}
func (m *SdkCredentialDeleteReferencesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkCredentialDeleteReferencesResponse.Unmarshal(m, b)
}
func (m *SdkCredentialDeleteReferencesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkCredentialDeleteReferencesResponse.Marshal(b, m, deterministic)
}
func (dst *SdkCredentialDeleteReferencesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkCredentialDeleteReferencesResponse.Merge(dst, src)
}
func (m *SdkCredentialDeleteReferencesResponse) XXX_Size() int {
	return xxx_messageInfo_SdkCredentialDeleteReferencesResponse.Size(m)
}
func (m *SdkCredentialDeleteReferencesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkCredentialDeleteReferencesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SdkCredentialDeleteReferencesResponse proto.InternalMessageInfo

// Options to attach device
type SdkVolumeAttachOptions struct {
	// Indicates the name of the secret stored in a secret store
	// In case of Hashicorp's Vault, it will be the key from the key-value pair stored in its kv backend.
	// In case of Kubernetes secret, it is the name of the secret object itself
	SecretName string `protobuf:"bytes,1,opt,name=secret_name,json=secretName" json:"secret_name,omitempty"`
	// In case of Kubernetes, this will be the key stored in the Kubernetes secret
	SecretKey string `protobuf:"bytes,2,opt,name=secret_key,json=secretKey" json:"secret_key,omitempty"`
	// It indicates the additional context which could be used to retrieve the secret.
	// In case of Kubernetes, this is the namespace in which the secret is created.
	SecretContext string `protobuf:"bytes,3,opt,name=secret_context,json=secretContext" json:"secret_context,omitempty"`
	// Indicates whether fastpath needs to be enabled during attach
	Fastpath             string   `protobuf:"bytes,4,opt,name=fastpath" json:"fastpath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkVolumeAttachOptions) Reset()         { *m = SdkVolumeAttachOptions{} }
func (m *SdkVolumeAttachOptions) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeAttachOptions) ProtoMessage()    {}
func (*SdkVolumeAttachOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{140}
}
func (m *SdkVolumeAttachOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeAttachOptions.Unmarshal(m, b)
}
func (m *SdkVolumeAttachOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeAttachOptions.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeAttachOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeAttachOptions.Merge(dst, src)
}
func (m *SdkVolumeAttachOptions) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeAttachOptions.Size(m)
}
func (m *SdkVolumeAttachOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeAttachOptions.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeAttachOptions proto.InternalMessageInfo

func (m *SdkVolumeAttachOptions) GetSecretName() string {
	if m != nil {
		return m.SecretName
	}
	return ""
}

func (m *SdkVolumeAttachOptions) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *SdkVolumeAttachOptions) GetSecretContext() string {
	if m != nil {
		return m.SecretContext
	}
	return ""
}

func (m *SdkVolumeAttachOptions) GetFastpath() string {
	if m != nil {
		return m.Fastpath
	}
	return ""
}

// Defines a request to mount a volume to the node receiving this request
type SdkVolumeMountRequest struct {
	// Id of the volume
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	// Mount path for mounting the volume.
	MountPath string `protobuf:"bytes,2,opt,name=mount_path,json=mountPath" json:"mount_path,omitempty"`
	// Options to attach device
	Options *SdkVolumeAttachOptions `protobuf:"bytes,3,opt,name=options" json:"options,omitempty"`
	// The following options are private to the driver plugin running the
	// OpenStorage SDK. Contact your driver developer for any special
	// values that need to be provided here.
	DriverOptions        map[string]string `protobuf:"bytes,4,rep,name=driver_options,json=driverOptions" json:"driver_options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SdkVolumeMountRequest) Reset()         { *m = SdkVolumeMountRequest{} }
func (m *SdkVolumeMountRequest) String() string { return proto.CompactTextString(m) }
func (*SdkVolumeMountRequest) ProtoMessage()    {}
func (*SdkVolumeMountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_bc0eb0e06839944e, []int{141}
}
func (m *SdkVolumeMountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkVolumeMountRequest.Unmarshal(m, b)
}
func (m *SdkVolumeMountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkVolumeMountRequest.Marshal(b, m, deterministic)
}
func (dst *SdkVolumeMountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkVolumeMountRequest.Merge(dst, src)
}
func (m *SdkVolumeMountRequest) XXX_Size() int {
	return xxx_messageInfo_SdkVolumeMountRequest.Size(m)
}
func (m *SdkVolumeMountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkVolumeMountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SdkVolumeMountRequest proto.InternalMessageInfo

func (m *SdkVolumeMountRequest) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *SdkVolumeMountRequest) GetMountPath() string {
	if m != nil {
		return m.MountPath
	}
	return ""
}

func (m *SdkVolumeMountRequest) GetOptions() *SdkVolumeAttachOptions {
	if m != 